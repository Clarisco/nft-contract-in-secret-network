{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.1","compilation":{"directory":"/home/clarisco/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.3","program":"/home/clarisco/.rustup/toolchains/stable-x86_64-unknown-linux-gnu/bin/rls","arguments":["--crate-name","secp256k1","/home/clarisco/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.3/src/lib.rs","--json=diagnostic-rendered-ansi","--crate-type","lib","--emit=dep-info,metadata","-C","embed-bitcode=no","-C","debuginfo=2","--cfg","feature=\"default\"","--cfg","feature=\"std\"","-C","metadata=4c5a8983f724cb0a","-C","extra-filename=-4c5a8983f724cb0a","--out-dir","/home/clarisco/Desktop/nftsgit/target/rls/debug/deps","-L","dependency=/home/clarisco/Desktop/nftsgit/target/rls/debug/deps","--extern","secp256k1_sys=/home/clarisco/Desktop/nftsgit/target/rls/debug/deps/libsecp256k1_sys-d887c2515bb88411.rmeta","--cap-lints","allow","-L","native=/home/clarisco/Desktop/nftsgit/target/rls/debug/build/secp256k1-sys-6aa019be0a1d5c30/out","--error-format=json","--sysroot","/home/clarisco/.rustup/toolchains/stable-x86_64-unknown-linux-gnu"],"output":"/home/clarisco/Desktop/nftsgit/target/rls/debug/deps/libsecp256k1-4c5a8983f724cb0a.rmeta"},"prelude":{"crate_id":{"name":"secp256k1","disambiguator":[9399843947447401050,0]},"crate_root":"/home/clarisco/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.3/src","external_crates":[{"file_name":"/home/clarisco/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.3/src/lib.rs","num":1,"id":{"name":"std","disambiguator":[12872056181829019095,0]}},{"file_name":"/home/clarisco/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.3/src/lib.rs","num":2,"id":{"name":"core","disambiguator":[8373705112501149482,0]}},{"file_name":"/home/clarisco/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.3/src/lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[16909867051943430517,0]}},{"file_name":"/home/clarisco/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.3/src/lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[11260902004430380252,0]}},{"file_name":"/home/clarisco/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.3/src/lib.rs","num":5,"id":{"name":"alloc","disambiguator":[10608756751411298727,0]}},{"file_name":"/home/clarisco/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.3/src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[4369074810188542311,0]}},{"file_name":"/home/clarisco/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.3/src/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[12333111663820923515,0]}},{"file_name":"/home/clarisco/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.3/src/lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[12748886438148098175,0]}},{"file_name":"/home/clarisco/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.3/src/lib.rs","num":9,"id":{"name":"hashbrown","disambiguator":[6627577059144635863,0]}},{"file_name":"/home/clarisco/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.3/src/lib.rs","num":10,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[15896330838049133250,0]}},{"file_name":"/home/clarisco/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.3/src/lib.rs","num":11,"id":{"name":"rustc_demangle","disambiguator":[2582212836281766037,0]}},{"file_name":"/home/clarisco/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.3/src/lib.rs","num":12,"id":{"name":"std_detect","disambiguator":[4723863376138925013,0]}},{"file_name":"/home/clarisco/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.3/src/lib.rs","num":13,"id":{"name":"addr2line","disambiguator":[2482912266844122781,0]}},{"file_name":"/home/clarisco/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.3/src/lib.rs","num":14,"id":{"name":"gimli","disambiguator":[16993901708144586312,0]}},{"file_name":"/home/clarisco/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.3/src/lib.rs","num":15,"id":{"name":"object","disambiguator":[15622067442351408235,0]}},{"file_name":"/home/clarisco/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.3/src/lib.rs","num":16,"id":{"name":"memchr","disambiguator":[12927959315880918009,0]}},{"file_name":"/home/clarisco/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.3/src/lib.rs","num":17,"id":{"name":"miniz_oxide","disambiguator":[1763799641200411356,0]}},{"file_name":"/home/clarisco/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.3/src/lib.rs","num":18,"id":{"name":"adler","disambiguator":[2454364557606196642,0]}},{"file_name":"/home/clarisco/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.3/src/lib.rs","num":19,"id":{"name":"panic_unwind","disambiguator":[10980657607002924382,0]}},{"file_name":"/home/clarisco/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.3/src/lib.rs","num":20,"id":{"name":"secp256k1_sys","disambiguator":[11878400578617710804,0]}}],"span":{"file_name":"/home/clarisco/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.3/src/lib.rs","byte_start":502,"byte_end":52053,"line_start":16,"line_end":1387,"column_start":1,"column_end":2}},"imports":[{"kind":"Use","ref_id":{"krate":20,"index":0},"span":{"file_name":"/home/clarisco/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.3/src/lib.rs","byte_start":5484,"byte_end":5497,"line_start":127,"line_end":127,"column_start":9,"column_end":22},"alias_span":null,"name":"ffi","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":283},"span":{"file_name":"/home/clarisco/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.3/src/lib.rs","byte_start":6308,"byte_end":6317,"line_start":154,"line_end":154,"column_start":14,"column_end":23},"alias_span":null,"name":"SecretKey","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":687},"span":{"file_name":"/home/clarisco/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.3/src/lib.rs","byte_start":6332,"byte_end":6341,"line_start":155,"line_end":155,"column_start":14,"column_end":23},"alias_span":null,"name":"PublicKey","value":"","parent":{"krate":0,"index":0}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/home/clarisco/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.3/src/lib.rs","byte_start":6360,"byte_end":6361,"line_start":156,"line_end":156,"column_start":18,"column_end":19},"alias_span":null,"name":"*","value":"Verification, Signing, Context","parent":{"krate":0,"index":0}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/home/clarisco/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.3/src/lib.rs","byte_start":502,"byte_end":52053,"line_start":16,"line_end":1387,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"/home/clarisco/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.3/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":4},{"krate":0,"index":7},{"krate":0,"index":8},{"krate":0,"index":9},{"krate":0,"index":12},{"krate":0,"index":15},{"krate":0,"index":18},{"krate":0,"index":21},{"krate":0,"index":164},{"krate":0,"index":182},{"krate":0,"index":242},{"krate":0,"index":346},{"krate":0,"index":463},{"krate":0,"index":466},{"krate":0,"index":469},{"krate":0,"index":470},{"krate":0,"index":471},{"krate":0,"index":473},{"krate":0,"index":476},{"krate":0,"index":479},{"krate":0,"index":480},{"krate":0,"index":483},{"krate":0,"index":789},{"krate":0,"index":792},{"krate":0,"index":793},{"krate":0,"index":795},{"krate":0,"index":796},{"krate":0,"index":799},{"krate":0,"index":800},{"krate":0,"index":802},{"krate":0,"index":806},{"krate":0,"index":807},{"krate":0,"index":486},{"krate":0,"index":488},{"krate":0,"index":490},{"krate":0,"index":494},{"krate":0,"index":497},{"krate":0,"index":505},{"krate":0,"index":516},{"krate":0,"index":520},{"krate":0,"index":522},{"krate":0,"index":810},{"krate":0,"index":811},{"krate":0,"index":816},{"krate":0,"index":820},{"krate":0,"index":822},{"krate":0,"index":823},{"krate":0,"index":825},{"krate":0,"index":827},{"krate":0,"index":829},{"krate":0,"index":832},{"krate":0,"index":835},{"krate":0,"index":838},{"krate":0,"index":841},{"krate":0,"index":844},{"krate":0,"index":848},{"krate":0,"index":526},{"krate":0,"index":529},{"krate":0,"index":850},{"krate":0,"index":869},{"krate":0,"index":870},{"krate":0,"index":871},{"krate":0,"index":873},{"krate":0,"index":874},{"krate":0,"index":876},{"krate":0,"index":878},{"krate":0,"index":880},{"krate":0,"index":883},{"krate":0,"index":885},{"krate":0,"index":532},{"krate":0,"index":534},{"krate":0,"index":536},{"krate":0,"index":537},{"krate":0,"index":542},{"krate":0,"index":544},{"krate":0,"index":546},{"krate":0,"index":549},{"krate":0,"index":552},{"krate":0,"index":554},{"krate":0,"index":556},{"krate":0,"index":559},{"krate":0,"index":560},{"krate":0,"index":562},{"krate":0,"index":565},{"krate":0,"index":568},{"krate":0,"index":574},{"krate":0,"index":576},{"krate":0,"index":578},{"krate":0,"index":588},{"krate":0,"index":591}],"decl_id":null,"docs":" # Secp256k1\n Rust bindings for Pieter Wuille's secp256k1 library, which is used for\n fast and accurate manipulation of ECDSA signatures on the secp256k1\n curve. Such signatures are used extensively by the Bitcoin network\n and its derivatives.","sig":null,"attributes":[{"value":"/ # Secp256k1","span":{"file_name":"/home/clarisco/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.3/src/lib.rs","byte_start":502,"byte_end":517,"line_start":16,"line_end":16,"column_start":1,"column_end":16}},{"value":"/ Rust bindings for Pieter Wuille's secp256k1 library, which is used for","span":{"file_name":"/home/clarisco/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.3/src/lib.rs","byte_start":518,"byte_end":592,"line_start":17,"line_end":17,"column_start":1,"column_end":75}},{"value":"/ fast and accurate manipulation of ECDSA signatures on the secp256k1","span":{"file_name":"/home/clarisco/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.3/src/lib.rs","byte_start":593,"byte_end":664,"line_start":18,"line_end":18,"column_start":1,"column_end":72}},{"value":"/ curve. Such signatures are used extensively by the Bitcoin network","span":{"file_name":"/home/clarisco/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.3/src/lib.rs","byte_start":665,"byte_end":735,"line_start":19,"line_end":19,"column_start":1,"column_end":71}},{"value":"/ and its derivatives.","span":{"file_name":"/home/clarisco/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.3/src/lib.rs","byte_start":736,"byte_end":760,"line_start":20,"line_end":20,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/clarisco/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.3/src/lib.rs","byte_start":761,"byte_end":764,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ To minimize dependencies, some functions are feature-gated. To generate","span":{"file_name":"/home/clarisco/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.3/src/lib.rs","byte_start":765,"byte_end":840,"line_start":22,"line_end":22,"column_start":1,"column_end":76}},{"value":"/ random keys or to re-randomize a context object, compile with the \"rand\"","span":{"file_name":"/home/clarisco/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.3/src/lib.rs","byte_start":841,"byte_end":917,"line_start":23,"line_end":23,"column_start":1,"column_end":77}},{"value":"/ feature. To de/serialize objects with serde, compile with \"serde\".","span":{"file_name":"/home/clarisco/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.3/src/lib.rs","byte_start":918,"byte_end":988,"line_start":24,"line_end":24,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"/home/clarisco/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.3/src/lib.rs","byte_start":989,"byte_end":992,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ Where possible, the bindings use the Rust type system to ensure that","span":{"file_name":"/home/clarisco/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.3/src/lib.rs","byte_start":993,"byte_end":1065,"line_start":26,"line_end":26,"column_start":1,"column_end":73}},{"value":"/ API usage errors are impossible. For example, the library uses context","span":{"file_name":"/home/clarisco/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.3/src/lib.rs","byte_start":1066,"byte_end":1140,"line_start":27,"line_end":27,"column_start":1,"column_end":75}},{"value":"/ objects that contain precomputation tables which are created on object","span":{"file_name":"/home/clarisco/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.3/src/lib.rs","byte_start":1141,"byte_end":1215,"line_start":28,"line_end":28,"column_start":1,"column_end":75}},{"value":"/ construction. Since this is a slow operation (10+ milliseconds, vs ~50","span":{"file_name":"/home/clarisco/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.3/src/lib.rs","byte_start":1216,"byte_end":1290,"line_start":29,"line_end":29,"column_start":1,"column_end":75}},{"value":"/ microseconds for typical crypto operations, on a 2.70 Ghz i7-6820HQ)","span":{"file_name":"/home/clarisco/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.3/src/lib.rs","byte_start":1291,"byte_end":1363,"line_start":30,"line_end":30,"column_start":1,"column_end":73}},{"value":"/ the tables are optional, giving a performance boost for users who only","span":{"file_name":"/home/clarisco/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.3/src/lib.rs","byte_start":1364,"byte_end":1438,"line_start":31,"line_end":31,"column_start":1,"column_end":75}},{"value":"/ care about signing, only care about verification, or only care about","span":{"file_name":"/home/clarisco/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.3/src/lib.rs","byte_start":1439,"byte_end":1511,"line_start":32,"line_end":32,"column_start":1,"column_end":73}},{"value":"/ parsing. In the upstream library, if you attempt to sign a message using","span":{"file_name":"/home/clarisco/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.3/src/lib.rs","byte_start":1512,"byte_end":1588,"line_start":33,"line_end":33,"column_start":1,"column_end":77}},{"value":"/ a context that does not support this, it will trigger an assertion","span":{"file_name":"/home/clarisco/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.3/src/lib.rs","byte_start":1589,"byte_end":1659,"line_start":34,"line_end":34,"column_start":1,"column_end":71}},{"value":"/ failure and terminate the program. In `rust-secp256k1`, this is caught","span":{"file_name":"/home/clarisco/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.3/src/lib.rs","byte_start":1660,"byte_end":1734,"line_start":35,"line_end":35,"column_start":1,"column_end":75}},{"value":"/ at compile-time; in fact, it is impossible to compile code that will","span":{"file_name":"/home/clarisco/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.3/src/lib.rs","byte_start":1735,"byte_end":1807,"line_start":36,"line_end":36,"column_start":1,"column_end":73}},{"value":"/ trigger any assertion failures in the upstream library.","span":{"file_name":"/home/clarisco/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.3/src/lib.rs","byte_start":1808,"byte_end":1867,"line_start":37,"line_end":37,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"/home/clarisco/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.3/src/lib.rs","byte_start":1868,"byte_end":1871,"line_start":38,"line_end":38,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/home/clarisco/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.3/src/lib.rs","byte_start":1872,"byte_end":1883,"line_start":39,"line_end":39,"column_start":1,"column_end":12}},{"value":"/ # #[cfg(all(feature=\"rand\", feature=\"bitcoin_hashes\"))] {","span":{"file_name":"/home/clarisco/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.3/src/lib.rs","byte_start":1884,"byte_end":1945,"line_start":40,"line_end":40,"column_start":1,"column_end":62}},{"value":"/ use secp256k1::rand::rngs::OsRng;","span":{"file_name":"/home/clarisco/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.3/src/lib.rs","byte_start":1946,"byte_end":1983,"line_start":41,"line_end":41,"column_start":1,"column_end":38}},{"value":"/ use secp256k1::{Secp256k1, Message};","span":{"file_name":"/home/clarisco/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.3/src/lib.rs","byte_start":1984,"byte_end":2024,"line_start":42,"line_end":42,"column_start":1,"column_end":41}},{"value":"/ use secp256k1::bitcoin_hashes::sha256;","span":{"file_name":"/home/clarisco/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.3/src/lib.rs","byte_start":2025,"byte_end":2067,"line_start":43,"line_end":43,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/home/clarisco/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.3/src/lib.rs","byte_start":2068,"byte_end":2071,"line_start":44,"line_end":44,"column_start":1,"column_end":4}},{"value":"/ let secp = Secp256k1::new();","span":{"file_name":"/home/clarisco/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.3/src/lib.rs","byte_start":2072,"byte_end":2104,"line_start":45,"line_end":45,"column_start":1,"column_end":33}},{"value":"/ let mut rng = OsRng::new().expect(\"OsRng\");","span":{"file_name":"/home/clarisco/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.3/src/lib.rs","byte_start":2105,"byte_end":2152,"line_start":46,"line_end":46,"column_start":1,"column_end":48}},{"value":"/ let (secret_key, public_key) = secp.generate_keypair(&mut rng);","span":{"file_name":"/home/clarisco/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.3/src/lib.rs","byte_start":2153,"byte_end":2220,"line_start":47,"line_end":47,"column_start":1,"column_end":68}},{"value":"/ let message = Message::from_hashed_data::<sha256::Hash>(\"Hello World!\".as_bytes());","span":{"file_name":"/home/clarisco/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.3/src/lib.rs","byte_start":2221,"byte_end":2308,"line_start":48,"line_end":48,"column_start":1,"column_end":88}},{"value":"/","span":{"file_name":"/home/clarisco/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.3/src/lib.rs","byte_start":2309,"byte_end":2312,"line_start":49,"line_end":49,"column_start":1,"column_end":4}},{"value":"/ let sig = secp.sign(&message, &secret_key);","span":{"file_name":"/home/clarisco/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.3/src/lib.rs","byte_start":2313,"byte_end":2360,"line_start":50,"line_end":50,"column_start":1,"column_end":48}},{"value":"/ assert!(secp.verify(&message, &sig, &public_key).is_ok());","span":{"file_name":"/home/clarisco/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.3/src/lib.rs","byte_start":2361,"byte_end":2423,"line_start":51,"line_end":51,"column_start":1,"column_end":63}},{"value":"/ # }","span":{"file_name":"/home/clarisco/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.3/src/lib.rs","byte_start":2424,"byte_end":2431,"line_start":52,"line_end":52,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/clarisco/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.3/src/lib.rs","byte_start":2432,"byte_end":2439,"line_start":53,"line_end":53,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/clarisco/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.3/src/lib.rs","byte_start":2440,"byte_end":2443,"line_start":54,"line_end":54,"column_start":1,"column_end":4}},{"value":"/ The above code requires `rust-secp256k1` to be compiled with the `rand` and `bitcoin_hashes`","span":{"file_name":"/home/clarisco/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.3/src/lib.rs","byte_start":2444,"byte_end":2540,"line_start":55,"line_end":55,"column_start":1,"column_end":97}},{"value":"/ feature enabled, to get access to [`generate_keypair`](struct.Secp256k1.html#method.generate_keypair)","span":{"file_name":"/home/clarisco/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.3/src/lib.rs","byte_start":2541,"byte_end":2646,"line_start":56,"line_end":56,"column_start":1,"column_end":106}},{"value":"/ Alternately, keys and messages can be parsed from slices, like","span":{"file_name":"/home/clarisco/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.3/src/lib.rs","byte_start":2647,"byte_end":2713,"line_start":57,"line_end":57,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"/home/clarisco/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.3/src/lib.rs","byte_start":2714,"byte_end":2717,"line_start":58,"line_end":58,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/home/clarisco/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.3/src/lib.rs","byte_start":2718,"byte_end":2729,"line_start":59,"line_end":59,"column_start":1,"column_end":12}},{"value":"/ use self::secp256k1::{Secp256k1, Message, SecretKey, PublicKey};","span":{"file_name":"/home/clarisco/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.3/src/lib.rs","byte_start":2730,"byte_end":2798,"line_start":60,"line_end":60,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"/home/clarisco/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.3/src/lib.rs","byte_start":2799,"byte_end":2802,"line_start":61,"line_end":61,"column_start":1,"column_end":4}},{"value":"/ let secp = Secp256k1::new();","span":{"file_name":"/home/clarisco/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.3/src/lib.rs","byte_start":2803,"byte_end":2835,"line_start":62,"line_end":62,"column_start":1,"column_end":33}},{"value":"/ let secret_key = SecretKey::from_slice(&[0xcd; 32]).expect(\"32 bytes, within curve order\");","span":{"file_name":"/home/clarisco/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.3/src/lib.rs","byte_start":2836,"byte_end":2931,"line_start":63,"line_end":63,"column_start":1,"column_end":96}},{"value":"/ let public_key = PublicKey::from_secret_key(&secp, &secret_key);","span":{"file_name":"/home/clarisco/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.3/src/lib.rs","byte_start":2932,"byte_end":3000,"line_start":64,"line_end":64,"column_start":1,"column_end":69}},{"value":"/ // This is unsafe unless the supplied byte slice is the output of a cryptographic hash function.","span":{"file_name":"/home/clarisco/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.3/src/lib.rs","byte_start":3001,"byte_end":3101,"line_start":65,"line_end":65,"column_start":1,"column_end":101}},{"value":"/ // See the above example for how to use this library together with bitcoin_hashes.","span":{"file_name":"/home/clarisco/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.3/src/lib.rs","byte_start":3102,"byte_end":3188,"line_start":66,"line_end":66,"column_start":1,"column_end":87}},{"value":"/ let message = Message::from_slice(&[0xab; 32]).expect(\"32 bytes\");","span":{"file_name":"/home/clarisco/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.3/src/lib.rs","byte_start":3189,"byte_end":3259,"line_start":67,"line_end":67,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"/home/clarisco/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.3/src/lib.rs","byte_start":3260,"byte_end":3263,"line_start":68,"line_end":68,"column_start":1,"column_end":4}},{"value":"/ let sig = secp.sign(&message, &secret_key);","span":{"file_name":"/home/clarisco/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.3/src/lib.rs","byte_start":3264,"byte_end":3311,"line_start":69,"line_end":69,"column_start":1,"column_end":48}},{"value":"/ assert!(secp.verify(&message, &sig, &public_key).is_ok());","span":{"file_name":"/home/clarisco/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.3/src/lib.rs","byte_start":3312,"byte_end":3374,"line_start":70,"line_end":70,"column_start":1,"column_end":63}},{"value":"/ ```","span":{"file_name":"/home/clarisco/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.3/src/lib.rs","byte_start":3375,"byte_end":3382,"line_start":71,"line_end":71,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/clarisco/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.3/src/lib.rs","byte_start":3383,"byte_end":3386,"line_start":72,"line_end":72,"column_start":1,"column_end":4}},{"value":"/ Users who only want to verify signatures can use a cheaper context, like so:","span":{"file_name":"/home/clarisco/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.3/src/lib.rs","byte_start":3387,"byte_end":3467,"line_start":73,"line_end":73,"column_start":1,"column_end":81}},{"value":"/","span":{"file_name":"/home/clarisco/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.3/src/lib.rs","byte_start":3468,"byte_end":3471,"line_start":74,"line_end":74,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/home/clarisco/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.3/src/lib.rs","byte_start":3472,"byte_end":3483,"line_start":75,"line_end":75,"column_start":1,"column_end":12}},{"value":"/ use secp256k1::{Secp256k1, Message, Signature, PublicKey};","span":{"file_name":"/home/clarisco/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.3/src/lib.rs","byte_start":3484,"byte_end":3546,"line_start":76,"line_end":76,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"/home/clarisco/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.3/src/lib.rs","byte_start":3547,"byte_end":3550,"line_start":77,"line_end":77,"column_start":1,"column_end":4}},{"value":"/ let secp = Secp256k1::verification_only();","span":{"file_name":"/home/clarisco/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.3/src/lib.rs","byte_start":3551,"byte_end":3597,"line_start":78,"line_end":78,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/home/clarisco/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.3/src/lib.rs","byte_start":3598,"byte_end":3601,"line_start":79,"line_end":79,"column_start":1,"column_end":4}},{"value":"/ let public_key = PublicKey::from_slice(&[","span":{"file_name":"/home/clarisco/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.3/src/lib.rs","byte_start":3602,"byte_end":3647,"line_start":80,"line_end":80,"column_start":1,"column_end":46}},{"value":"/     0x02,","span":{"file_name":"/home/clarisco/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.3/src/lib.rs","byte_start":3648,"byte_end":3661,"line_start":81,"line_end":81,"column_start":1,"column_end":14}},{"value":"/     0xc6, 0x6e, 0x7d, 0x89, 0x66, 0xb5, 0xc5, 0x55,","span":{"file_name":"/home/clarisco/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.3/src/lib.rs","byte_start":3662,"byte_end":3717,"line_start":82,"line_end":82,"column_start":1,"column_end":56}},{"value":"/     0xaf, 0x58, 0x05, 0x98, 0x9d, 0xa9, 0xfb, 0xf8,","span":{"file_name":"/home/clarisco/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.3/src/lib.rs","byte_start":3718,"byte_end":3773,"line_start":83,"line_end":83,"column_start":1,"column_end":56}},{"value":"/     0xdb, 0x95, 0xe1, 0x56, 0x31, 0xce, 0x35, 0x8c,","span":{"file_name":"/home/clarisco/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.3/src/lib.rs","byte_start":3774,"byte_end":3829,"line_start":84,"line_end":84,"column_start":1,"column_end":56}},{"value":"/     0x3a, 0x17, 0x10, 0xc9, 0x62, 0x67, 0x90, 0x63,","span":{"file_name":"/home/clarisco/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.3/src/lib.rs","byte_start":3830,"byte_end":3885,"line_start":85,"line_end":85,"column_start":1,"column_end":56}},{"value":"/ ]).expect(\"public keys must be 33 or 65 bytes, serialized according to SEC 2\");","span":{"file_name":"/home/clarisco/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.3/src/lib.rs","byte_start":3886,"byte_end":3969,"line_start":86,"line_end":86,"column_start":1,"column_end":84}},{"value":"/","span":{"file_name":"/home/clarisco/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.3/src/lib.rs","byte_start":3970,"byte_end":3973,"line_start":87,"line_end":87,"column_start":1,"column_end":4}},{"value":"/ let message = Message::from_slice(&[","span":{"file_name":"/home/clarisco/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.3/src/lib.rs","byte_start":3974,"byte_end":4014,"line_start":88,"line_end":88,"column_start":1,"column_end":41}},{"value":"/     0xaa, 0xdf, 0x7d, 0xe7, 0x82, 0x03, 0x4f, 0xbe,","span":{"file_name":"/home/clarisco/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.3/src/lib.rs","byte_start":4015,"byte_end":4070,"line_start":89,"line_end":89,"column_start":1,"column_end":56}},{"value":"/     0x3d, 0x3d, 0xb2, 0xcb, 0x13, 0xc0, 0xcd, 0x91,","span":{"file_name":"/home/clarisco/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.3/src/lib.rs","byte_start":4071,"byte_end":4126,"line_start":90,"line_end":90,"column_start":1,"column_end":56}},{"value":"/     0xbf, 0x41, 0xcb, 0x08, 0xfa, 0xc7, 0xbd, 0x61,","span":{"file_name":"/home/clarisco/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.3/src/lib.rs","byte_start":4127,"byte_end":4182,"line_start":91,"line_end":91,"column_start":1,"column_end":56}},{"value":"/     0xd5, 0x44, 0x53, 0xcf, 0x6e, 0x82, 0xb4, 0x50,","span":{"file_name":"/home/clarisco/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.3/src/lib.rs","byte_start":4183,"byte_end":4238,"line_start":92,"line_end":92,"column_start":1,"column_end":56}},{"value":"/ ]).expect(\"messages must be 32 bytes and are expected to be hashes\");","span":{"file_name":"/home/clarisco/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.3/src/lib.rs","byte_start":4239,"byte_end":4312,"line_start":93,"line_end":93,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"/home/clarisco/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.3/src/lib.rs","byte_start":4313,"byte_end":4316,"line_start":94,"line_end":94,"column_start":1,"column_end":4}},{"value":"/ let sig = Signature::from_compact(&[","span":{"file_name":"/home/clarisco/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.3/src/lib.rs","byte_start":4317,"byte_end":4357,"line_start":95,"line_end":95,"column_start":1,"column_end":41}},{"value":"/     0xdc, 0x4d, 0xc2, 0x64, 0xa9, 0xfe, 0xf1, 0x7a,","span":{"file_name":"/home/clarisco/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.3/src/lib.rs","byte_start":4358,"byte_end":4413,"line_start":96,"line_end":96,"column_start":1,"column_end":56}},{"value":"/     0x3f, 0x25, 0x34, 0x49, 0xcf, 0x8c, 0x39, 0x7a,","span":{"file_name":"/home/clarisco/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.3/src/lib.rs","byte_start":4414,"byte_end":4469,"line_start":97,"line_end":97,"column_start":1,"column_end":56}},{"value":"/     0xb6, 0xf1, 0x6f, 0xb3, 0xd6, 0x3d, 0x86, 0x94,","span":{"file_name":"/home/clarisco/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.3/src/lib.rs","byte_start":4470,"byte_end":4525,"line_start":98,"line_end":98,"column_start":1,"column_end":56}},{"value":"/     0x0b, 0x55, 0x86, 0x82, 0x3d, 0xfd, 0x02, 0xae,","span":{"file_name":"/home/clarisco/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.3/src/lib.rs","byte_start":4526,"byte_end":4581,"line_start":99,"line_end":99,"column_start":1,"column_end":56}},{"value":"/     0x3b, 0x46, 0x1b, 0xb4, 0x33, 0x6b, 0x5e, 0xcb,","span":{"file_name":"/home/clarisco/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.3/src/lib.rs","byte_start":4582,"byte_end":4637,"line_start":100,"line_end":100,"column_start":1,"column_end":56}},{"value":"/     0xae, 0xfd, 0x66, 0x27, 0xaa, 0x92, 0x2e, 0xfc,","span":{"file_name":"/home/clarisco/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.3/src/lib.rs","byte_start":4638,"byte_end":4693,"line_start":101,"line_end":101,"column_start":1,"column_end":56}},{"value":"/     0x04, 0x8f, 0xec, 0x0c, 0x88, 0x1c, 0x10, 0xc4,","span":{"file_name":"/home/clarisco/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.3/src/lib.rs","byte_start":4694,"byte_end":4749,"line_start":102,"line_end":102,"column_start":1,"column_end":56}},{"value":"/     0xc9, 0x42, 0x8f, 0xca, 0x69, 0xc1, 0x32, 0xa2,","span":{"file_name":"/home/clarisco/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.3/src/lib.rs","byte_start":4750,"byte_end":4805,"line_start":103,"line_end":103,"column_start":1,"column_end":56}},{"value":"/ ]).expect(\"compact signatures are 64 bytes; DER signatures are 68-72 bytes\");","span":{"file_name":"/home/clarisco/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.3/src/lib.rs","byte_start":4806,"byte_end":4887,"line_start":104,"line_end":104,"column_start":1,"column_end":82}},{"value":"/","span":{"file_name":"/home/clarisco/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.3/src/lib.rs","byte_start":4888,"byte_end":4891,"line_start":105,"line_end":105,"column_start":1,"column_end":4}},{"value":"/ # #[cfg(not(fuzzing))]","span":{"file_name":"/home/clarisco/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.3/src/lib.rs","byte_start":4892,"byte_end":4918,"line_start":106,"line_end":106,"column_start":1,"column_end":27}},{"value":"/ assert!(secp.verify(&message, &sig, &public_key).is_ok());","span":{"file_name":"/home/clarisco/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.3/src/lib.rs","byte_start":4919,"byte_end":4981,"line_start":107,"line_end":107,"column_start":1,"column_end":63}},{"value":"/ ```","span":{"file_name":"/home/clarisco/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.3/src/lib.rs","byte_start":4982,"byte_end":4989,"line_start":108,"line_end":108,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/clarisco/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.3/src/lib.rs","byte_start":4990,"byte_end":4993,"line_start":109,"line_end":109,"column_start":1,"column_end":4}},{"value":"/ Observe that the same code using, say [`signing_only`](struct.Secp256k1.html#method.signing_only)","span":{"file_name":"/home/clarisco/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.3/src/lib.rs","byte_start":4994,"byte_end":5095,"line_start":110,"line_end":110,"column_start":1,"column_end":102}},{"value":"/ to generate a context would simply not compile.","span":{"file_name":"/home/clarisco/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.3/src/lib.rs","byte_start":5096,"byte_end":5147,"line_start":111,"line_end":111,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/home/clarisco/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.3/src/lib.rs","byte_start":5148,"byte_end":5151,"line_start":112,"line_end":112,"column_start":1,"column_end":4}},{"value":"deny(non_upper_case_globals)","span":{"file_name":"/home/clarisco/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.3/src/lib.rs","byte_start":5175,"byte_end":5207,"line_start":115,"line_end":115,"column_start":1,"column_end":33}},{"value":"deny(non_camel_case_types)","span":{"file_name":"/home/clarisco/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.3/src/lib.rs","byte_start":5208,"byte_end":5238,"line_start":116,"line_end":116,"column_start":1,"column_end":31}},{"value":"deny(non_snake_case)","span":{"file_name":"/home/clarisco/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.3/src/lib.rs","byte_start":5239,"byte_end":5263,"line_start":117,"line_end":117,"column_start":1,"column_end":25}},{"value":"deny(unused_mut)","span":{"file_name":"/home/clarisco/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.3/src/lib.rs","byte_start":5264,"byte_end":5284,"line_start":118,"line_end":118,"column_start":1,"column_end":21}},{"value":"warn(missing_docs)","span":{"file_name":"/home/clarisco/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.3/src/lib.rs","byte_start":5285,"byte_end":5307,"line_start":119,"line_end":119,"column_start":1,"column_end":23}}]},{"kind":"Trait","id":{"krate":0,"index":56},"span":{"file_name":"/home/clarisco/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.3/src/context.rs","byte_start":55183,"byte_end":55190,"line_start":54,"line_end":54,"column_start":18,"column_end":25},"name":"Context","qualname":"::context::Context","value":"Context: private::Sealed","parent":null,"children":[{"krate":0,"index":57},{"krate":0,"index":58},{"krate":0,"index":59}],"decl_id":null,"docs":" A trait for all kinds of Context's that Lets you define the exact flags and a function to deallocate memory.\n It shouldn't be possible to implement this for types outside this crate.\n","sig":null,"attributes":[{"value":"/ A trait for all kinds of Context's that Lets you define the exact flags and a function to deallocate memory.","span":{"file_name":"/home/clarisco/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.3/src/context.rs","byte_start":54976,"byte_end":55088,"line_start":52,"line_end":52,"column_start":1,"column_end":113}},{"value":"/ It shouldn't be possible to implement this for types outside this crate.","span":{"file_name":"/home/clarisco/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.3/src/context.rs","byte_start":55089,"byte_end":55165,"line_start":53,"line_end":53,"column_start":1,"column_end":77}}]},{"kind":"Const","id":{"krate":0,"index":57},"span":{"file_name":"/home/clarisco/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.3/src/context.rs","byte_start":55248,"byte_end":55253,"line_start":56,"line_end":56,"column_start":11,"column_end":16},"name":"FLAGS","qualname":"::context::Context::FLAGS","value":"c_uint","parent":{"krate":0,"index":56},"children":[],"decl_id":null,"docs":" Flags for the ffi.\n","sig":null,"attributes":[{"value":"/ Flags for the ffi.","span":{"file_name":"/home/clarisco/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.3/src/context.rs","byte_start":55215,"byte_end":55237,"line_start":55,"line_end":55,"column_start":5,"column_end":27}}]},{"kind":"Const","id":{"krate":0,"index":58},"span":{"file_name":"/home/clarisco/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.3/src/context.rs","byte_start":55320,"byte_end":55331,"line_start":58,"line_end":58,"column_start":11,"column_end":22},"name":"DESCRIPTION","qualname":"::context::Context::DESCRIPTION","value":"&'static str","parent":{"krate":0,"index":56},"children":[],"decl_id":null,"docs":" A constant description of the context.\n","sig":null,"attributes":[{"value":"/ A constant description of the context.","span":{"file_name":"/home/clarisco/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.3/src/context.rs","byte_start":55267,"byte_end":55309,"line_start":57,"line_end":57,"column_start":5,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":59},"span":{"file_name":"/home/clarisco/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.3/src/context.rs","byte_start":55434,"byte_end":55444,"line_start":60,"line_end":60,"column_start":15,"column_end":25},"name":"deallocate","qualname":"::context::Context::deallocate","value":"pub unsafe fn deallocate(*mut u8, usize)","parent":{"krate":0,"index":56},"children":[],"decl_id":null,"docs":" A function to deallocate the memory when the context is dropped.\n","sig":null,"attributes":[{"value":"/ A function to deallocate the memory when the context is dropped.","span":{"file_name":"/home/clarisco/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.3/src/context.rs","byte_start":55351,"byte_end":55419,"line_start":59,"line_end":59,"column_start":5,"column_end":73}}]},{"kind":"Trait","id":{"krate":0,"index":60},"span":{"file_name":"/home/clarisco/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.3/src/context.rs","byte_start":55575,"byte_end":55582,"line_start":64,"line_end":64,"column_start":11,"column_end":18},"name":"Signing","qualname":"::context::Signing","value":"Signing: Context","parent":null,"children":[],"decl_id":null,"docs":" Marker trait for indicating that an instance of `Secp256k1` can be used for signing.\n","sig":null,"attributes":[{"value":"/ Marker trait for indicating that an instance of `Secp256k1` can be used for signing.","span":{"file_name":"/home/clarisco/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.3/src/context.rs","byte_start":55476,"byte_end":55564,"line_start":63,"line_end":63,"column_start":1,"column_end":89}}]},{"kind":"Trait","id":{"krate":0,"index":61},"span":{"file_name":"/home/clarisco/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.3/src/context.rs","byte_start":55700,"byte_end":55712,"line_start":67,"line_end":67,"column_start":11,"column_end":23},"name":"Verification","qualname":"::context::Verification","value":"Verification: Context","parent":null,"children":[],"decl_id":null,"docs":" Marker trait for indicating that an instance of `Secp256k1` can be used for verification.\n","sig":null,"attributes":[{"value":"/ Marker trait for indicating that an instance of `Secp256k1` can be used for verification.","span":{"file_name":"/home/clarisco/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.3/src/context.rs","byte_start":55596,"byte_end":55689,"line_start":66,"line_end":66,"column_start":1,"column_end":94}}]},{"kind":"Struct","id":{"krate":0,"index":62},"span":{"file_name":"/home/clarisco/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.3/src/context.rs","byte_start":55828,"byte_end":55848,"line_start":70,"line_end":70,"column_start":12,"column_end":32},"name":"SignOnlyPreallocated","qualname":"::context::SignOnlyPreallocated","value":"SignOnlyPreallocated {  }","parent":null,"children":[{"krate":0,"index":64}],"decl_id":null,"docs":" Represents the set of capabilities needed for signing with a user preallocated memory.\n","sig":null,"attributes":[{"value":"/ Represents the set of capabilities needed for signing with a user preallocated memory.","span":{"file_name":"/home/clarisco/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.3/src/context.rs","byte_start":55726,"byte_end":55816,"line_start":69,"line_end":69,"column_start":1,"column_end":91}}]},{"kind":"Struct","id":{"krate":0,"index":65},"span":{"file_name":"/home/clarisco/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.3/src/context.rs","byte_start":56003,"byte_end":56025,"line_start":75,"line_end":75,"column_start":12,"column_end":34},"name":"VerifyOnlyPreallocated","qualname":"::context::VerifyOnlyPreallocated","value":"VerifyOnlyPreallocated {  }","parent":null,"children":[{"krate":0,"index":67}],"decl_id":null,"docs":" Represents the set of capabilities needed for verification with a user preallocated memory.\n","sig":null,"attributes":[{"value":"/ Represents the set of capabilities needed for verification with a user preallocated memory.","span":{"file_name":"/home/clarisco/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.3/src/context.rs","byte_start":55896,"byte_end":55991,"line_start":74,"line_end":74,"column_start":1,"column_end":96}}]},{"kind":"Struct","id":{"krate":0,"index":68},"span":{"file_name":"/home/clarisco/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.3/src/context.rs","byte_start":56160,"byte_end":56175,"line_start":80,"line_end":80,"column_start":12,"column_end":27},"name":"AllPreallocated","qualname":"::context::AllPreallocated","value":"AllPreallocated {  }","parent":null,"children":[{"krate":0,"index":70}],"decl_id":null,"docs":" Represents the set of all capabilities with a user preallocated memory.\n","sig":null,"attributes":[{"value":"/ Represents the set of all capabilities with a user preallocated memory.","span":{"file_name":"/home/clarisco/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.3/src/context.rs","byte_start":56073,"byte_end":56148,"line_start":79,"line_end":79,"column_start":1,"column_end":76}}]},{"kind":"Trait","id":{"krate":0,"index":73},"span":{"file_name":"/home/clarisco/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.3/src/context.rs","byte_start":56485,"byte_end":56491,"line_start":89,"line_end":89,"column_start":15,"column_end":21},"name":"Sealed","qualname":"::context::private::Sealed","value":"Sealed","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":89},"span":{"file_name":"/home/clarisco/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.3/src/context.rs","byte_start":57109,"byte_end":57117,"line_start":111,"line_end":111,"column_start":14,"column_end":22},"name":"SignOnly","qualname":"::context::alloc_only::SignOnly","value":"pub enum SignOnly { }","parent":null,"children":[],"decl_id":null,"docs":" Represents the set of capabilities needed for signing.\n","sig":null,"attributes":[{"value":"/ Represents the set of capabilities needed for signing.","span":{"file_name":"/home/clarisco/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.3/src/context.rs","byte_start":57037,"byte_end":57095,"line_start":110,"line_end":110,"column_start":5,"column_end":63}}]},{"kind":"Enum","id":{"krate":0,"index":90},"span":{"file_name":"/home/clarisco/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.3/src/context.rs","byte_start":57203,"byte_end":57213,"line_start":114,"line_end":114,"column_start":14,"column_end":24},"name":"VerifyOnly","qualname":"::context::alloc_only::VerifyOnly","value":"pub enum VerifyOnly { }","parent":null,"children":[],"decl_id":null,"docs":" Represents the set of capabilities needed for verification.\n","sig":null,"attributes":[{"value":"/ Represents the set of capabilities needed for verification.","span":{"file_name":"/home/clarisco/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.3/src/context.rs","byte_start":57126,"byte_end":57189,"line_start":113,"line_end":113,"column_start":5,"column_end":68}}]},{"kind":"Enum","id":{"krate":0,"index":91},"span":{"file_name":"/home/clarisco/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.3/src/context.rs","byte_start":57279,"byte_end":57282,"line_start":117,"line_end":117,"column_start":14,"column_end":17},"name":"All","qualname":"::context::alloc_only::All","value":"pub enum All { }","parent":null,"children":[],"decl_id":null,"docs":" Represents the set of all capabilities.\n","sig":null,"attributes":[{"value":"/ Represents the set of all capabilities.","span":{"file_name":"/home/clarisco/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.3/src/context.rs","byte_start":57222,"byte_end":57265,"line_start":116,"line_end":116,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":110},"span":{"file_name":"/home/clarisco/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.3/src/context.rs","byte_start":58626,"byte_end":58633,"line_start":157,"line_end":157,"column_start":16,"column_end":23},"name":"gen_new","qualname":"<Secp256k1<C>>::gen_new","value":"pub fn gen_new() -> Secp256k1<C>","parent":null,"children":[],"decl_id":null,"docs":" Lets you create a context in a generic manner(sign/verify/all)\n","sig":null,"attributes":[{"value":"/ Lets you create a context in a generic manner(sign/verify/all)","span":{"file_name":"/home/clarisco/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.3/src/context.rs","byte_start":58544,"byte_end":58610,"line_start":156,"line_end":156,"column_start":9,"column_end":75}}]},{"kind":"Method","id":{"krate":0,"index":112},"span":{"file_name":"/home/clarisco/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.3/src/context.rs","byte_start":59297,"byte_end":59300,"line_start":174,"line_end":174,"column_start":16,"column_end":19},"name":"new","qualname":"<Secp256k1<All>>::new","value":"pub fn new() -> Secp256k1<All>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new Secp256k1 context with all capabilities\n","sig":null,"attributes":[{"value":"/ Creates a new Secp256k1 context with all capabilities","span":{"file_name":"/home/clarisco/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.3/src/context.rs","byte_start":59224,"byte_end":59281,"line_start":173,"line_end":173,"column_start":9,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":114},"span":{"file_name":"/home/clarisco/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.3/src/context.rs","byte_start":59497,"byte_end":59509,"line_start":181,"line_end":181,"column_start":16,"column_end":28},"name":"signing_only","qualname":"<Secp256k1<SignOnly>>::signing_only","value":"pub fn signing_only() -> Secp256k1<SignOnly>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new Secp256k1 context that can only be used for signing\n","sig":null,"attributes":[{"value":"/ Creates a new Secp256k1 context that can only be used for signing","span":{"file_name":"/home/clarisco/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.3/src/context.rs","byte_start":59412,"byte_end":59481,"line_start":180,"line_end":180,"column_start":9,"column_end":78}}]},{"kind":"Method","id":{"krate":0,"index":116},"span":{"file_name":"/home/clarisco/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.3/src/context.rs","byte_start":59718,"byte_end":59735,"line_start":188,"line_end":188,"column_start":16,"column_end":33},"name":"verification_only","qualname":"<Secp256k1<VerifyOnly>>::verification_only","value":"pub fn verification_only() -> Secp256k1<VerifyOnly>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new Secp256k1 context that can only be used for verification\n","sig":null,"attributes":[{"value":"/ Creates a new Secp256k1 context that can only be used for verification","span":{"file_name":"/home/clarisco/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.3/src/context.rs","byte_start":59628,"byte_end":59702,"line_start":187,"line_end":187,"column_start":9,"column_end":83}}]},{"kind":"Method","id":{"krate":0,"index":148},"span":{"file_name":"/home/clarisco/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.3/src/context.rs","byte_start":61670,"byte_end":61690,"line_start":248,"line_end":248,"column_start":12,"column_end":32},"name":"preallocated_gen_new","qualname":"<Secp256k1<C>>::preallocated_gen_new","value":"pub fn preallocated_gen_new(&'buf mut [AlignedType])\n-> Result<Secp256k1<C>, Error>","parent":null,"children":[],"decl_id":null,"docs":" Lets you create a context with preallocated buffer in a generic manner(sign/verify/all)\n","sig":null,"attributes":[{"value":"/ Lets you create a context with preallocated buffer in a generic manner(sign/verify/all)","span":{"file_name":"/home/clarisco/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.3/src/context.rs","byte_start":61567,"byte_end":61658,"line_start":247,"line_end":247,"column_start":5,"column_end":96}}]},{"kind":"Method","id":{"krate":0,"index":151},"span":{"file_name":"/home/clarisco/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.3/src/context.rs","byte_start":62441,"byte_end":62457,"line_start":269,"line_end":269,"column_start":12,"column_end":28},"name":"preallocated_new","qualname":"<Secp256k1<AllPreallocated>>::preallocated_new","value":"pub fn preallocated_new(&'buf mut [AlignedType])\n-> Result<Secp256k1<AllPreallocated>, Error>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new Secp256k1 context with all capabilities\n","sig":null,"attributes":[{"value":"/ Creates a new Secp256k1 context with all capabilities","span":{"file_name":"/home/clarisco/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.3/src/context.rs","byte_start":62372,"byte_end":62429,"line_start":268,"line_end":268,"column_start":5,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":152},"span":{"file_name":"/home/clarisco/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.3/src/context.rs","byte_start":62708,"byte_end":62724,"line_start":273,"line_end":273,"column_start":12,"column_end":28},"name":"preallocate_size","qualname":"<Secp256k1<AllPreallocated>>::preallocate_size","value":"pub fn preallocate_size() -> usize","parent":null,"children":[],"decl_id":null,"docs":" Uses the ffi `secp256k1_context_preallocated_size` to check the memory size needed for a context\n","sig":null,"attributes":[{"value":"/ Uses the ffi `secp256k1_context_preallocated_size` to check the memory size needed for a context","span":{"file_name":"/home/clarisco/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.3/src/context.rs","byte_start":62596,"byte_end":62696,"line_start":272,"line_end":272,"column_start":5,"column_end":105}}]},{"kind":"Method","id":{"krate":0,"index":153},"span":{"file_name":"/home/clarisco/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.3/src/context.rs","byte_start":63430,"byte_end":63442,"line_start":288,"line_end":288,"column_start":19,"column_end":31},"name":"from_raw_all","qualname":"<Secp256k1<AllPreallocated>>::from_raw_all","value":"pub unsafe fn from_raw_all(*mut ffi::Context)\n-> ManuallyDrop<Secp256k1<AllPreallocated>>","parent":null,"children":[],"decl_id":null,"docs":" Create a context from a raw context.","sig":null,"attributes":[{"value":"/ Create a context from a raw context.","span":{"file_name":"/home/clarisco/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.3/src/context.rs","byte_start":62786,"byte_end":62826,"line_start":277,"line_end":277,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/clarisco/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.3/src/context.rs","byte_start":62831,"byte_end":62834,"line_start":278,"line_end":278,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"/home/clarisco/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.3/src/context.rs","byte_start":62839,"byte_end":62851,"line_start":279,"line_end":279,"column_start":5,"column_end":17}},{"value":"/ This is highly unsafe, due to the number of conditions that aren't checked.","span":{"file_name":"/home/clarisco/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.3/src/context.rs","byte_start":62856,"byte_end":62935,"line_start":280,"line_end":280,"column_start":5,"column_end":84}},{"value":"/ * `raw_ctx` needs to be a valid Secp256k1 context pointer.","span":{"file_name":"/home/clarisco/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.3/src/context.rs","byte_start":62940,"byte_end":63002,"line_start":281,"line_end":281,"column_start":5,"column_end":67}},{"value":"/ that was generated by *exactly* the same code/version of the libsecp256k1 used here.","span":{"file_name":"/home/clarisco/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.3/src/context.rs","byte_start":63007,"byte_end":63095,"line_start":282,"line_end":282,"column_start":5,"column_end":93}},{"value":"/ * The capabilities (All/SignOnly/VerifyOnly) of the context *must* match the flags passed to libsecp256k1","span":{"file_name":"/home/clarisco/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.3/src/context.rs","byte_start":63100,"byte_end":63209,"line_start":283,"line_end":283,"column_start":5,"column_end":114}},{"value":"/ when generating the context.","span":{"file_name":"/home/clarisco/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.3/src/context.rs","byte_start":63214,"byte_end":63246,"line_start":284,"line_end":284,"column_start":5,"column_end":37}},{"value":"/ * The user must handle the freeing of the context(using the correct functions) by himself.","span":{"file_name":"/home/clarisco/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.3/src/context.rs","byte_start":63251,"byte_end":63345,"line_start":285,"line_end":285,"column_start":5,"column_end":99}},{"value":"/ * Violating these may lead to Undefined Behavior.","span":{"file_name":"/home/clarisco/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.3/src/context.rs","byte_start":63350,"byte_end":63403,"line_start":286,"line_end":286,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/home/clarisco/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.3/src/context.rs","byte_start":63408,"byte_end":63411,"line_start":287,"line_end":287,"column_start":5,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":156},"span":{"file_name":"/home/clarisco/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.3/src/context.rs","byte_start":63884,"byte_end":63909,"line_start":299,"line_end":299,"column_start":12,"column_end":37},"name":"preallocated_signing_only","qualname":"<Secp256k1<SignOnlyPreallocated>>::preallocated_signing_only","value":"pub fn preallocated_signing_only(&'buf mut [AlignedType])\n-> Result<Secp256k1<SignOnlyPreallocated>, Error>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new Secp256k1 context that can only be used for signing\n","sig":null,"attributes":[{"value":"/ Creates a new Secp256k1 context that can only be used for signing","span":{"file_name":"/home/clarisco/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.3/src/context.rs","byte_start":63803,"byte_end":63872,"line_start":298,"line_end":298,"column_start":5,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":157},"span":{"file_name":"/home/clarisco/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.3/src/context.rs","byte_start":64182,"byte_end":64206,"line_start":305,"line_end":305,"column_start":12,"column_end":36},"name":"preallocate_signing_size","qualname":"<Secp256k1<SignOnlyPreallocated>>::preallocate_signing_size","value":"pub fn preallocate_signing_size() -> usize","parent":null,"children":[],"decl_id":null,"docs":" Uses the ffi `secp256k1_context_preallocated_size` to check the memory size needed for the context\n","sig":null,"attributes":[{"value":"/ Uses the ffi `secp256k1_context_preallocated_size` to check the memory size needed for the context","span":{"file_name":"/home/clarisco/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.3/src/context.rs","byte_start":64054,"byte_end":64156,"line_start":303,"line_end":303,"column_start":5,"column_end":107}},{"value":"inline","span":{"file_name":"/home/clarisco/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.3/src/context.rs","byte_start":64161,"byte_end":64170,"line_start":304,"line_end":304,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":158},"span":{"file_name":"/home/clarisco/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.3/src/context.rs","byte_start":64946,"byte_end":64969,"line_start":320,"line_end":320,"column_start":19,"column_end":42},"name":"from_raw_signining_only","qualname":"<Secp256k1<SignOnlyPreallocated>>::from_raw_signining_only","value":"pub unsafe fn from_raw_signining_only(*mut ffi::Context)\n-> ManuallyDrop<Secp256k1<SignOnlyPreallocated>>","parent":null,"children":[],"decl_id":null,"docs":" Create a context from a raw context.","sig":null,"attributes":[{"value":"/ Create a context from a raw context.","span":{"file_name":"/home/clarisco/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.3/src/context.rs","byte_start":64268,"byte_end":64308,"line_start":309,"line_end":309,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/clarisco/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.3/src/context.rs","byte_start":64313,"byte_end":64316,"line_start":310,"line_end":310,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"/home/clarisco/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.3/src/context.rs","byte_start":64321,"byte_end":64333,"line_start":311,"line_end":311,"column_start":5,"column_end":17}},{"value":"/ This is highly unsafe, due to the number of conditions that aren't checked.","span":{"file_name":"/home/clarisco/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.3/src/context.rs","byte_start":64338,"byte_end":64417,"line_start":312,"line_end":312,"column_start":5,"column_end":84}},{"value":"/ * `raw_ctx` needs to be a valid Secp256k1 context pointer.","span":{"file_name":"/home/clarisco/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.3/src/context.rs","byte_start":64422,"byte_end":64484,"line_start":313,"line_end":313,"column_start":5,"column_end":67}},{"value":"/ that was generated by *exactly* the same code/version of the libsecp256k1 used here.","span":{"file_name":"/home/clarisco/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.3/src/context.rs","byte_start":64489,"byte_end":64577,"line_start":314,"line_end":314,"column_start":5,"column_end":93}},{"value":"/ * The capabilities (All/SignOnly/VerifyOnly) of the context *must* match the flags passed to libsecp256k1","span":{"file_name":"/home/clarisco/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.3/src/context.rs","byte_start":64582,"byte_end":64691,"line_start":315,"line_end":315,"column_start":5,"column_end":114}},{"value":"/ when generating the context.","span":{"file_name":"/home/clarisco/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.3/src/context.rs","byte_start":64696,"byte_end":64728,"line_start":316,"line_end":316,"column_start":5,"column_end":37}},{"value":"/ * The user must handle the freeing of the context(using the correct functions) by himself.","span":{"file_name":"/home/clarisco/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.3/src/context.rs","byte_start":64733,"byte_end":64827,"line_start":317,"line_end":317,"column_start":5,"column_end":99}},{"value":"/ * This list *is not* exhaustive, and any violation may lead to Undefined Behavior.,","span":{"file_name":"/home/clarisco/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.3/src/context.rs","byte_start":64832,"byte_end":64919,"line_start":318,"line_end":318,"column_start":5,"column_end":92}},{"value":"/","span":{"file_name":"/home/clarisco/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.3/src/context.rs","byte_start":64924,"byte_end":64927,"line_start":319,"line_end":319,"column_start":5,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":161},"span":{"file_name":"/home/clarisco/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.3/src/context.rs","byte_start":65423,"byte_end":65453,"line_start":331,"line_end":331,"column_start":12,"column_end":42},"name":"preallocated_verification_only","qualname":"<Secp256k1<VerifyOnlyPreallocated>>::preallocated_verification_only","value":"pub fn preallocated_verification_only(&'buf mut [AlignedType])\n-> Result<Secp256k1<VerifyOnlyPreallocated>, Error>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new Secp256k1 context that can only be used for verification\n","sig":null,"attributes":[{"value":"/ Creates a new Secp256k1 context that can only be used for verification","span":{"file_name":"/home/clarisco/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.3/src/context.rs","byte_start":65337,"byte_end":65411,"line_start":330,"line_end":330,"column_start":5,"column_end":79}}]},{"kind":"Method","id":{"krate":0,"index":162},"span":{"file_name":"/home/clarisco/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.3/src/context.rs","byte_start":65728,"byte_end":65757,"line_start":337,"line_end":337,"column_start":12,"column_end":41},"name":"preallocate_verification_size","qualname":"<Secp256k1<VerifyOnlyPreallocated>>::preallocate_verification_size","value":"pub fn preallocate_verification_size() -> usize","parent":null,"children":[],"decl_id":null,"docs":" Uses the ffi `secp256k1_context_preallocated_size` to check the memory size needed for the context\n","sig":null,"attributes":[{"value":"/ Uses the ffi `secp256k1_context_preallocated_size` to check the memory size needed for the context","span":{"file_name":"/home/clarisco/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.3/src/context.rs","byte_start":65600,"byte_end":65702,"line_start":335,"line_end":335,"column_start":5,"column_end":107}},{"value":"inline","span":{"file_name":"/home/clarisco/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.3/src/context.rs","byte_start":65707,"byte_end":65716,"line_start":336,"line_end":336,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":163},"span":{"file_name":"/home/clarisco/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.3/src/context.rs","byte_start":66497,"byte_end":66523,"line_start":352,"line_end":352,"column_start":19,"column_end":45},"name":"from_raw_verification_only","qualname":"<Secp256k1<VerifyOnlyPreallocated>>::from_raw_verification_only","value":"pub unsafe fn from_raw_verification_only(*mut ffi::Context)\n-> ManuallyDrop<Secp256k1<VerifyOnlyPreallocated>>","parent":null,"children":[],"decl_id":null,"docs":" Create a context from a raw context.","sig":null,"attributes":[{"value":"/ Create a context from a raw context.","span":{"file_name":"/home/clarisco/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.3/src/context.rs","byte_start":65819,"byte_end":65859,"line_start":341,"line_end":341,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/clarisco/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.3/src/context.rs","byte_start":65864,"byte_end":65867,"line_start":342,"line_end":342,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"/home/clarisco/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.3/src/context.rs","byte_start":65872,"byte_end":65884,"line_start":343,"line_end":343,"column_start":5,"column_end":17}},{"value":"/ This is highly unsafe, due to the number of conditions that aren't checked.","span":{"file_name":"/home/clarisco/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.3/src/context.rs","byte_start":65889,"byte_end":65968,"line_start":344,"line_end":344,"column_start":5,"column_end":84}},{"value":"/ * `raw_ctx` needs to be a valid Secp256k1 context pointer.","span":{"file_name":"/home/clarisco/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.3/src/context.rs","byte_start":65973,"byte_end":66035,"line_start":345,"line_end":345,"column_start":5,"column_end":67}},{"value":"/ that was generated by *exactly* the same code/version of the libsecp256k1 used here.","span":{"file_name":"/home/clarisco/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.3/src/context.rs","byte_start":66040,"byte_end":66128,"line_start":346,"line_end":346,"column_start":5,"column_end":93}},{"value":"/ * The capabilities (All/SignOnly/VerifyOnly) of the context *must* match the flags passed to libsecp256k1","span":{"file_name":"/home/clarisco/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.3/src/context.rs","byte_start":66133,"byte_end":66242,"line_start":347,"line_end":347,"column_start":5,"column_end":114}},{"value":"/ when generating the context.","span":{"file_name":"/home/clarisco/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.3/src/context.rs","byte_start":66247,"byte_end":66279,"line_start":348,"line_end":348,"column_start":5,"column_end":37}},{"value":"/ * The user must handle the freeing of the context(using the correct functions) by himself.","span":{"file_name":"/home/clarisco/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.3/src/context.rs","byte_start":66284,"byte_end":66378,"line_start":349,"line_end":349,"column_start":5,"column_end":99}},{"value":"/ * This list *is not* exhaustive, and any violation may lead to Undefined Behavior.,","span":{"file_name":"/home/clarisco/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.3/src/context.rs","byte_start":66383,"byte_end":66470,"line_start":350,"line_end":350,"column_start":5,"column_end":92}},{"value":"/","span":{"file_name":"/home/clarisco/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.3/src/context.rs","byte_start":66475,"byte_end":66478,"line_start":351,"line_end":351,"column_start":5,"column_end":8}}]},{"kind":"Mod","id":{"krate":0,"index":164},"span":{"file_name":"/home/clarisco/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.3/src/constants.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"constants","qualname":"::constants","value":"/home/clarisco/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.3/src/constants.rs","parent":null,"children":[{"krate":0,"index":165},{"krate":0,"index":166},{"krate":0,"index":167},{"krate":0,"index":168},{"krate":0,"index":169},{"krate":0,"index":170},{"krate":0,"index":171},{"krate":0,"index":172},{"krate":0,"index":173},{"krate":0,"index":174},{"krate":0,"index":176},{"krate":0,"index":178},{"krate":0,"index":180}],"decl_id":null,"docs":" # Constants\n Constants related to the API and the underlying curve\n","sig":null,"attributes":[{"value":"/ # Constants","span":{"file_name":"/home/clarisco/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.3/src/constants.rs","byte_start":67338,"byte_end":67353,"line_start":16,"line_end":16,"column_start":1,"column_end":16}},{"value":"/ Constants related to the API and the underlying curve","span":{"file_name":"/home/clarisco/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.3/src/constants.rs","byte_start":67354,"byte_end":67411,"line_start":17,"line_end":17,"column_start":1,"column_end":58}}]},{"kind":"Const","id":{"krate":0,"index":165},"span":{"file_name":"/home/clarisco/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.3/src/constants.rs","byte_start":67460,"byte_end":67472,"line_start":20,"line_end":20,"column_start":11,"column_end":23},"name":"MESSAGE_SIZE","qualname":"::constants::MESSAGE_SIZE","value":"usize","parent":null,"children":[],"decl_id":null,"docs":" The size (in bytes) of a message\n","sig":null,"attributes":[{"value":"/ The size (in bytes) of a message","span":{"file_name":"/home/clarisco/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.3/src/constants.rs","byte_start":67413,"byte_end":67449,"line_start":19,"line_end":19,"column_start":1,"column_end":37}}]},{"kind":"Const","id":{"krate":0,"index":166},"span":{"file_name":"/home/clarisco/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.3/src/constants.rs","byte_start":67537,"byte_end":67552,"line_start":23,"line_end":23,"column_start":11,"column_end":26},"name":"SECRET_KEY_SIZE","qualname":"::constants::SECRET_KEY_SIZE","value":"usize","parent":null,"children":[],"decl_id":null,"docs":" The size (in bytes) of a secret key\n","sig":null,"attributes":[{"value":"/ The size (in bytes) of a secret key","span":{"file_name":"/home/clarisco/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.3/src/constants.rs","byte_start":67487,"byte_end":67526,"line_start":22,"line_end":22,"column_start":1,"column_end":40}}]},{"kind":"Const","id":{"krate":0,"index":167},"span":{"file_name":"/home/clarisco/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.3/src/constants.rs","byte_start":67629,"byte_end":67644,"line_start":26,"line_end":26,"column_start":11,"column_end":26},"name":"PUBLIC_KEY_SIZE","qualname":"::constants::PUBLIC_KEY_SIZE","value":"usize","parent":null,"children":[],"decl_id":null,"docs":" The size (in bytes) of a serialized public key.\n","sig":null,"attributes":[{"value":"/ The size (in bytes) of a serialized public key.","span":{"file_name":"/home/clarisco/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.3/src/constants.rs","byte_start":67567,"byte_end":67618,"line_start":25,"line_end":25,"column_start":1,"column_end":52}}]},{"kind":"Const","id":{"krate":0,"index":168},"span":{"file_name":"/home/clarisco/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.3/src/constants.rs","byte_start":67734,"byte_end":67762,"line_start":29,"line_end":29,"column_start":11,"column_end":39},"name":"UNCOMPRESSED_PUBLIC_KEY_SIZE","qualname":"::constants::UNCOMPRESSED_PUBLIC_KEY_SIZE","value":"usize","parent":null,"children":[],"decl_id":null,"docs":" The size (in bytes) of an serialized uncompressed public key\n","sig":null,"attributes":[{"value":"/ The size (in bytes) of an serialized uncompressed public key","span":{"file_name":"/home/clarisco/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.3/src/constants.rs","byte_start":67659,"byte_end":67723,"line_start":28,"line_end":28,"column_start":1,"column_end":65}}]},{"kind":"Const","id":{"krate":0,"index":169},"span":{"file_name":"/home/clarisco/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.3/src/constants.rs","byte_start":67823,"byte_end":67841,"line_start":32,"line_end":32,"column_start":11,"column_end":29},"name":"MAX_SIGNATURE_SIZE","qualname":"::constants::MAX_SIGNATURE_SIZE","value":"usize","parent":null,"children":[],"decl_id":null,"docs":" The maximum size of a signature\n","sig":null,"attributes":[{"value":"/ The maximum size of a signature","span":{"file_name":"/home/clarisco/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.3/src/constants.rs","byte_start":67777,"byte_end":67812,"line_start":31,"line_end":31,"column_start":1,"column_end":36}}]},{"kind":"Const","id":{"krate":0,"index":170},"span":{"file_name":"/home/clarisco/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.3/src/constants.rs","byte_start":67910,"byte_end":67932,"line_start":35,"line_end":35,"column_start":11,"column_end":33},"name":"COMPACT_SIGNATURE_SIZE","qualname":"::constants::COMPACT_SIGNATURE_SIZE","value":"usize","parent":null,"children":[],"decl_id":null,"docs":" The maximum size of a compact signature\n","sig":null,"attributes":[{"value":"/ The maximum size of a compact signature","span":{"file_name":"/home/clarisco/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.3/src/constants.rs","byte_start":67856,"byte_end":67899,"line_start":34,"line_end":34,"column_start":1,"column_end":44}}]},{"kind":"Const","id":{"krate":0,"index":171},"span":{"file_name":"/home/clarisco/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.3/src/constants.rs","byte_start":67989,"byte_end":68014,"line_start":38,"line_end":38,"column_start":11,"column_end":36},"name":"SCHNORRSIG_SIGNATURE_SIZE","qualname":"::constants::SCHNORRSIG_SIGNATURE_SIZE","value":"usize","parent":null,"children":[],"decl_id":null,"docs":" Size of a Schnorr signature\n","sig":null,"attributes":[{"value":"/ Size of a Schnorr signature","span":{"file_name":"/home/clarisco/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.3/src/constants.rs","byte_start":67947,"byte_end":67978,"line_start":37,"line_end":37,"column_start":1,"column_end":32}}]},{"kind":"Const","id":{"krate":0,"index":172},"span":{"file_name":"/home/clarisco/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.3/src/constants.rs","byte_start":68072,"byte_end":68098,"line_start":41,"line_end":41,"column_start":11,"column_end":37},"name":"SCHNORRSIG_PUBLIC_KEY_SIZE","qualname":"::constants::SCHNORRSIG_PUBLIC_KEY_SIZE","value":"usize","parent":null,"children":[],"decl_id":null,"docs":" Size of a Schnorr public key\n","sig":null,"attributes":[{"value":"/ Size of a Schnorr public key","span":{"file_name":"/home/clarisco/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.3/src/constants.rs","byte_start":68029,"byte_end":68061,"line_start":40,"line_end":40,"column_start":1,"column_end":33}}]},{"kind":"Const","id":{"krate":0,"index":173},"span":{"file_name":"/home/clarisco/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.3/src/constants.rs","byte_start":68146,"byte_end":68159,"line_start":44,"line_end":44,"column_start":11,"column_end":24},"name":"KEY_PAIR_SIZE","qualname":"::constants::KEY_PAIR_SIZE","value":"usize","parent":null,"children":[],"decl_id":null,"docs":" Size of a key pair\n","sig":null,"attributes":[{"value":"/ Size of a key pair","span":{"file_name":"/home/clarisco/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.3/src/constants.rs","byte_start":68113,"byte_end":68135,"line_start":43,"line_end":43,"column_start":1,"column_end":23}}]},{"kind":"Const","id":{"krate":0,"index":174},"span":{"file_name":"/home/clarisco/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.3/src/constants.rs","byte_start":68231,"byte_end":68241,"line_start":47,"line_end":47,"column_start":11,"column_end":21},"name":"FIELD_SIZE","qualname":"::constants::FIELD_SIZE","value":"[u8; ]","parent":null,"children":[],"decl_id":null,"docs":" The Prime for the secp256k1 field element.\n","sig":null,"attributes":[{"value":"/ The Prime for the secp256k1 field element.","span":{"file_name":"/home/clarisco/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.3/src/constants.rs","byte_start":68174,"byte_end":68220,"line_start":46,"line_end":46,"column_start":1,"column_end":47}}]},{"kind":"Const","id":{"krate":0,"index":176},"span":{"file_name":"/home/clarisco/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.3/src/constants.rs","byte_start":68514,"byte_end":68525,"line_start":55,"line_end":55,"column_start":11,"column_end":22},"name":"CURVE_ORDER","qualname":"::constants::CURVE_ORDER","value":"[u8; ]","parent":null,"children":[],"decl_id":null,"docs":" The order of the secp256k1 curve\n","sig":null,"attributes":[{"value":"/ The order of the secp256k1 curve","span":{"file_name":"/home/clarisco/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.3/src/constants.rs","byte_start":68467,"byte_end":68503,"line_start":54,"line_end":54,"column_start":1,"column_end":37}}]},{"kind":"Const","id":{"krate":0,"index":178},"span":{"file_name":"/home/clarisco/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.3/src/constants.rs","byte_start":68799,"byte_end":68810,"line_start":63,"line_end":63,"column_start":11,"column_end":22},"name":"GENERATOR_X","qualname":"::constants::GENERATOR_X","value":"[u8; ]","parent":null,"children":[],"decl_id":null,"docs":" The X coordinate of the generator\n","sig":null,"attributes":[{"value":"/ The X coordinate of the generator","span":{"file_name":"/home/clarisco/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.3/src/constants.rs","byte_start":68751,"byte_end":68788,"line_start":62,"line_end":62,"column_start":1,"column_end":38}}]},{"kind":"Const","id":{"krate":0,"index":180},"span":{"file_name":"/home/clarisco/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.3/src/constants.rs","byte_start":69084,"byte_end":69095,"line_start":71,"line_end":71,"column_start":11,"column_end":22},"name":"GENERATOR_Y","qualname":"::constants::GENERATOR_Y","value":"[u8; ]","parent":null,"children":[],"decl_id":null,"docs":" The Y coordinate of the generator\n","sig":null,"attributes":[{"value":"/ The Y coordinate of the generator","span":{"file_name":"/home/clarisco/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.3/src/constants.rs","byte_start":69036,"byte_end":69073,"line_start":70,"line_end":70,"column_start":1,"column_end":38}}]},{"kind":"Mod","id":{"krate":0,"index":182},"span":{"file_name":"/home/clarisco/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.3/src/ecdh.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"ecdh","qualname":"::ecdh","value":"/home/clarisco/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.3/src/ecdh.rs","parent":null,"children":[{"krate":0,"index":183},{"krate":0,"index":186},{"krate":0,"index":187},{"krate":0,"index":190},{"krate":0,"index":193},{"krate":0,"index":194},{"krate":0,"index":197},{"krate":0,"index":200},{"krate":0,"index":201},{"krate":0,"index":204},{"krate":0,"index":207},{"krate":0,"index":208},{"krate":0,"index":211},{"krate":0,"index":214},{"krate":0,"index":592},{"krate":0,"index":596},{"krate":0,"index":597},{"krate":0,"index":600},{"krate":0,"index":602},{"krate":0,"index":607},{"krate":0,"index":612},{"krate":0,"index":617},{"krate":0,"index":622},{"krate":0,"index":627},{"krate":0,"index":632},{"krate":0,"index":637},{"krate":0,"index":642},{"krate":0,"index":217},{"krate":0,"index":225},{"krate":0,"index":227},{"krate":0,"index":229},{"krate":0,"index":232},{"krate":0,"index":233}],"decl_id":null,"docs":" # ECDH\n Support for shared secret computations","sig":null,"attributes":[{"value":"/ # ECDH","span":{"file_name":"/home/clarisco/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.3/src/ecdh.rs","byte_start":69798,"byte_end":69808,"line_start":15,"line_end":15,"column_start":1,"column_end":11}},{"value":"/ Support for shared secret computations","span":{"file_name":"/home/clarisco/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.3/src/ecdh.rs","byte_start":69809,"byte_end":69851,"line_start":16,"line_end":16,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/home/clarisco/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.3/src/ecdh.rs","byte_start":69852,"byte_end":69855,"line_start":17,"line_end":17,"column_start":1,"column_end":4}}]},{"kind":"Struct","id":{"krate":0,"index":592},"span":{"file_name":"/home/clarisco/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.3/src/ecdh.rs","byte_start":70117,"byte_end":70129,"line_start":28,"line_end":28,"column_start":12,"column_end":24},"name":"SharedSecret","qualname":"::ecdh::SharedSecret","value":"SharedSecret {  }","parent":null,"children":[{"krate":0,"index":593},{"krate":0,"index":595}],"decl_id":null,"docs":" A tag used for recovering the public key from a compact signature\n","sig":null,"attributes":[{"value":"/ A tag used for recovering the public key from a compact signature","span":{"file_name":"/home/clarisco/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.3/src/ecdh.rs","byte_start":70013,"byte_end":70082,"line_start":26,"line_end":26,"column_start":1,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":221},"span":{"file_name":"/home/clarisco/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.3/src/ecdh.rs","byte_start":70890,"byte_end":70898,"line_start":55,"line_end":55,"column_start":12,"column_end":20},"name":"capacity","qualname":"<SharedSecret>::capacity","value":"pub fn capacity(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Get the capacity of the underlying data buffer.\n","sig":null,"attributes":[{"value":"/ Get the capacity of the underlying data buffer.","span":{"file_name":"/home/clarisco/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.3/src/ecdh.rs","byte_start":70827,"byte_end":70878,"line_start":54,"line_end":54,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":222},"span":{"file_name":"/home/clarisco/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.3/src/ecdh.rs","byte_start":70997,"byte_end":71000,"line_start":60,"line_end":60,"column_start":12,"column_end":15},"name":"len","qualname":"<SharedSecret>::len","value":"pub fn len(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Get the len of the used data.\n","sig":null,"attributes":[{"value":"/ Get the len of the used data.","span":{"file_name":"/home/clarisco/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.3/src/ecdh.rs","byte_start":70952,"byte_end":70985,"line_start":59,"line_end":59,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":223},"span":{"file_name":"/home/clarisco/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.3/src/ecdh.rs","byte_start":71107,"byte_end":71115,"line_start":65,"line_end":65,"column_start":12,"column_end":20},"name":"is_empty","qualname":"<SharedSecret>::is_empty","value":"pub fn is_empty(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" True if the underlying data buffer is empty.\n","sig":null,"attributes":[{"value":"/ True if the underlying data buffer is empty.","span":{"file_name":"/home/clarisco/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.3/src/ecdh.rs","byte_start":71047,"byte_end":71095,"line_start":64,"line_end":64,"column_start":5,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":234},"span":{"file_name":"/home/clarisco/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.3/src/ecdh.rs","byte_start":72047,"byte_end":72050,"line_start":105,"line_end":105,"column_start":12,"column_end":15},"name":"new","qualname":"<SharedSecret>::new","value":"pub fn new(&PublicKey, &SecretKey) -> SharedSecret","parent":null,"children":[],"decl_id":null,"docs":" Creates a new shared secret from a pubkey and secret key\n","sig":null,"attributes":[{"value":"/ Creates a new shared secret from a pubkey and secret key","span":{"file_name":"/home/clarisco/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.3/src/ecdh.rs","byte_start":71961,"byte_end":72021,"line_start":103,"line_end":103,"column_start":5,"column_end":65}},{"value":"inline","span":{"file_name":"/home/clarisco/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.3/src/ecdh.rs","byte_start":72026,"byte_end":72035,"line_start":104,"line_end":104,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":235},"span":{"file_name":"/home/clarisco/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.3/src/ecdh.rs","byte_start":73762,"byte_end":73775,"line_start":144,"line_end":144,"column_start":12,"column_end":25},"name":"new_with_hash","qualname":"<SharedSecret>::new_with_hash","value":"pub fn new_with_hash<F>(&PublicKey, &SecretKey, F) -> SharedSecret where\nF: FnMut([u8; ], [u8; ]) -> SharedSecret","parent":null,"children":[],"decl_id":null,"docs":" Creates a new shared secret from a pubkey and secret key with applied custom hash function\n The custom hash function must be in the form of `fn(x: [u8;32], y: [u8;32]) -> SharedSecret`\n `SharedSecret` can be easily created via the `From` impl from arrays.\n # Examples\n ```\n # use secp256k1::ecdh::SharedSecret;\n # use secp256k1::{Secp256k1, PublicKey, SecretKey};\n # fn sha2(_a: &[u8], _b: &[u8]) -> [u8; 32] {[0u8; 32]}\n # let secp = Secp256k1::signing_only();\n # let secret_key = SecretKey::from_slice(&[3u8; 32]).unwrap();\n # let secret_key2 = SecretKey::from_slice(&[7u8; 32]).unwrap();\n # let public_key = PublicKey::from_secret_key(&secp, &secret_key2);","sig":null,"attributes":[{"value":"/ Creates a new shared secret from a pubkey and secret key with applied custom hash function","span":{"file_name":"/home/clarisco/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.3/src/ecdh.rs","byte_start":72817,"byte_end":72911,"line_start":125,"line_end":125,"column_start":5,"column_end":99}},{"value":"/ The custom hash function must be in the form of `fn(x: [u8;32], y: [u8;32]) -> SharedSecret`","span":{"file_name":"/home/clarisco/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.3/src/ecdh.rs","byte_start":72916,"byte_end":73012,"line_start":126,"line_end":126,"column_start":5,"column_end":101}},{"value":"/ `SharedSecret` can be easily created via the `From` impl from arrays.","span":{"file_name":"/home/clarisco/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.3/src/ecdh.rs","byte_start":73017,"byte_end":73090,"line_start":127,"line_end":127,"column_start":5,"column_end":78}},{"value":"/ # Examples","span":{"file_name":"/home/clarisco/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.3/src/ecdh.rs","byte_start":73095,"byte_end":73109,"line_start":128,"line_end":128,"column_start":5,"column_end":19}},{"value":"/ ```","span":{"file_name":"/home/clarisco/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.3/src/ecdh.rs","byte_start":73114,"byte_end":73121,"line_start":129,"line_end":129,"column_start":5,"column_end":12}},{"value":"/ # use secp256k1::ecdh::SharedSecret;","span":{"file_name":"/home/clarisco/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.3/src/ecdh.rs","byte_start":73126,"byte_end":73166,"line_start":130,"line_end":130,"column_start":5,"column_end":45}},{"value":"/ # use secp256k1::{Secp256k1, PublicKey, SecretKey};","span":{"file_name":"/home/clarisco/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.3/src/ecdh.rs","byte_start":73171,"byte_end":73226,"line_start":131,"line_end":131,"column_start":5,"column_end":60}},{"value":"/ # fn sha2(_a: &[u8], _b: &[u8]) -> [u8; 32] {[0u8; 32]}","span":{"file_name":"/home/clarisco/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.3/src/ecdh.rs","byte_start":73231,"byte_end":73290,"line_start":132,"line_end":132,"column_start":5,"column_end":64}},{"value":"/ # let secp = Secp256k1::signing_only();","span":{"file_name":"/home/clarisco/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.3/src/ecdh.rs","byte_start":73295,"byte_end":73338,"line_start":133,"line_end":133,"column_start":5,"column_end":48}},{"value":"/ # let secret_key = SecretKey::from_slice(&[3u8; 32]).unwrap();","span":{"file_name":"/home/clarisco/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.3/src/ecdh.rs","byte_start":73343,"byte_end":73409,"line_start":134,"line_end":134,"column_start":5,"column_end":71}},{"value":"/ # let secret_key2 = SecretKey::from_slice(&[7u8; 32]).unwrap();","span":{"file_name":"/home/clarisco/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.3/src/ecdh.rs","byte_start":73414,"byte_end":73481,"line_start":135,"line_end":135,"column_start":5,"column_end":72}},{"value":"/ # let public_key = PublicKey::from_secret_key(&secp, &secret_key2);","span":{"file_name":"/home/clarisco/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.3/src/ecdh.rs","byte_start":73486,"byte_end":73557,"line_start":136,"line_end":136,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/home/clarisco/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.3/src/ecdh.rs","byte_start":73562,"byte_end":73565,"line_start":137,"line_end":137,"column_start":5,"column_end":8}},{"value":"/ let secret = SharedSecret::new_with_hash(&public_key, &secret_key, |x,y| {","span":{"file_name":"/home/clarisco/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.3/src/ecdh.rs","byte_start":73570,"byte_end":73648,"line_start":138,"line_end":138,"column_start":5,"column_end":83}},{"value":"/     let hash: [u8; 32] = sha2(&x,&y);","span":{"file_name":"/home/clarisco/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.3/src/ecdh.rs","byte_start":73653,"byte_end":73694,"line_start":139,"line_end":139,"column_start":5,"column_end":46}},{"value":"/     hash.into()","span":{"file_name":"/home/clarisco/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.3/src/ecdh.rs","byte_start":73699,"byte_end":73718,"line_start":140,"line_end":140,"column_start":5,"column_end":24}},{"value":"/ });","span":{"file_name":"/home/clarisco/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.3/src/ecdh.rs","byte_start":73723,"byte_end":73730,"line_start":141,"line_end":141,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/clarisco/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.3/src/ecdh.rs","byte_start":73735,"byte_end":73738,"line_start":142,"line_end":142,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/clarisco/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.3/src/ecdh.rs","byte_start":73743,"byte_end":73750,"line_start":143,"line_end":143,"column_start":5,"column_end":12}}]},{"kind":"Mod","id":{"krate":0,"index":242},"span":{"file_name":"/home/clarisco/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.3/src/key.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"key","qualname":"::key","value":"/home/clarisco/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.3/src/key.rs","parent":null,"children":[{"krate":0,"index":243},{"krate":0,"index":244},{"krate":0,"index":247},{"krate":0,"index":250},{"krate":0,"index":251},{"krate":0,"index":254},{"krate":0,"index":257},{"krate":0,"index":258},{"krate":0,"index":261},{"krate":0,"index":262},{"krate":0,"index":264},{"krate":0,"index":265},{"krate":0,"index":267},{"krate":0,"index":270},{"krate":0,"index":273},{"krate":0,"index":276},{"krate":0,"index":277},{"krate":0,"index":280},{"krate":0,"index":283},{"krate":0,"index":647},{"krate":0,"index":648},{"krate":0,"index":653},{"krate":0,"index":657},{"krate":0,"index":659},{"krate":0,"index":660},{"krate":0,"index":662},{"krate":0,"index":664},{"krate":0,"index":666},{"krate":0,"index":669},{"krate":0,"index":672},{"krate":0,"index":675},{"krate":0,"index":678},{"krate":0,"index":681},{"krate":0,"index":685},{"krate":0,"index":287},{"krate":0,"index":289},{"krate":0,"index":291},{"krate":0,"index":295},{"krate":0,"index":687},{"krate":0,"index":690},{"krate":0,"index":691},{"krate":0,"index":693},{"krate":0,"index":694},{"krate":0,"index":697},{"krate":0,"index":698},{"krate":0,"index":700},{"krate":0,"index":702},{"krate":0,"index":296},{"krate":0,"index":298},{"krate":0,"index":300},{"krate":0,"index":304},{"krate":0,"index":310},{"krate":0,"index":336},{"krate":0,"index":340},{"krate":0,"index":342},{"krate":0,"index":344}],"decl_id":null,"docs":" # Public and secret keys\n","sig":null,"attributes":[{"value":"/ # Public and secret keys","span":{"file_name":"/home/clarisco/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.3/src/key.rs","byte_start":77783,"byte_end":77811,"line_start":16,"line_end":16,"column_start":1,"column_end":29}}]},{"kind":"Struct","id":{"krate":0,"index":283},"span":{"file_name":"/home/clarisco/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.3/src/key.rs","byte_start":78122,"byte_end":78131,"line_start":30,"line_end":30,"column_start":12,"column_end":21},"name":"SecretKey","qualname":"::key::SecretKey","value":"","parent":null,"children":[],"decl_id":null,"docs":" Secret 256-bit key used as `x` in an ECDSA signature\n","sig":null,"attributes":[{"value":"/ Secret 256-bit key used as `x` in an ECDSA signature","span":{"file_name":"/home/clarisco/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.3/src/key.rs","byte_start":78054,"byte_end":78110,"line_start":29,"line_end":29,"column_start":1,"column_end":57}}]},{"kind":"Const","id":{"krate":0,"index":295},"span":{"file_name":"/home/clarisco/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.3/src/key.rs","byte_start":78995,"byte_end":79002,"line_start":61,"line_end":61,"column_start":11,"column_end":18},"name":"ONE_KEY","qualname":"::key::ONE_KEY","value":"SecretKey","parent":null,"children":[],"decl_id":null,"docs":" The number 1 encoded as a secret key\n","sig":null,"attributes":[{"value":"/ The number 1 encoded as a secret key","span":{"file_name":"/home/clarisco/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.3/src/key.rs","byte_start":78944,"byte_end":78984,"line_start":60,"line_end":60,"column_start":1,"column_end":41}}]},{"kind":"Struct","id":{"krate":0,"index":687},"span":{"file_name":"/home/clarisco/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.3/src/key.rs","byte_start":79399,"byte_end":79408,"line_start":69,"line_end":69,"column_start":12,"column_end":21},"name":"PublicKey","qualname":"::key::PublicKey","value":"","parent":null,"children":[],"decl_id":null,"docs":" A Secp256k1 public key, used for verification of signatures\n","sig":null,"attributes":[{"value":"/ A Secp256k1 public key, used for verification of signatures","span":{"file_name":"/home/clarisco/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.3/src/key.rs","byte_start":79252,"byte_end":79315,"line_start":66,"line_end":66,"column_start":1,"column_end":64}},{"value":"repr(transparent)","span":{"file_name":"/home/clarisco/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.3/src/key.rs","byte_start":79367,"byte_end":79387,"line_start":68,"line_end":68,"column_start":1,"column_end":21}}]},{"kind":"Method","id":{"krate":0,"index":305},"span":{"file_name":"/home/clarisco/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.3/src/key.rs","byte_start":81179,"byte_end":81189,"line_start":132,"line_end":132,"column_start":12,"column_end":22},"name":"from_slice","qualname":"<SecretKey>::from_slice","value":"pub fn from_slice(&[u8]) -> Result<SecretKey, Error>","parent":null,"children":[],"decl_id":null,"docs":" Converts a `SECRET_KEY_SIZE`-byte slice to a secret key\n","sig":null,"attributes":[{"value":"/ Converts a `SECRET_KEY_SIZE`-byte slice to a secret key","span":{"file_name":"/home/clarisco/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.3/src/key.rs","byte_start":81094,"byte_end":81153,"line_start":130,"line_end":130,"column_start":5,"column_end":64}},{"value":"inline","span":{"file_name":"/home/clarisco/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.3/src/key.rs","byte_start":81158,"byte_end":81167,"line_start":131,"line_end":131,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":307},"span":{"file_name":"/home/clarisco/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.3/src/key.rs","byte_start":81899,"byte_end":81912,"line_start":154,"line_end":154,"column_start":12,"column_end":25},"name":"negate_assign","qualname":"<SecretKey>::negate_assign","value":"pub fn negate_assign(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Negates one secret key.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/clarisco/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.3/src/key.rs","byte_start":81846,"byte_end":81855,"line_start":152,"line_end":152,"column_start":5,"column_end":14}},{"value":"/ Negates one secret key.","span":{"file_name":"/home/clarisco/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.3/src/key.rs","byte_start":81860,"byte_end":81887,"line_start":153,"line_end":153,"column_start":5,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":308},"span":{"file_name":"/home/clarisco/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.3/src/key.rs","byte_start":82381,"byte_end":82391,"line_start":170,"line_end":170,"column_start":12,"column_end":22},"name":"add_assign","qualname":"<SecretKey>::add_assign","value":"pub fn add_assign(&mut Self, &[u8]) -> Result<(), Error>","parent":null,"children":[],"decl_id":null,"docs":" Adds one secret key to another, modulo the curve order. WIll\n return an error if the resulting key would be invalid or if\n the tweak was not a 32-byte length slice.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/clarisco/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.3/src/key.rs","byte_start":82173,"byte_end":82182,"line_start":166,"line_end":166,"column_start":5,"column_end":14}},{"value":"/ Adds one secret key to another, modulo the curve order. WIll","span":{"file_name":"/home/clarisco/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.3/src/key.rs","byte_start":82187,"byte_end":82251,"line_start":167,"line_end":167,"column_start":5,"column_end":69}},{"value":"/ return an error if the resulting key would be invalid or if","span":{"file_name":"/home/clarisco/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.3/src/key.rs","byte_start":82256,"byte_end":82319,"line_start":168,"line_end":168,"column_start":5,"column_end":68}},{"value":"/ the tweak was not a 32-byte length slice.","span":{"file_name":"/home/clarisco/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.3/src/key.rs","byte_start":82324,"byte_end":82369,"line_start":169,"line_end":169,"column_start":5,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":309},"span":{"file_name":"/home/clarisco/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.3/src/key.rs","byte_start":83106,"byte_end":83116,"line_start":195,"line_end":195,"column_start":12,"column_end":22},"name":"mul_assign","qualname":"<SecretKey>::mul_assign","value":"pub fn mul_assign(&mut Self, &[u8]) -> Result<(), Error>","parent":null,"children":[],"decl_id":null,"docs":" Multiplies one secret key by another, modulo the curve order. Will\n return an error if the resulting key would be invalid or if\n the tweak was not a 32-byte length slice.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/clarisco/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.3/src/key.rs","byte_start":82892,"byte_end":82901,"line_start":191,"line_end":191,"column_start":5,"column_end":14}},{"value":"/ Multiplies one secret key by another, modulo the curve order. Will","span":{"file_name":"/home/clarisco/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.3/src/key.rs","byte_start":82906,"byte_end":82976,"line_start":192,"line_end":192,"column_start":5,"column_end":75}},{"value":"/ return an error if the resulting key would be invalid or if","span":{"file_name":"/home/clarisco/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.3/src/key.rs","byte_start":82981,"byte_end":83044,"line_start":193,"line_end":193,"column_start":5,"column_end":68}},{"value":"/ the tweak was not a 32-byte length slice.","span":{"file_name":"/home/clarisco/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.3/src/key.rs","byte_start":83049,"byte_end":83094,"line_start":194,"line_end":194,"column_start":5,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":311},"span":{"file_name":"/home/clarisco/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.3/src/key.rs","byte_start":84567,"byte_end":84573,"line_start":247,"line_end":247,"column_start":12,"column_end":18},"name":"as_ptr","qualname":"<PublicKey>::as_ptr","value":"pub fn as_ptr(&Self) -> *const ffi::PublicKey","parent":null,"children":[],"decl_id":null,"docs":" Obtains a raw const pointer suitable for use with FFI functions\n","sig":null,"attributes":[{"value":"/ Obtains a raw const pointer suitable for use with FFI functions","span":{"file_name":"/home/clarisco/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.3/src/key.rs","byte_start":84474,"byte_end":84541,"line_start":245,"line_end":245,"column_start":5,"column_end":72}},{"value":"inline","span":{"file_name":"/home/clarisco/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.3/src/key.rs","byte_start":84546,"byte_end":84555,"line_start":246,"line_end":246,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":312},"span":{"file_name":"/home/clarisco/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.3/src/key.rs","byte_start":84730,"byte_end":84740,"line_start":253,"line_end":253,"column_start":12,"column_end":22},"name":"as_mut_ptr","qualname":"<PublicKey>::as_mut_ptr","value":"pub fn as_mut_ptr(&mut Self) -> *mut ffi::PublicKey","parent":null,"children":[],"decl_id":null,"docs":" Obtains a raw mutable pointer suitable for use with FFI functions\n","sig":null,"attributes":[{"value":"/ Obtains a raw mutable pointer suitable for use with FFI functions","span":{"file_name":"/home/clarisco/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.3/src/key.rs","byte_start":84635,"byte_end":84704,"line_start":251,"line_end":251,"column_start":5,"column_end":74}},{"value":"inline","span":{"file_name":"/home/clarisco/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.3/src/key.rs","byte_start":84709,"byte_end":84718,"line_start":252,"line_end":252,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":313},"span":{"file_name":"/home/clarisco/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.3/src/key.rs","byte_start":84881,"byte_end":84896,"line_start":259,"line_end":259,"column_start":12,"column_end":27},"name":"from_secret_key","qualname":"<PublicKey>::from_secret_key","value":"pub fn from_secret_key<C: Signing>(&Secp256k1<C>, &SecretKey) -> PublicKey","parent":null,"children":[],"decl_id":null,"docs":" Creates a new public key from a secret key.\n","sig":null,"attributes":[{"value":"/ Creates a new public key from a secret key.","span":{"file_name":"/home/clarisco/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.3/src/key.rs","byte_start":84808,"byte_end":84855,"line_start":257,"line_end":257,"column_start":5,"column_end":52}},{"value":"inline","span":{"file_name":"/home/clarisco/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.3/src/key.rs","byte_start":84860,"byte_end":84869,"line_start":258,"line_end":258,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":315},"span":{"file_name":"/home/clarisco/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.3/src/key.rs","byte_start":85489,"byte_end":85499,"line_start":274,"line_end":274,"column_start":12,"column_end":22},"name":"from_slice","qualname":"<PublicKey>::from_slice","value":"pub fn from_slice(&[u8]) -> Result<PublicKey, Error>","parent":null,"children":[],"decl_id":null,"docs":" Creates a public key directly from a slice\n","sig":null,"attributes":[{"value":"/ Creates a public key directly from a slice","span":{"file_name":"/home/clarisco/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.3/src/key.rs","byte_start":85417,"byte_end":85463,"line_start":272,"line_end":272,"column_start":5,"column_end":51}},{"value":"inline","span":{"file_name":"/home/clarisco/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.3/src/key.rs","byte_start":85468,"byte_end":85477,"line_start":273,"line_end":273,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":316},"span":{"file_name":"/home/clarisco/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.3/src/key.rs","byte_start":86233,"byte_end":86242,"line_start":297,"line_end":297,"column_start":12,"column_end":21},"name":"serialize","qualname":"<PublicKey>::serialize","value":"pub fn serialize(&Self) -> [u8; ]","parent":null,"children":[],"decl_id":null,"docs":" Serialize the key as a byte-encoded pair of values. In compressed form\n the y-coordinate is represented by only a single bit, as x determines\n it up to one bit.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/clarisco/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.3/src/key.rs","byte_start":86029,"byte_end":86038,"line_start":293,"line_end":293,"column_start":5,"column_end":14}},{"value":"/ Serialize the key as a byte-encoded pair of values. In compressed form","span":{"file_name":"/home/clarisco/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.3/src/key.rs","byte_start":86043,"byte_end":86117,"line_start":294,"line_end":294,"column_start":5,"column_end":79}},{"value":"/ the y-coordinate is represented by only a single bit, as x determines","span":{"file_name":"/home/clarisco/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.3/src/key.rs","byte_start":86122,"byte_end":86195,"line_start":295,"line_end":295,"column_start":5,"column_end":78}},{"value":"/ it up to one bit.","span":{"file_name":"/home/clarisco/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.3/src/key.rs","byte_start":86200,"byte_end":86221,"line_start":296,"line_end":296,"column_start":5,"column_end":26}}]},{"kind":"Method","id":{"krate":0,"index":319},"span":{"file_name":"/home/clarisco/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.3/src/key.rs","byte_start":86907,"byte_end":86929,"line_start":316,"line_end":316,"column_start":12,"column_end":34},"name":"serialize_uncompressed","qualname":"<PublicKey>::serialize_uncompressed","value":"pub fn serialize_uncompressed(&Self) -> [u8; ]","parent":null,"children":[],"decl_id":null,"docs":" Serialize the key as a byte-encoded pair of values, in uncompressed form\n","sig":null,"attributes":[{"value":"/ Serialize the key as a byte-encoded pair of values, in uncompressed form","span":{"file_name":"/home/clarisco/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.3/src/key.rs","byte_start":86819,"byte_end":86895,"line_start":315,"line_end":315,"column_start":5,"column_end":81}}]},{"kind":"Method","id":{"krate":0,"index":322},"span":{"file_name":"/home/clarisco/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.3/src/key.rs","byte_start":87674,"byte_end":87687,"line_start":337,"line_end":337,"column_start":12,"column_end":25},"name":"negate_assign","qualname":"<PublicKey>::negate_assign","value":"pub fn negate_assign<C: Verification>(&mut Self, &Secp256k1<C>)","parent":null,"children":[],"decl_id":null,"docs":" Negates the pk to the pk `self` in place\n Will return an error if the pk would be invalid.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/clarisco/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.3/src/key.rs","byte_start":87547,"byte_end":87556,"line_start":334,"line_end":334,"column_start":5,"column_end":14}},{"value":"/ Negates the pk to the pk `self` in place","span":{"file_name":"/home/clarisco/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.3/src/key.rs","byte_start":87561,"byte_end":87605,"line_start":335,"line_end":335,"column_start":5,"column_end":49}},{"value":"/ Will return an error if the pk would be invalid.","span":{"file_name":"/home/clarisco/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.3/src/key.rs","byte_start":87610,"byte_end":87662,"line_start":336,"line_end":336,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":324},"span":{"file_name":"/home/clarisco/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.3/src/key.rs","byte_start":88130,"byte_end":88144,"line_start":351,"line_end":351,"column_start":12,"column_end":26},"name":"add_exp_assign","qualname":"<PublicKey>::add_exp_assign","value":"pub fn add_exp_assign<C: Verification>(&mut Self, &Secp256k1<C>, &[u8])\n-> Result<(), Error>","parent":null,"children":[],"decl_id":null,"docs":" Adds the pk corresponding to `other` to the pk `self` in place\n Will return an error if the resulting key would be invalid or\n if the tweak was not a 32-byte length slice.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/clarisco/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.3/src/key.rs","byte_start":87915,"byte_end":87924,"line_start":347,"line_end":347,"column_start":5,"column_end":14}},{"value":"/ Adds the pk corresponding to `other` to the pk `self` in place","span":{"file_name":"/home/clarisco/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.3/src/key.rs","byte_start":87929,"byte_end":87995,"line_start":348,"line_end":348,"column_start":5,"column_end":71}},{"value":"/ Will return an error if the resulting key would be invalid or","span":{"file_name":"/home/clarisco/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.3/src/key.rs","byte_start":88000,"byte_end":88065,"line_start":349,"line_end":349,"column_start":5,"column_end":70}},{"value":"/ if the tweak was not a 32-byte length slice.","span":{"file_name":"/home/clarisco/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.3/src/key.rs","byte_start":88070,"byte_end":88118,"line_start":350,"line_end":350,"column_start":5,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":326},"span":{"file_name":"/home/clarisco/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.3/src/key.rs","byte_start":88789,"byte_end":88799,"line_start":372,"line_end":372,"column_start":12,"column_end":22},"name":"mul_assign","qualname":"<PublicKey>::mul_assign","value":"pub fn mul_assign<C: Verification>(&mut Self, &Secp256k1<C>, &[u8])\n-> Result<(), Error>","parent":null,"children":[],"decl_id":null,"docs":" Muliplies the pk `self` in place by the scalar `other`\n Will return an error if the resulting key would be invalid or\n if the tweak was not a 32-byte length slice.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/clarisco/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.3/src/key.rs","byte_start":88582,"byte_end":88591,"line_start":368,"line_end":368,"column_start":5,"column_end":14}},{"value":"/ Muliplies the pk `self` in place by the scalar `other`","span":{"file_name":"/home/clarisco/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.3/src/key.rs","byte_start":88596,"byte_end":88654,"line_start":369,"line_end":369,"column_start":5,"column_end":63}},{"value":"/ Will return an error if the resulting key would be invalid or","span":{"file_name":"/home/clarisco/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.3/src/key.rs","byte_start":88659,"byte_end":88724,"line_start":370,"line_end":370,"column_start":5,"column_end":70}},{"value":"/ if the tweak was not a 32-byte length slice.","span":{"file_name":"/home/clarisco/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.3/src/key.rs","byte_start":88729,"byte_end":88777,"line_start":371,"line_end":371,"column_start":5,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":328},"span":{"file_name":"/home/clarisco/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.3/src/key.rs","byte_start":89432,"byte_end":89439,"line_start":392,"line_end":392,"column_start":12,"column_end":19},"name":"combine","qualname":"<PublicKey>::combine","value":"pub fn combine(&Self, &PublicKey) -> Result<PublicKey, Error>","parent":null,"children":[],"decl_id":null,"docs":" Adds a second key to this one, returning the sum. Returns an error if\n the result would be the point at infinity, i.e. we are adding this point\n to its own negation\n","sig":null,"attributes":[{"value":"/ Adds a second key to this one, returning the sum. Returns an error if","span":{"file_name":"/home/clarisco/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.3/src/key.rs","byte_start":89238,"byte_end":89311,"line_start":389,"line_end":389,"column_start":5,"column_end":78}},{"value":"/ the result would be the point at infinity, i.e. we are adding this point","span":{"file_name":"/home/clarisco/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.3/src/key.rs","byte_start":89316,"byte_end":89392,"line_start":390,"line_end":390,"column_start":5,"column_end":81}},{"value":"/ to its own negation","span":{"file_name":"/home/clarisco/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.3/src/key.rs","byte_start":89397,"byte_end":89420,"line_start":391,"line_end":391,"column_start":5,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":329},"span":{"file_name":"/home/clarisco/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.3/src/key.rs","byte_start":89761,"byte_end":89773,"line_start":399,"line_end":399,"column_start":12,"column_end":24},"name":"combine_keys","qualname":"<PublicKey>::combine_keys","value":"pub fn combine_keys(&[&PublicKey]) -> Result<PublicKey, Error>","parent":null,"children":[],"decl_id":null,"docs":" Adds the keys in the provided slice together, returning the sum. Returns\n an error if the result would be the point at infinity, i.e. we are adding\n a point to its own negation\n","sig":null,"attributes":[{"value":"/ Adds the keys in the provided slice together, returning the sum. Returns","span":{"file_name":"/home/clarisco/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.3/src/key.rs","byte_start":89555,"byte_end":89631,"line_start":396,"line_end":396,"column_start":5,"column_end":81}},{"value":"/ an error if the result would be the point at infinity, i.e. we are adding","span":{"file_name":"/home/clarisco/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.3/src/key.rs","byte_start":89636,"byte_end":89713,"line_start":397,"line_end":397,"column_start":5,"column_end":82}},{"value":"/ a point to its own negation","span":{"file_name":"/home/clarisco/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.3/src/key.rs","byte_start":89718,"byte_end":89749,"line_start":398,"line_end":398,"column_start":5,"column_end":36}}]},{"kind":"Mod","id":{"krate":0,"index":346},"span":{"file_name":"/home/clarisco/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.3/src/schnorrsig.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"schnorrsig","qualname":"::schnorrsig","value":"/home/clarisco/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.3/src/schnorrsig.rs","parent":null,"children":[{"krate":0,"index":347},{"krate":0,"index":348},{"krate":0,"index":349},{"krate":0,"index":351},{"krate":0,"index":352},{"krate":0,"index":354},{"krate":0,"index":355},{"krate":0,"index":357},{"krate":0,"index":358},{"krate":0,"index":361},{"krate":0,"index":364},{"krate":0,"index":365},{"krate":0,"index":368},{"krate":0,"index":371},{"krate":0,"index":374},{"krate":0,"index":375},{"krate":0,"index":378},{"krate":0,"index":381},{"krate":0,"index":382},{"krate":0,"index":385},{"krate":0,"index":388},{"krate":0,"index":389},{"krate":0,"index":390},{"krate":0,"index":392},{"krate":0,"index":395},{"krate":0,"index":398},{"krate":0,"index":705},{"krate":0,"index":706},{"krate":0,"index":711},{"krate":0,"index":715},{"krate":0,"index":717},{"krate":0,"index":718},{"krate":0,"index":720},{"krate":0,"index":722},{"krate":0,"index":724},{"krate":0,"index":727},{"krate":0,"index":730},{"krate":0,"index":733},{"krate":0,"index":736},{"krate":0,"index":739},{"krate":0,"index":743},{"krate":0,"index":402},{"krate":0,"index":404},{"krate":0,"index":406},{"krate":0,"index":745},{"krate":0,"index":748},{"krate":0,"index":749},{"krate":0,"index":751},{"krate":0,"index":752},{"krate":0,"index":755},{"krate":0,"index":756},{"krate":0,"index":758},{"krate":0,"index":760},{"krate":0,"index":762},{"krate":0,"index":764},{"krate":0,"index":767},{"krate":0,"index":770},{"krate":0,"index":771},{"krate":0,"index":773},{"krate":0,"index":774},{"krate":0,"index":777},{"krate":0,"index":778},{"krate":0,"index":780},{"krate":0,"index":782},{"krate":0,"index":784},{"krate":0,"index":786},{"krate":0,"index":410},{"krate":0,"index":412},{"krate":0,"index":414},{"krate":0,"index":418},{"krate":0,"index":421},{"krate":0,"index":433},{"krate":0,"index":447},{"krate":0,"index":451},{"krate":0,"index":453},{"krate":0,"index":455}],"decl_id":null,"docs":" # schnorrsig\n Support for Schnorr signatures.","sig":null,"attributes":[{"value":"/ # schnorrsig","span":{"file_name":"/home/clarisco/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.3/src/schnorrsig.rs","byte_start":111527,"byte_end":111543,"line_start":1,"line_end":1,"column_start":1,"column_end":17}},{"value":"/ Support for Schnorr signatures.","span":{"file_name":"/home/clarisco/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.3/src/schnorrsig.rs","byte_start":111544,"byte_end":111579,"line_start":2,"line_end":2,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/home/clarisco/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.3/src/schnorrsig.rs","byte_start":111580,"byte_end":111583,"line_start":3,"line_end":3,"column_start":1,"column_end":4}}]},{"kind":"Struct","id":{"krate":0,"index":398},"span":{"file_name":"/home/clarisco/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.3/src/schnorrsig.rs","byte_start":111980,"byte_end":111989,"line_start":18,"line_end":18,"column_start":12,"column_end":21},"name":"Signature","qualname":"::schnorrsig::Signature","value":"","parent":null,"children":[],"decl_id":null,"docs":" Represents a Schnorr signature.\n","sig":null,"attributes":[{"value":"/ Represents a Schnorr signature.","span":{"file_name":"/home/clarisco/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.3/src/schnorrsig.rs","byte_start":111933,"byte_end":111968,"line_start":17,"line_end":17,"column_start":1,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":745},"span":{"file_name":"/home/clarisco/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.3/src/schnorrsig.rs","byte_start":113935,"byte_end":113942,"line_start":79,"line_end":79,"column_start":12,"column_end":19},"name":"KeyPair","qualname":"::schnorrsig::KeyPair","value":"","parent":null,"children":[],"decl_id":null,"docs":" Opaque data structure that holds a keypair consisting of a secret and a public key.\n","sig":null,"attributes":[{"value":"/ Opaque data structure that holds a keypair consisting of a secret and a public key.","span":{"file_name":"/home/clarisco/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.3/src/schnorrsig.rs","byte_start":113768,"byte_end":113855,"line_start":77,"line_end":77,"column_start":1,"column_end":88}}]},{"kind":"Struct","id":{"krate":0,"index":767},"span":{"file_name":"/home/clarisco/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.3/src/schnorrsig.rs","byte_start":114108,"byte_end":114117,"line_start":83,"line_end":83,"column_start":12,"column_end":21},"name":"PublicKey","qualname":"::schnorrsig::PublicKey","value":"","parent":null,"children":[],"decl_id":null,"docs":" A Schnorr public key, used for verification of Schnorr signatures\n","sig":null,"attributes":[{"value":"/ A Schnorr public key, used for verification of Schnorr signatures","span":{"file_name":"/home/clarisco/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.3/src/schnorrsig.rs","byte_start":113959,"byte_end":114028,"line_start":81,"line_end":81,"column_start":1,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":419},"span":{"file_name":"/home/clarisco/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.3/src/schnorrsig.rs","byte_start":115036,"byte_end":115046,"line_start":117,"line_end":117,"column_start":12,"column_end":22},"name":"from_slice","qualname":"<Signature>::from_slice","value":"pub fn from_slice(&[u8]) -> Result<Signature, Error>","parent":null,"children":[],"decl_id":null,"docs":" Creates a Signature directly from a slice\n","sig":null,"attributes":[{"value":"/ Creates a Signature directly from a slice","span":{"file_name":"/home/clarisco/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.3/src/schnorrsig.rs","byte_start":114965,"byte_end":115010,"line_start":115,"line_end":115,"column_start":5,"column_end":50}},{"value":"inline","span":{"file_name":"/home/clarisco/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.3/src/schnorrsig.rs","byte_start":115015,"byte_end":115024,"line_start":116,"line_end":116,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":422},"span":{"file_name":"/home/clarisco/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.3/src/schnorrsig.rs","byte_start":115511,"byte_end":115517,"line_start":132,"line_end":132,"column_start":12,"column_end":18},"name":"as_ptr","qualname":"<KeyPair>::as_ptr","value":"pub fn as_ptr(&Self) -> *const ffi::KeyPair","parent":null,"children":[],"decl_id":null,"docs":" Obtains a raw const pointer suitable for use with FFI functions\n","sig":null,"attributes":[{"value":"/ Obtains a raw const pointer suitable for use with FFI functions","span":{"file_name":"/home/clarisco/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.3/src/schnorrsig.rs","byte_start":115418,"byte_end":115485,"line_start":130,"line_end":130,"column_start":5,"column_end":72}},{"value":"inline","span":{"file_name":"/home/clarisco/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.3/src/schnorrsig.rs","byte_start":115490,"byte_end":115499,"line_start":131,"line_end":131,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":423},"span":{"file_name":"/home/clarisco/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.3/src/schnorrsig.rs","byte_start":115672,"byte_end":115682,"line_start":138,"line_end":138,"column_start":12,"column_end":22},"name":"as_mut_ptr","qualname":"<KeyPair>::as_mut_ptr","value":"pub fn as_mut_ptr(&mut Self) -> *mut ffi::KeyPair","parent":null,"children":[],"decl_id":null,"docs":" Obtains a raw mutable pointer suitable for use with FFI functions\n","sig":null,"attributes":[{"value":"/ Obtains a raw mutable pointer suitable for use with FFI functions","span":{"file_name":"/home/clarisco/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.3/src/schnorrsig.rs","byte_start":115577,"byte_end":115646,"line_start":136,"line_end":136,"column_start":5,"column_end":74}},{"value":"inline","span":{"file_name":"/home/clarisco/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.3/src/schnorrsig.rs","byte_start":115651,"byte_end":115660,"line_start":137,"line_end":137,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":424},"span":{"file_name":"/home/clarisco/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.3/src/schnorrsig.rs","byte_start":116025,"byte_end":116040,"line_start":148,"line_end":148,"column_start":12,"column_end":27},"name":"from_secret_key","qualname":"<KeyPair>::from_secret_key","value":"pub fn from_secret_key<C: Signing>(&Secp256k1<C>, ::key::SecretKey) -> KeyPair","parent":null,"children":[],"decl_id":null,"docs":" Creates a Schnorr KeyPair directly from generic Secp256k1 secret key","sig":null,"attributes":[{"value":"/ Creates a Schnorr KeyPair directly from generic Secp256k1 secret key","span":{"file_name":"/home/clarisco/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.3/src/schnorrsig.rs","byte_start":115748,"byte_end":115820,"line_start":142,"line_end":142,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/home/clarisco/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.3/src/schnorrsig.rs","byte_start":115825,"byte_end":115828,"line_start":143,"line_end":143,"column_start":5,"column_end":8}},{"value":"/ Panics if internal representation of the provided [`SecretKey`] does not","span":{"file_name":"/home/clarisco/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.3/src/schnorrsig.rs","byte_start":115833,"byte_end":115909,"line_start":144,"line_end":144,"column_start":5,"column_end":81}},{"value":"/ holds correct secret key value obtained from Secp256k1 library","span":{"file_name":"/home/clarisco/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.3/src/schnorrsig.rs","byte_start":115914,"byte_end":115980,"line_start":145,"line_end":145,"column_start":5,"column_end":71}},{"value":"/ previously","span":{"file_name":"/home/clarisco/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.3/src/schnorrsig.rs","byte_start":115985,"byte_end":115999,"line_start":146,"line_end":146,"column_start":5,"column_end":19}},{"value":"inline","span":{"file_name":"/home/clarisco/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.3/src/schnorrsig.rs","byte_start":116004,"byte_end":116013,"line_start":147,"line_end":147,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":426},"span":{"file_name":"/home/clarisco/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.3/src/schnorrsig.rs","byte_start":116572,"byte_end":116589,"line_start":164,"line_end":164,"column_start":12,"column_end":29},"name":"from_seckey_slice","qualname":"<KeyPair>::from_seckey_slice","value":"pub fn from_seckey_slice<C: Signing>(&Secp256k1<C>, &[u8])\n-> Result<KeyPair, Error>","parent":null,"children":[],"decl_id":null,"docs":" Creates a Schnorr KeyPair directly from a secret key slice\n","sig":null,"attributes":[{"value":"/ Creates a Schnorr KeyPair directly from a secret key slice","span":{"file_name":"/home/clarisco/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.3/src/schnorrsig.rs","byte_start":116484,"byte_end":116546,"line_start":162,"line_end":162,"column_start":5,"column_end":67}},{"value":"inline","span":{"file_name":"/home/clarisco/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.3/src/schnorrsig.rs","byte_start":116551,"byte_end":116560,"line_start":163,"line_end":163,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":428},"span":{"file_name":"/home/clarisco/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.3/src/schnorrsig.rs","byte_start":117179,"byte_end":117194,"line_start":184,"line_end":184,"column_start":12,"column_end":27},"name":"from_seckey_str","qualname":"<KeyPair>::from_seckey_str","value":"pub fn from_seckey_str<C: Signing>(&Secp256k1<C>, &str)\n-> Result<KeyPair, Error>","parent":null,"children":[],"decl_id":null,"docs":" Creates a Schnorr KeyPair directly from a secret key string\n","sig":null,"attributes":[{"value":"/ Creates a Schnorr KeyPair directly from a secret key string","span":{"file_name":"/home/clarisco/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.3/src/schnorrsig.rs","byte_start":117090,"byte_end":117153,"line_start":182,"line_end":182,"column_start":5,"column_end":68}},{"value":"inline","span":{"file_name":"/home/clarisco/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.3/src/schnorrsig.rs","byte_start":117158,"byte_end":117167,"line_start":183,"line_end":183,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":431},"span":{"file_name":"/home/clarisco/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.3/src/schnorrsig.rs","byte_start":118509,"byte_end":118525,"line_start":218,"line_end":218,"column_start":12,"column_end":28},"name":"tweak_add_assign","qualname":"<KeyPair>::tweak_add_assign","value":"pub fn tweak_add_assign<C: Verification>(&mut Self, &Secp256k1<C>, &[u8])\n-> Result<(), Error>","parent":null,"children":[],"decl_id":null,"docs":" Tweak a keypair by adding the given tweak to the secret key and updating the\n public key accordingly.\n Will return an error if the resulting key would be invalid or if\n the tweak was not a 32-byte length slice.\n","sig":null,"attributes":[{"value":"/ Tweak a keypair by adding the given tweak to the secret key and updating the","span":{"file_name":"/home/clarisco/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.3/src/schnorrsig.rs","byte_start":118248,"byte_end":118328,"line_start":213,"line_end":213,"column_start":5,"column_end":85}},{"value":"/ public key accordingly.","span":{"file_name":"/home/clarisco/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.3/src/schnorrsig.rs","byte_start":118333,"byte_end":118360,"line_start":214,"line_end":214,"column_start":5,"column_end":32}},{"value":"/ Will return an error if the resulting key would be invalid or if","span":{"file_name":"/home/clarisco/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.3/src/schnorrsig.rs","byte_start":118365,"byte_end":118433,"line_start":215,"line_end":215,"column_start":5,"column_end":73}},{"value":"/ the tweak was not a 32-byte length slice.","span":{"file_name":"/home/clarisco/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.3/src/schnorrsig.rs","byte_start":118438,"byte_end":118483,"line_start":216,"line_end":216,"column_start":5,"column_end":50}},{"value":"inline","span":{"file_name":"/home/clarisco/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.3/src/schnorrsig.rs","byte_start":118488,"byte_end":118497,"line_start":217,"line_end":217,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":434},"span":{"file_name":"/home/clarisco/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.3/src/schnorrsig.rs","byte_start":119172,"byte_end":119178,"line_start":246,"line_end":246,"column_start":12,"column_end":18},"name":"as_ptr","qualname":"<PublicKey>::as_ptr","value":"pub fn as_ptr(&Self) -> *const ffi::XOnlyPublicKey","parent":null,"children":[],"decl_id":null,"docs":" Obtains a raw const pointer suitable for use with FFI functions\n","sig":null,"attributes":[{"value":"/ Obtains a raw const pointer suitable for use with FFI functions","span":{"file_name":"/home/clarisco/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.3/src/schnorrsig.rs","byte_start":119079,"byte_end":119146,"line_start":244,"line_end":244,"column_start":5,"column_end":72}},{"value":"inline","span":{"file_name":"/home/clarisco/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.3/src/schnorrsig.rs","byte_start":119151,"byte_end":119160,"line_start":245,"line_end":245,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":435},"span":{"file_name":"/home/clarisco/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.3/src/schnorrsig.rs","byte_start":119340,"byte_end":119350,"line_start":252,"line_end":252,"column_start":12,"column_end":22},"name":"as_mut_ptr","qualname":"<PublicKey>::as_mut_ptr","value":"pub fn as_mut_ptr(&mut Self) -> *mut ffi::XOnlyPublicKey","parent":null,"children":[],"decl_id":null,"docs":" Obtains a raw mutable pointer suitable for use with FFI functions\n","sig":null,"attributes":[{"value":"/ Obtains a raw mutable pointer suitable for use with FFI functions","span":{"file_name":"/home/clarisco/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.3/src/schnorrsig.rs","byte_start":119245,"byte_end":119314,"line_start":250,"line_end":250,"column_start":5,"column_end":74}},{"value":"inline","span":{"file_name":"/home/clarisco/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.3/src/schnorrsig.rs","byte_start":119319,"byte_end":119328,"line_start":251,"line_end":251,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":436},"span":{"file_name":"/home/clarisco/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.3/src/schnorrsig.rs","byte_start":119509,"byte_end":119521,"line_start":258,"line_end":258,"column_start":12,"column_end":24},"name":"from_keypair","qualname":"<PublicKey>::from_keypair","value":"pub fn from_keypair<C: Signing>(&Secp256k1<C>, &KeyPair) -> PublicKey","parent":null,"children":[],"decl_id":null,"docs":" Creates a new Schnorr public key from a Schnorr key pair\n","sig":null,"attributes":[{"value":"/ Creates a new Schnorr public key from a Schnorr key pair","span":{"file_name":"/home/clarisco/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.3/src/schnorrsig.rs","byte_start":119423,"byte_end":119483,"line_start":256,"line_end":256,"column_start":5,"column_end":65}},{"value":"inline","span":{"file_name":"/home/clarisco/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.3/src/schnorrsig.rs","byte_start":119488,"byte_end":119497,"line_start":257,"line_end":257,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":438},"span":{"file_name":"/home/clarisco/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.3/src/schnorrsig.rs","byte_start":120061,"byte_end":120071,"line_start":275,"line_end":275,"column_start":12,"column_end":22},"name":"from_slice","qualname":"<PublicKey>::from_slice","value":"pub fn from_slice(&[u8]) -> Result<PublicKey, Error>","parent":null,"children":[],"decl_id":null,"docs":" Creates a Schnorr public key directly from a slice\n","sig":null,"attributes":[{"value":"/ Creates a Schnorr public key directly from a slice","span":{"file_name":"/home/clarisco/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.3/src/schnorrsig.rs","byte_start":119981,"byte_end":120035,"line_start":273,"line_end":273,"column_start":5,"column_end":59}},{"value":"inline","span":{"file_name":"/home/clarisco/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.3/src/schnorrsig.rs","byte_start":120040,"byte_end":120049,"line_start":274,"line_end":274,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":439},"span":{"file_name":"/home/clarisco/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.3/src/schnorrsig.rs","byte_start":120846,"byte_end":120855,"line_start":299,"line_end":299,"column_start":12,"column_end":21},"name":"serialize","qualname":"<PublicKey>::serialize","value":"pub fn serialize(&Self) -> [u8; ]","parent":null,"children":[],"decl_id":null,"docs":" Serialize the key as a byte-encoded pair of values. In compressed form\n the y-coordinate is represented by only a single bit, as x determines\n it up to one bit.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/clarisco/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.3/src/schnorrsig.rs","byte_start":120642,"byte_end":120651,"line_start":295,"line_end":295,"column_start":5,"column_end":14}},{"value":"/ Serialize the key as a byte-encoded pair of values. In compressed form","span":{"file_name":"/home/clarisco/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.3/src/schnorrsig.rs","byte_start":120656,"byte_end":120730,"line_start":296,"line_end":296,"column_start":5,"column_end":79}},{"value":"/ the y-coordinate is represented by only a single bit, as x determines","span":{"file_name":"/home/clarisco/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.3/src/schnorrsig.rs","byte_start":120735,"byte_end":120808,"line_start":297,"line_end":297,"column_start":5,"column_end":78}},{"value":"/ it up to one bit.","span":{"file_name":"/home/clarisco/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.3/src/schnorrsig.rs","byte_start":120813,"byte_end":120834,"line_start":298,"line_end":298,"column_start":5,"column_end":26}}]},{"kind":"Method","id":{"krate":0,"index":442},"span":{"file_name":"/home/clarisco/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.3/src/schnorrsig.rs","byte_start":121717,"byte_end":121733,"line_start":319,"line_end":319,"column_start":12,"column_end":28},"name":"tweak_add_assign","qualname":"<PublicKey>::tweak_add_assign","value":"pub fn tweak_add_assign<V: Verification>(&mut Self, &Secp256k1<V>, &[u8])\n-> Result<bool, Error>","parent":null,"children":[],"decl_id":null,"docs":" Tweak an x-only PublicKey by adding the generator multiplied with the given tweak to it.","sig":null,"attributes":[{"value":"/ Tweak an x-only PublicKey by adding the generator multiplied with the given tweak to it.","span":{"file_name":"/home/clarisco/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.3/src/schnorrsig.rs","byte_start":121263,"byte_end":121355,"line_start":313,"line_end":313,"column_start":5,"column_end":97}},{"value":"/","span":{"file_name":"/home/clarisco/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.3/src/schnorrsig.rs","byte_start":121360,"byte_end":121363,"line_start":314,"line_end":314,"column_start":5,"column_end":8}},{"value":"/ Returns a boolean representing the parity of the tweaked key, which can be provided to ","span":{"file_name":"/home/clarisco/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.3/src/schnorrsig.rs","byte_start":121368,"byte_end":121459,"line_start":315,"line_end":315,"column_start":5,"column_end":96}},{"value":"/ `tweak_add_check` which can be used to verify a tweak more efficiently than regenerating","span":{"file_name":"/home/clarisco/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.3/src/schnorrsig.rs","byte_start":121464,"byte_end":121556,"line_start":316,"line_end":316,"column_start":5,"column_end":97}},{"value":"/ it and checking equality. Will return an error if the resulting key would be invalid or","span":{"file_name":"/home/clarisco/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.3/src/schnorrsig.rs","byte_start":121561,"byte_end":121652,"line_start":317,"line_end":317,"column_start":5,"column_end":96}},{"value":"/ if the tweak was not a 32-byte length slice.","span":{"file_name":"/home/clarisco/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.3/src/schnorrsig.rs","byte_start":121657,"byte_end":121705,"line_start":318,"line_end":318,"column_start":5,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":444},"span":{"file_name":"/home/clarisco/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.3/src/schnorrsig.rs","byte_start":123225,"byte_end":123240,"line_start":366,"line_end":366,"column_start":12,"column_end":27},"name":"tweak_add_check","qualname":"<PublicKey>::tweak_add_check","value":"pub fn tweak_add_check<V: Verification>(&Self, &Secp256k1<V>, &Self, bool,\n                                        [u8; ]) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Verify that a tweak produced by `tweak_add_assign` was computed correctly","sig":null,"attributes":[{"value":"/ Verify that a tweak produced by `tweak_add_assign` was computed correctly","span":{"file_name":"/home/clarisco/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.3/src/schnorrsig.rs","byte_start":122708,"byte_end":122785,"line_start":357,"line_end":357,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"/home/clarisco/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.3/src/schnorrsig.rs","byte_start":122790,"byte_end":122793,"line_start":358,"line_end":358,"column_start":5,"column_end":8}},{"value":"/ Should be called on the original untweaked key. Takes the tweaked key and","span":{"file_name":"/home/clarisco/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.3/src/schnorrsig.rs","byte_start":122798,"byte_end":122875,"line_start":359,"line_end":359,"column_start":5,"column_end":82}},{"value":"/ output parity from `tweak_add_assign` as input.","span":{"file_name":"/home/clarisco/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.3/src/schnorrsig.rs","byte_start":122880,"byte_end":122931,"line_start":360,"line_end":360,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/home/clarisco/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.3/src/schnorrsig.rs","byte_start":122936,"byte_end":122939,"line_start":361,"line_end":361,"column_start":5,"column_end":8}},{"value":"/ Currently this is not much more efficient than just recomputing the tweak","span":{"file_name":"/home/clarisco/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.3/src/schnorrsig.rs","byte_start":122944,"byte_end":123021,"line_start":362,"line_end":362,"column_start":5,"column_end":82}},{"value":"/ and checking equality. However, in future this API will support batch","span":{"file_name":"/home/clarisco/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.3/src/schnorrsig.rs","byte_start":123026,"byte_end":123099,"line_start":363,"line_end":363,"column_start":5,"column_end":78}},{"value":"/ verification, which is significantly faster, so it is wise to design","span":{"file_name":"/home/clarisco/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.3/src/schnorrsig.rs","byte_start":123104,"byte_end":123176,"line_start":364,"line_end":364,"column_start":5,"column_end":77}},{"value":"/ protocols with this in mind.","span":{"file_name":"/home/clarisco/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.3/src/schnorrsig.rs","byte_start":123181,"byte_end":123213,"line_start":365,"line_end":365,"column_start":5,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":459},"span":{"file_name":"/home/clarisco/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.3/src/schnorrsig.rs","byte_start":126770,"byte_end":126797,"line_start":487,"line_end":487,"column_start":12,"column_end":39},"name":"schnorrsig_sign_no_aux_rand","qualname":"<Secp256k1<C>>::schnorrsig_sign_no_aux_rand","value":"pub fn schnorrsig_sign_no_aux_rand(&Self, &Message, &KeyPair) -> Signature","parent":null,"children":[],"decl_id":null,"docs":" Create a schnorr signature without using any auxiliary random data.\n","sig":null,"attributes":[{"value":"/ Create a schnorr signature without using any auxiliary random data.","span":{"file_name":"/home/clarisco/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.3/src/schnorrsig.rs","byte_start":126687,"byte_end":126758,"line_start":486,"line_end":486,"column_start":5,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":460},"span":{"file_name":"/home/clarisco/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.3/src/schnorrsig.rs","byte_start":127040,"byte_end":127069,"line_start":496,"line_end":496,"column_start":12,"column_end":41},"name":"schnorrsig_sign_with_aux_rand","qualname":"<Secp256k1<C>>::schnorrsig_sign_with_aux_rand","value":"pub fn schnorrsig_sign_with_aux_rand(&Self, &Message, &KeyPair, &[u8; ])\n-> Signature","parent":null,"children":[],"decl_id":null,"docs":" Create a Schnorr signature using the given auxiliary random data.\n","sig":null,"attributes":[{"value":"/ Create a Schnorr signature using the given auxiliary random data.","span":{"file_name":"/home/clarisco/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.3/src/schnorrsig.rs","byte_start":126959,"byte_end":127028,"line_start":495,"line_end":495,"column_start":5,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":462},"span":{"file_name":"/home/clarisco/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.3/src/schnorrsig.rs","byte_start":127932,"byte_end":127949,"line_start":525,"line_end":525,"column_start":12,"column_end":29},"name":"schnorrsig_verify","qualname":"<Secp256k1<C>>::schnorrsig_verify","value":"pub fn schnorrsig_verify(&Self, &Signature, &Message, &PublicKey)\n-> Result<(), Error>","parent":null,"children":[],"decl_id":null,"docs":" Verify a Schnorr signature.\n","sig":null,"attributes":[{"value":"/ Verify a Schnorr signature.","span":{"file_name":"/home/clarisco/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.3/src/schnorrsig.rs","byte_start":127889,"byte_end":127920,"line_start":524,"line_end":524,"column_start":5,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":789},"span":{"file_name":"/home/clarisco/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.3/src/lib.rs","byte_start":6687,"byte_end":6696,"line_start":170,"line_end":170,"column_start":12,"column_end":21},"name":"Signature","qualname":"::Signature","value":"","parent":null,"children":[],"decl_id":null,"docs":" An ECDSA signature\n","sig":null,"attributes":[{"value":"/ An ECDSA signature","span":{"file_name":"/home/clarisco/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.3/src/lib.rs","byte_start":6615,"byte_end":6637,"line_start":168,"line_end":168,"column_start":1,"column_end":23}}]},{"kind":"Struct","id":{"krate":0,"index":802},"span":{"file_name":"/home/clarisco/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.3/src/lib.rs","byte_start":6780,"byte_end":6799,"line_start":174,"line_end":174,"column_start":12,"column_end":31},"name":"SerializedSignature","qualname":"::SerializedSignature","value":"SerializedSignature {  }","parent":null,"children":[{"krate":0,"index":803},{"krate":0,"index":805}],"decl_id":null,"docs":" A DER serialized Signature\n","sig":null,"attributes":[{"value":"/ A DER serialized Signature","span":{"file_name":"/home/clarisco/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.3/src/lib.rs","byte_start":6715,"byte_end":6745,"line_start":172,"line_end":172,"column_start":1,"column_end":31}}]},{"kind":"Trait","id":{"krate":0,"index":494},"span":{"file_name":"/home/clarisco/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.3/src/lib.rs","byte_start":7692,"byte_end":7709,"line_start":209,"line_end":209,"column_start":11,"column_end":28},"name":"ThirtyTwoByteHash","qualname":"::ThirtyTwoByteHash","value":"ThirtyTwoByteHash","parent":null,"children":[{"krate":0,"index":495}],"decl_id":null,"docs":" Trait describing something that promises to be a 32-byte random number; in particular,\n it has negligible probability of being zero or overflowing the group order. Such objects\n may be converted to `Message`s without any error paths.\n","sig":null,"attributes":[{"value":"/ Trait describing something that promises to be a 32-byte random number; in particular,","span":{"file_name":"/home/clarisco/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.3/src/lib.rs","byte_start":7438,"byte_end":7528,"line_start":206,"line_end":206,"column_start":1,"column_end":91}},{"value":"/ it has negligible probability of being zero or overflowing the group order. Such objects","span":{"file_name":"/home/clarisco/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.3/src/lib.rs","byte_start":7529,"byte_end":7621,"line_start":207,"line_end":207,"column_start":1,"column_end":93}},{"value":"/ may be converted to `Message`s without any error paths.","span":{"file_name":"/home/clarisco/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.3/src/lib.rs","byte_start":7622,"byte_end":7681,"line_start":208,"line_end":208,"column_start":1,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":495},"span":{"file_name":"/home/clarisco/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.3/src/lib.rs","byte_start":7768,"byte_end":7775,"line_start":211,"line_end":211,"column_start":8,"column_end":15},"name":"into_32","qualname":"::ThirtyTwoByteHash::into_32","value":"pub fn into_32(Self) -> [u8; ]","parent":{"krate":0,"index":494},"children":[],"decl_id":null,"docs":" Converts the object into a 32-byte array\n","sig":null,"attributes":[{"value":"/ Converts the object into a 32-byte array","span":{"file_name":"/home/clarisco/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.3/src/lib.rs","byte_start":7716,"byte_end":7760,"line_start":210,"line_end":210,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":499},"span":{"file_name":"/home/clarisco/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.3/src/lib.rs","byte_start":8590,"byte_end":8598,"line_start":242,"line_end":242,"column_start":12,"column_end":20},"name":"capacity","qualname":"<SerializedSignature>::capacity","value":"pub fn capacity(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Get the capacity of the underlying data buffer.\n","sig":null,"attributes":[{"value":"/ Get the capacity of the underlying data buffer.","span":{"file_name":"/home/clarisco/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.3/src/lib.rs","byte_start":8527,"byte_end":8578,"line_start":241,"line_end":241,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":500},"span":{"file_name":"/home/clarisco/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.3/src/lib.rs","byte_start":8697,"byte_end":8700,"line_start":247,"line_end":247,"column_start":12,"column_end":15},"name":"len","qualname":"<SerializedSignature>::len","value":"pub fn len(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Get the len of the used data.\n","sig":null,"attributes":[{"value":"/ Get the len of the used data.","span":{"file_name":"/home/clarisco/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.3/src/lib.rs","byte_start":8652,"byte_end":8685,"line_start":246,"line_end":246,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":502},"span":{"file_name":"/home/clarisco/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.3/src/lib.rs","byte_start":8977,"byte_end":8989,"line_start":258,"line_end":258,"column_start":12,"column_end":24},"name":"to_signature","qualname":"<SerializedSignature>::to_signature","value":"pub fn to_signature(&Self) -> Result<Signature, Error>","parent":null,"children":[],"decl_id":null,"docs":" Convert the serialized signature into the Signature struct.\n (This DER deserializes it)\n","sig":null,"attributes":[{"value":"/ Convert the serialized signature into the Signature struct.","span":{"file_name":"/home/clarisco/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.3/src/lib.rs","byte_start":8867,"byte_end":8930,"line_start":256,"line_end":256,"column_start":5,"column_end":68}},{"value":"/ (This DER deserializes it)","span":{"file_name":"/home/clarisco/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.3/src/lib.rs","byte_start":8935,"byte_end":8965,"line_start":257,"line_end":257,"column_start":5,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":503},"span":{"file_name":"/home/clarisco/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.3/src/lib.rs","byte_start":9168,"byte_end":9182,"line_start":264,"line_end":264,"column_start":12,"column_end":26},"name":"from_signature","qualname":"<SerializedSignature>::from_signature","value":"pub fn from_signature(&Signature) -> SerializedSignature","parent":null,"children":[],"decl_id":null,"docs":" Create a SerializedSignature from a Signature.\n (this DER serializes it)\n","sig":null,"attributes":[{"value":"/ Create a SerializedSignature from a Signature.","span":{"file_name":"/home/clarisco/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.3/src/lib.rs","byte_start":9073,"byte_end":9123,"line_start":262,"line_end":262,"column_start":5,"column_end":55}},{"value":"/ (this DER serializes it)","span":{"file_name":"/home/clarisco/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.3/src/lib.rs","byte_start":9128,"byte_end":9156,"line_start":263,"line_end":263,"column_start":5,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":504},"span":{"file_name":"/home/clarisco/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.3/src/lib.rs","byte_start":9307,"byte_end":9315,"line_start":269,"line_end":269,"column_start":12,"column_end":20},"name":"is_empty","qualname":"<SerializedSignature>::is_empty","value":"pub fn is_empty(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Check if the space is zero.\n","sig":null,"attributes":[{"value":"/ Check if the space is zero.","span":{"file_name":"/home/clarisco/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.3/src/lib.rs","byte_start":9264,"byte_end":9295,"line_start":268,"line_end":268,"column_start":5,"column_end":36}}]},{"kind":"Method","id":{"krate":0,"index":506},"span":{"file_name":"/home/clarisco/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.3/src/lib.rs","byte_start":9449,"byte_end":9457,"line_start":275,"line_end":275,"column_start":12,"column_end":20},"name":"from_der","qualname":"<Signature>::from_der","value":"pub fn from_der(&[u8]) -> Result<Signature, Error>","parent":null,"children":[],"decl_id":null,"docs":" Converts a DER-encoded byte slice to a signature\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/clarisco/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.3/src/lib.rs","byte_start":9371,"byte_end":9380,"line_start":273,"line_end":273,"column_start":1,"column_end":10}},{"value":"/ Converts a DER-encoded byte slice to a signature","span":{"file_name":"/home/clarisco/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.3/src/lib.rs","byte_start":9385,"byte_end":9437,"line_start":274,"line_end":274,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":507},"span":{"file_name":"/home/clarisco/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.3/src/lib.rs","byte_start":10083,"byte_end":10095,"line_start":295,"line_end":295,"column_start":12,"column_end":24},"name":"from_compact","qualname":"<Signature>::from_compact","value":"pub fn from_compact(&[u8]) -> Result<Signature, Error>","parent":null,"children":[],"decl_id":null,"docs":" Converts a 64-byte compact-encoded byte slice to a signature\n","sig":null,"attributes":[{"value":"/ Converts a 64-byte compact-encoded byte slice to a signature","span":{"file_name":"/home/clarisco/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.3/src/lib.rs","byte_start":10007,"byte_end":10071,"line_start":294,"line_end":294,"column_start":5,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":508},"span":{"file_name":"/home/clarisco/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.3/src/lib.rs","byte_start":10933,"byte_end":10945,"line_start":319,"line_end":319,"column_start":12,"column_end":24},"name":"from_der_lax","qualname":"<Signature>::from_der_lax","value":"pub fn from_der_lax(&[u8]) -> Result<Signature, Error>","parent":null,"children":[],"decl_id":null,"docs":" Converts a \"lax DER\"-encoded byte slice to a signature. This is basically\n only useful for validating signatures in the Bitcoin blockchain from before\n 2016. It should never be used in new applications. This library does not\n support serializing to this \"format\"\n","sig":null,"attributes":[{"value":"/ Converts a \"lax DER\"-encoded byte slice to a signature. This is basically","span":{"file_name":"/home/clarisco/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.3/src/lib.rs","byte_start":10634,"byte_end":10711,"line_start":315,"line_end":315,"column_start":5,"column_end":82}},{"value":"/ only useful for validating signatures in the Bitcoin blockchain from before","span":{"file_name":"/home/clarisco/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.3/src/lib.rs","byte_start":10716,"byte_end":10795,"line_start":316,"line_end":316,"column_start":5,"column_end":84}},{"value":"/ 2016. It should never be used in new applications. This library does not","span":{"file_name":"/home/clarisco/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.3/src/lib.rs","byte_start":10800,"byte_end":10876,"line_start":317,"line_end":317,"column_start":5,"column_end":81}},{"value":"/ support serializing to this \"format\"","span":{"file_name":"/home/clarisco/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.3/src/lib.rs","byte_start":10881,"byte_end":10921,"line_start":318,"line_end":318,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":509},"span":{"file_name":"/home/clarisco/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.3/src/lib.rs","byte_start":12674,"byte_end":12685,"line_start":355,"line_end":355,"column_start":12,"column_end":23},"name":"normalize_s","qualname":"<Signature>::normalize_s","value":"pub fn normalize_s(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Normalizes a signature to a \"low S\" form. In ECDSA, signatures are\n of the form (r, s) where r and s are numbers lying in some finite\n field. The verification equation will pass for (r, s) iff it passes\n for (r, -s), so it is possible to ``modify'' signatures in transit\n by flipping the sign of s. This does not constitute a forgery since\n the signed message still cannot be changed, but for some applications,\n changing even the signature itself can be a problem. Such applications\n require a \"strong signature\". It is believed that ECDSA is a strong\n signature except for this ambiguity in the sign of s, so to accommodate\n these applications libsecp256k1 will only accept signatures for which\n s is in the lower half of the field range. This eliminates the\n ambiguity.","sig":null,"attributes":[{"value":"/ Normalizes a signature to a \"low S\" form. In ECDSA, signatures are","span":{"file_name":"/home/clarisco/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.3/src/lib.rs","byte_start":11489,"byte_end":11559,"line_start":338,"line_end":338,"column_start":5,"column_end":75}},{"value":"/ of the form (r, s) where r and s are numbers lying in some finite","span":{"file_name":"/home/clarisco/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.3/src/lib.rs","byte_start":11564,"byte_end":11633,"line_start":339,"line_end":339,"column_start":5,"column_end":74}},{"value":"/ field. The verification equation will pass for (r, s) iff it passes","span":{"file_name":"/home/clarisco/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.3/src/lib.rs","byte_start":11638,"byte_end":11709,"line_start":340,"line_end":340,"column_start":5,"column_end":76}},{"value":"/ for (r, -s), so it is possible to ``modify'' signatures in transit","span":{"file_name":"/home/clarisco/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.3/src/lib.rs","byte_start":11714,"byte_end":11784,"line_start":341,"line_end":341,"column_start":5,"column_end":75}},{"value":"/ by flipping the sign of s. This does not constitute a forgery since","span":{"file_name":"/home/clarisco/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.3/src/lib.rs","byte_start":11789,"byte_end":11860,"line_start":342,"line_end":342,"column_start":5,"column_end":76}},{"value":"/ the signed message still cannot be changed, but for some applications,","span":{"file_name":"/home/clarisco/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.3/src/lib.rs","byte_start":11865,"byte_end":11939,"line_start":343,"line_end":343,"column_start":5,"column_end":79}},{"value":"/ changing even the signature itself can be a problem. Such applications","span":{"file_name":"/home/clarisco/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.3/src/lib.rs","byte_start":11944,"byte_end":12018,"line_start":344,"line_end":344,"column_start":5,"column_end":79}},{"value":"/ require a \"strong signature\". It is believed that ECDSA is a strong","span":{"file_name":"/home/clarisco/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.3/src/lib.rs","byte_start":12023,"byte_end":12094,"line_start":345,"line_end":345,"column_start":5,"column_end":76}},{"value":"/ signature except for this ambiguity in the sign of s, so to accommodate","span":{"file_name":"/home/clarisco/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.3/src/lib.rs","byte_start":12099,"byte_end":12174,"line_start":346,"line_end":346,"column_start":5,"column_end":80}},{"value":"/ these applications libsecp256k1 will only accept signatures for which","span":{"file_name":"/home/clarisco/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.3/src/lib.rs","byte_start":12179,"byte_end":12252,"line_start":347,"line_end":347,"column_start":5,"column_end":78}},{"value":"/ s is in the lower half of the field range. This eliminates the","span":{"file_name":"/home/clarisco/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.3/src/lib.rs","byte_start":12257,"byte_end":12323,"line_start":348,"line_end":348,"column_start":5,"column_end":71}},{"value":"/ ambiguity.","span":{"file_name":"/home/clarisco/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.3/src/lib.rs","byte_start":12328,"byte_end":12342,"line_start":349,"line_end":349,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/clarisco/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.3/src/lib.rs","byte_start":12347,"byte_end":12350,"line_start":350,"line_end":350,"column_start":5,"column_end":8}},{"value":"/ However, for some systems, signatures with high s-values are considered","span":{"file_name":"/home/clarisco/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.3/src/lib.rs","byte_start":12355,"byte_end":12430,"line_start":351,"line_end":351,"column_start":5,"column_end":80}},{"value":"/ valid. (For example, parsing the historic Bitcoin blockchain requires","span":{"file_name":"/home/clarisco/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.3/src/lib.rs","byte_start":12435,"byte_end":12508,"line_start":352,"line_end":352,"column_start":5,"column_end":78}},{"value":"/ this.) For these applications we provide this normalization function,","span":{"file_name":"/home/clarisco/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.3/src/lib.rs","byte_start":12513,"byte_end":12586,"line_start":353,"line_end":353,"column_start":5,"column_end":78}},{"value":"/ which ensures that the s value lies in the lower half of its range.","span":{"file_name":"/home/clarisco/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.3/src/lib.rs","byte_start":12591,"byte_end":12662,"line_start":354,"line_end":354,"column_start":5,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":510},"span":{"file_name":"/home/clarisco/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.3/src/lib.rs","byte_start":13136,"byte_end":13142,"line_start":369,"line_end":369,"column_start":12,"column_end":18},"name":"as_ptr","qualname":"<Signature>::as_ptr","value":"pub fn as_ptr(&Self) -> *const ffi::Signature","parent":null,"children":[],"decl_id":null,"docs":" Obtains a raw pointer suitable for use with FFI functions\n","sig":null,"attributes":[{"value":"/ Obtains a raw pointer suitable for use with FFI functions","span":{"file_name":"/home/clarisco/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.3/src/lib.rs","byte_start":13049,"byte_end":13110,"line_start":367,"line_end":367,"column_start":5,"column_end":66}},{"value":"inline","span":{"file_name":"/home/clarisco/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.3/src/lib.rs","byte_start":13115,"byte_end":13124,"line_start":368,"line_end":368,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":511},"span":{"file_name":"/home/clarisco/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.3/src/lib.rs","byte_start":13299,"byte_end":13309,"line_start":375,"line_end":375,"column_start":12,"column_end":22},"name":"as_mut_ptr","qualname":"<Signature>::as_mut_ptr","value":"pub fn as_mut_ptr(&mut Self) -> *mut ffi::Signature","parent":null,"children":[],"decl_id":null,"docs":" Obtains a raw mutable pointer suitable for use with FFI functions\n","sig":null,"attributes":[{"value":"/ Obtains a raw mutable pointer suitable for use with FFI functions","span":{"file_name":"/home/clarisco/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.3/src/lib.rs","byte_start":13204,"byte_end":13273,"line_start":373,"line_end":373,"column_start":5,"column_end":74}},{"value":"inline","span":{"file_name":"/home/clarisco/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.3/src/lib.rs","byte_start":13278,"byte_end":13287,"line_start":374,"line_end":374,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":512},"span":{"file_name":"/home/clarisco/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.3/src/lib.rs","byte_start":13445,"byte_end":13458,"line_start":381,"line_end":381,"column_start":12,"column_end":25},"name":"serialize_der","qualname":"<Signature>::serialize_der","value":"pub fn serialize_der(&Self) -> SerializedSignature","parent":null,"children":[],"decl_id":null,"docs":" Serializes the signature in DER format\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/clarisco/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.3/src/lib.rs","byte_start":13377,"byte_end":13386,"line_start":379,"line_end":379,"column_start":5,"column_end":14}},{"value":"/ Serializes the signature in DER format","span":{"file_name":"/home/clarisco/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.3/src/lib.rs","byte_start":13391,"byte_end":13433,"line_start":380,"line_end":380,"column_start":5,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":513},"span":{"file_name":"/home/clarisco/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.3/src/lib.rs","byte_start":14012,"byte_end":14029,"line_start":399,"line_end":399,"column_start":12,"column_end":29},"name":"serialize_compact","qualname":"<Signature>::serialize_compact","value":"pub fn serialize_compact(&Self) -> [u8; ]","parent":null,"children":[],"decl_id":null,"docs":" Serializes the signature in compact format\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/clarisco/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.3/src/lib.rs","byte_start":13940,"byte_end":13949,"line_start":397,"line_end":397,"column_start":5,"column_end":14}},{"value":"/ Serializes the signature in compact format","span":{"file_name":"/home/clarisco/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.3/src/lib.rs","byte_start":13954,"byte_end":14000,"line_start":398,"line_end":398,"column_start":5,"column_end":51}}]},{"kind":"Struct","id":{"krate":0,"index":522},"span":{"file_name":"/home/clarisco/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.3/src/lib.rs","byte_start":15722,"byte_end":15729,"line_start":461,"line_end":461,"column_start":12,"column_end":19},"name":"Message","qualname":"::Message","value":"","parent":null,"children":[],"decl_id":null,"docs":" A (hashed) message input to an ECDSA signature\n","sig":null,"attributes":[{"value":"/ A (hashed) message input to an ECDSA signature","span":{"file_name":"/home/clarisco/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.3/src/lib.rs","byte_start":15660,"byte_end":15710,"line_start":460,"line_end":460,"column_start":1,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":527},"span":{"file_name":"/home/clarisco/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.3/src/lib.rs","byte_start":16318,"byte_end":16328,"line_start":473,"line_end":473,"column_start":12,"column_end":22},"name":"from_slice","qualname":"<Message>::from_slice","value":"pub fn from_slice(&[u8]) -> Result<Message, Error>","parent":null,"children":[],"decl_id":null,"docs":" **If you just want to sign an arbitrary message use `Message::from_hashed_data` instead.**","sig":null,"attributes":[{"value":"/ **If you just want to sign an arbitrary message use `Message::from_hashed_data` instead.**","span":{"file_name":"/home/clarisco/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.3/src/lib.rs","byte_start":15870,"byte_end":15964,"line_start":466,"line_end":466,"column_start":5,"column_end":99}},{"value":"/","span":{"file_name":"/home/clarisco/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.3/src/lib.rs","byte_start":15969,"byte_end":15972,"line_start":467,"line_end":467,"column_start":5,"column_end":8}},{"value":"/ Converts a `MESSAGE_SIZE`-byte slice to a message object. **WARNING:** the slice has to be a","span":{"file_name":"/home/clarisco/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.3/src/lib.rs","byte_start":15977,"byte_end":16073,"line_start":468,"line_end":468,"column_start":5,"column_end":101}},{"value":"/ cryptographically secure hash of the actual message that's going to be signed. Otherwise","span":{"file_name":"/home/clarisco/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.3/src/lib.rs","byte_start":16078,"byte_end":16170,"line_start":469,"line_end":469,"column_start":5,"column_end":97}},{"value":"/ the result of signing isn't a","span":{"file_name":"/home/clarisco/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.3/src/lib.rs","byte_start":16175,"byte_end":16208,"line_start":470,"line_end":470,"column_start":5,"column_end":38}},{"value":"/ [secure signature](https://twitter.com/pwuille/status/1063582706288586752).","span":{"file_name":"/home/clarisco/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.3/src/lib.rs","byte_start":16213,"byte_end":16292,"line_start":471,"line_end":471,"column_start":5,"column_end":84}},{"value":"inline","span":{"file_name":"/home/clarisco/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.3/src/lib.rs","byte_start":16297,"byte_end":16306,"line_start":472,"line_end":472,"column_start":5,"column_end":14}}]},{"kind":"TupleVariant","id":{"krate":0,"index":851},"span":{"file_name":"/home/clarisco/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.3/src/lib.rs","byte_start":17769,"byte_end":17787,"line_start":516,"line_end":516,"column_start":5,"column_end":23},"name":"IncorrectSignature","qualname":"::Error::IncorrectSignature","value":"Error::IncorrectSignature","parent":{"krate":0,"index":850},"children":[],"decl_id":null,"docs":" Signature failed verification\n","sig":null,"attributes":[{"value":"/ Signature failed verification","span":{"file_name":"/home/clarisco/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.3/src/lib.rs","byte_start":17731,"byte_end":17764,"line_start":515,"line_end":515,"column_start":5,"column_end":38}}]},{"kind":"TupleVariant","id":{"krate":0,"index":853},"span":{"file_name":"/home/clarisco/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.3/src/lib.rs","byte_start":17908,"byte_end":17922,"line_start":519,"line_end":519,"column_start":5,"column_end":19},"name":"InvalidMessage","qualname":"::Error::InvalidMessage","value":"Error::InvalidMessage","parent":{"krate":0,"index":850},"children":[],"decl_id":null,"docs":" Badly sized message (\"messages\" are actually fixed-sized digests; see the `MESSAGE_SIZE`\n constant)\n","sig":null,"attributes":[{"value":"/ Badly sized message (\"messages\" are actually fixed-sized digests; see the `MESSAGE_SIZE`","span":{"file_name":"/home/clarisco/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.3/src/lib.rs","byte_start":17793,"byte_end":17885,"line_start":517,"line_end":517,"column_start":5,"column_end":97}},{"value":"/ constant)","span":{"file_name":"/home/clarisco/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.3/src/lib.rs","byte_start":17890,"byte_end":17903,"line_start":518,"line_end":518,"column_start":5,"column_end":18}}]},{"kind":"TupleVariant","id":{"krate":0,"index":855},"span":{"file_name":"/home/clarisco/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.3/src/lib.rs","byte_start":17951,"byte_end":17967,"line_start":521,"line_end":521,"column_start":5,"column_end":21},"name":"InvalidPublicKey","qualname":"::Error::InvalidPublicKey","value":"Error::InvalidPublicKey","parent":{"krate":0,"index":850},"children":[],"decl_id":null,"docs":" Bad public key\n","sig":null,"attributes":[{"value":"/ Bad public key","span":{"file_name":"/home/clarisco/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.3/src/lib.rs","byte_start":17928,"byte_end":17946,"line_start":520,"line_end":520,"column_start":5,"column_end":23}}]},{"kind":"TupleVariant","id":{"krate":0,"index":857},"span":{"file_name":"/home/clarisco/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.3/src/lib.rs","byte_start":17995,"byte_end":18011,"line_start":523,"line_end":523,"column_start":5,"column_end":21},"name":"InvalidSignature","qualname":"::Error::InvalidSignature","value":"Error::InvalidSignature","parent":{"krate":0,"index":850},"children":[],"decl_id":null,"docs":" Bad signature\n","sig":null,"attributes":[{"value":"/ Bad signature","span":{"file_name":"/home/clarisco/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.3/src/lib.rs","byte_start":17973,"byte_end":17990,"line_start":522,"line_end":522,"column_start":5,"column_end":22}}]},{"kind":"TupleVariant","id":{"krate":0,"index":859},"span":{"file_name":"/home/clarisco/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.3/src/lib.rs","byte_start":18040,"byte_end":18056,"line_start":525,"line_end":525,"column_start":5,"column_end":21},"name":"InvalidSecretKey","qualname":"::Error::InvalidSecretKey","value":"Error::InvalidSecretKey","parent":{"krate":0,"index":850},"children":[],"decl_id":null,"docs":" Bad secret key\n","sig":null,"attributes":[{"value":"/ Bad secret key","span":{"file_name":"/home/clarisco/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.3/src/lib.rs","byte_start":18017,"byte_end":18035,"line_start":524,"line_end":524,"column_start":5,"column_end":23}}]},{"kind":"TupleVariant","id":{"krate":0,"index":861},"span":{"file_name":"/home/clarisco/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.3/src/lib.rs","byte_start":18086,"byte_end":18103,"line_start":527,"line_end":527,"column_start":5,"column_end":22},"name":"InvalidRecoveryId","qualname":"::Error::InvalidRecoveryId","value":"Error::InvalidRecoveryId","parent":{"krate":0,"index":850},"children":[],"decl_id":null,"docs":" Bad recovery id\n","sig":null,"attributes":[{"value":"/ Bad recovery id","span":{"file_name":"/home/clarisco/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.3/src/lib.rs","byte_start":18062,"byte_end":18081,"line_start":526,"line_end":526,"column_start":5,"column_end":24}}]},{"kind":"TupleVariant","id":{"krate":0,"index":863},"span":{"file_name":"/home/clarisco/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.3/src/lib.rs","byte_start":18164,"byte_end":18176,"line_start":529,"line_end":529,"column_start":5,"column_end":17},"name":"InvalidTweak","qualname":"::Error::InvalidTweak","value":"Error::InvalidTweak","parent":{"krate":0,"index":850},"children":[],"decl_id":null,"docs":" Invalid tweak for add_*_assign or mul_*_assign\n","sig":null,"attributes":[{"value":"/ Invalid tweak for add_*_assign or mul_*_assign","span":{"file_name":"/home/clarisco/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.3/src/lib.rs","byte_start":18109,"byte_end":18159,"line_start":528,"line_end":528,"column_start":5,"column_end":55}}]},{"kind":"TupleVariant","id":{"krate":0,"index":865},"span":{"file_name":"/home/clarisco/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.3/src/lib.rs","byte_start":18238,"byte_end":18254,"line_start":531,"line_end":531,"column_start":5,"column_end":21},"name":"TweakCheckFailed","qualname":"::Error::TweakCheckFailed","value":"Error::TweakCheckFailed","parent":{"krate":0,"index":850},"children":[],"decl_id":null,"docs":" `tweak_add_check` failed on an xonly public key\n","sig":null,"attributes":[{"value":"/ `tweak_add_check` failed on an xonly public key","span":{"file_name":"/home/clarisco/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.3/src/lib.rs","byte_start":18182,"byte_end":18233,"line_start":530,"line_end":530,"column_start":5,"column_end":56}}]},{"kind":"TupleVariant","id":{"krate":0,"index":867},"span":{"file_name":"/home/clarisco/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.3/src/lib.rs","byte_start":18339,"byte_end":18354,"line_start":533,"line_end":533,"column_start":5,"column_end":20},"name":"NotEnoughMemory","qualname":"::Error::NotEnoughMemory","value":"Error::NotEnoughMemory","parent":{"krate":0,"index":850},"children":[],"decl_id":null,"docs":" Didn't pass enough memory to context creation with preallocated memory\n","sig":null,"attributes":[{"value":"/ Didn't pass enough memory to context creation with preallocated memory","span":{"file_name":"/home/clarisco/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.3/src/lib.rs","byte_start":18260,"byte_end":18334,"line_start":532,"line_end":532,"column_start":5,"column_end":79}}]},{"kind":"Enum","id":{"krate":0,"index":850},"span":{"file_name":"/home/clarisco/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.3/src/lib.rs","byte_start":17719,"byte_end":17724,"line_start":514,"line_end":514,"column_start":10,"column_end":15},"name":"Error","qualname":"::Error","value":"pub enum Error {\n    IncorrectSignature,\n    InvalidMessage,\n    InvalidPublicKey,\n    InvalidSignature,\n    InvalidSecretKey,\n    InvalidRecoveryId,\n    InvalidTweak,\n    TweakCheckFailed,\n    NotEnoughMemory,\n}","parent":null,"children":[{"krate":0,"index":851},{"krate":0,"index":853},{"krate":0,"index":855},{"krate":0,"index":857},{"krate":0,"index":859},{"krate":0,"index":861},{"krate":0,"index":863},{"krate":0,"index":865},{"krate":0,"index":867}],"decl_id":null,"docs":" An ECDSA error\n","sig":null,"attributes":[{"value":"/ An ECDSA error","span":{"file_name":"/home/clarisco/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.3/src/lib.rs","byte_start":17623,"byte_end":17641,"line_start":512,"line_end":512,"column_start":1,"column_end":19}}]},{"kind":"Struct","id":{"krate":0,"index":537},"span":{"file_name":"/home/clarisco/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.3/src/lib.rs","byte_start":19471,"byte_end":19480,"line_start":564,"line_end":564,"column_start":12,"column_end":21},"name":"Secp256k1","qualname":"::Secp256k1","value":"Secp256k1 {  }","parent":null,"children":[{"krate":0,"index":539},{"krate":0,"index":540},{"krate":0,"index":541}],"decl_id":null,"docs":" The secp256k1 engine, used to execute all signature operations\n","sig":null,"attributes":[{"value":"/ The secp256k1 engine, used to execute all signature operations","span":{"file_name":"/home/clarisco/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.3/src/lib.rs","byte_start":19393,"byte_end":19459,"line_start":563,"line_end":563,"column_start":1,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":570},"span":{"file_name":"/home/clarisco/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.3/src/lib.rs","byte_start":21335,"byte_end":21338,"line_start":633,"line_end":633,"column_start":12,"column_end":15},"name":"ctx","qualname":"<Secp256k1<C>>::ctx","value":"pub fn ctx(&Self) -> &*mut ffi::Context","parent":null,"children":[],"decl_id":null,"docs":" Getter for the raw pointer to the underlying secp256k1 context. This\n shouldn't be needed with normal usage of the library. It enables\n extending the Secp256k1 with more cryptographic algorithms outside of\n this crate.\n","sig":null,"attributes":[{"value":"/ Getter for the raw pointer to the underlying secp256k1 context. This","span":{"file_name":"/home/clarisco/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.3/src/lib.rs","byte_start":21080,"byte_end":21152,"line_start":629,"line_end":629,"column_start":5,"column_end":77}},{"value":"/ shouldn't be needed with normal usage of the library. It enables","span":{"file_name":"/home/clarisco/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.3/src/lib.rs","byte_start":21157,"byte_end":21225,"line_start":630,"line_end":630,"column_start":5,"column_end":73}},{"value":"/ extending the Secp256k1 with more cryptographic algorithms outside of","span":{"file_name":"/home/clarisco/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.3/src/lib.rs","byte_start":21230,"byte_end":21303,"line_start":631,"line_end":631,"column_start":5,"column_end":78}},{"value":"/ this crate.","span":{"file_name":"/home/clarisco/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.3/src/lib.rs","byte_start":21308,"byte_end":21323,"line_start":632,"line_end":632,"column_start":5,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":571},"span":{"file_name":"/home/clarisco/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.3/src/lib.rs","byte_start":21513,"byte_end":21533,"line_start":638,"line_end":638,"column_start":12,"column_end":32},"name":"preallocate_size_gen","qualname":"<Secp256k1<C>>::preallocate_size_gen","value":"pub fn preallocate_size_gen() -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the required memory for a preallocated context buffer in a generic manner(sign/verify/all)\n","sig":null,"attributes":[{"value":"/ Returns the required memory for a preallocated context buffer in a generic manner(sign/verify/all)","span":{"file_name":"/home/clarisco/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.3/src/lib.rs","byte_start":21399,"byte_end":21501,"line_start":637,"line_end":637,"column_start":5,"column_end":107}}]},{"kind":"Method","id":{"krate":0,"index":572},"span":{"file_name":"/home/clarisco/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.3/src/lib.rs","byte_start":22381,"byte_end":22397,"line_start":658,"line_end":658,"column_start":12,"column_end":28},"name":"seeded_randomize","qualname":"<Secp256k1<C>>::seeded_randomize","value":"pub fn seeded_randomize(&mut Self, &[u8; ])","parent":null,"children":[],"decl_id":null,"docs":" (Re)randomizes the Secp256k1 context for cheap sidechannel resistance given 32 bytes of\n cryptographically-secure random data;\n see comment in libsecp256k1 commit d2275795f by Gregory Maxwell.\n","sig":null,"attributes":[{"value":"/ (Re)randomizes the Secp256k1 context for cheap sidechannel resistance given 32 bytes of","span":{"file_name":"/home/clarisco/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.3/src/lib.rs","byte_start":22159,"byte_end":22250,"line_start":655,"line_end":655,"column_start":5,"column_end":96}},{"value":"/ cryptographically-secure random data;","span":{"file_name":"/home/clarisco/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.3/src/lib.rs","byte_start":22255,"byte_end":22296,"line_start":656,"line_end":656,"column_start":5,"column_end":46}},{"value":"/ see comment in libsecp256k1 commit d2275795f by Gregory Maxwell.","span":{"file_name":"/home/clarisco/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.3/src/lib.rs","byte_start":22301,"byte_end":22369,"line_start":657,"line_end":657,"column_start":5,"column_end":73}}]},{"kind":"Method","id":{"krate":0,"index":580},"span":{"file_name":"/home/clarisco/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.3/src/lib.rs","byte_start":24117,"byte_end":24121,"line_start":706,"line_end":706,"column_start":12,"column_end":16},"name":"sign","qualname":"<Secp256k1<C>>::sign","value":"pub fn sign(&Self, &Message, &key::SecretKey) -> Signature","parent":null,"children":[],"decl_id":null,"docs":" Constructs a signature for `msg` using the secret key `sk` and RFC6979 nonce\n Requires a signing-capable context.\n","sig":null,"attributes":[{"value":"/ Constructs a signature for `msg` using the secret key `sk` and RFC6979 nonce","span":{"file_name":"/home/clarisco/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.3/src/lib.rs","byte_start":23981,"byte_end":24061,"line_start":704,"line_end":704,"column_start":5,"column_end":85}},{"value":"/ Requires a signing-capable context.","span":{"file_name":"/home/clarisco/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.3/src/lib.rs","byte_start":24066,"byte_end":24105,"line_start":705,"line_end":705,"column_start":5,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":585},"span":{"file_name":"/home/clarisco/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.3/src/lib.rs","byte_start":26802,"byte_end":26814,"line_start":762,"line_end":762,"column_start":12,"column_end":24},"name":"sign_grind_r","qualname":"<Secp256k1<C>>::sign_grind_r","value":"pub fn sign_grind_r(&Self, &Message, &key::SecretKey, usize) -> Signature","parent":null,"children":[],"decl_id":null,"docs":" Constructs a signature for `msg` using the secret key `sk`, RFC6979 nonce\n and \"grinds\" the nonce by passing extra entropy if necessary to produce\n a signature that is less than 71 - bytes_to_grund bytes. The number\n of signing operation performed by this function is exponential in the\n number of bytes grinded.\n Requires a signing capable context.\n","sig":null,"attributes":[{"value":"/ Constructs a signature for `msg` using the secret key `sk`, RFC6979 nonce","span":{"file_name":"/home/clarisco/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.3/src/lib.rs","byte_start":26402,"byte_end":26479,"line_start":756,"line_end":756,"column_start":5,"column_end":82}},{"value":"/ and \"grinds\" the nonce by passing extra entropy if necessary to produce","span":{"file_name":"/home/clarisco/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.3/src/lib.rs","byte_start":26484,"byte_end":26559,"line_start":757,"line_end":757,"column_start":5,"column_end":80}},{"value":"/ a signature that is less than 71 - bytes_to_grund bytes. The number","span":{"file_name":"/home/clarisco/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.3/src/lib.rs","byte_start":26564,"byte_end":26635,"line_start":758,"line_end":758,"column_start":5,"column_end":76}},{"value":"/ of signing operation performed by this function is exponential in the","span":{"file_name":"/home/clarisco/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.3/src/lib.rs","byte_start":26640,"byte_end":26713,"line_start":759,"line_end":759,"column_start":5,"column_end":78}},{"value":"/ number of bytes grinded.","span":{"file_name":"/home/clarisco/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.3/src/lib.rs","byte_start":26718,"byte_end":26746,"line_start":760,"line_end":760,"column_start":5,"column_end":33}},{"value":"/ Requires a signing capable context.","span":{"file_name":"/home/clarisco/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.3/src/lib.rs","byte_start":26751,"byte_end":26790,"line_start":761,"line_end":761,"column_start":5,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":587},"span":{"file_name":"/home/clarisco/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.3/src/lib.rs","byte_start":27469,"byte_end":27479,"line_start":773,"line_end":773,"column_start":12,"column_end":22},"name":"sign_low_r","qualname":"<Secp256k1<C>>::sign_low_r","value":"pub fn sign_low_r(&Self, &Message, &key::SecretKey) -> Signature","parent":null,"children":[],"decl_id":null,"docs":" Constructs a signature for `msg` using the secret key `sk`, RFC6979 nonce\n and \"grinds\" the nonce by passing extra entropy if necessary to produce\n a signature that is less than 71 bytes and compatible with the low r\n signature implementation of bitcoin core. In average, this function\n will perform two signing operations.\n Requires a signing capable context.\n","sig":null,"attributes":[{"value":"/ Constructs a signature for `msg` using the secret key `sk`, RFC6979 nonce","span":{"file_name":"/home/clarisco/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.3/src/lib.rs","byte_start":27058,"byte_end":27135,"line_start":767,"line_end":767,"column_start":5,"column_end":82}},{"value":"/ and \"grinds\" the nonce by passing extra entropy if necessary to produce","span":{"file_name":"/home/clarisco/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.3/src/lib.rs","byte_start":27140,"byte_end":27215,"line_start":768,"line_end":768,"column_start":5,"column_end":80}},{"value":"/ a signature that is less than 71 bytes and compatible with the low r","span":{"file_name":"/home/clarisco/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.3/src/lib.rs","byte_start":27220,"byte_end":27292,"line_start":769,"line_end":769,"column_start":5,"column_end":77}},{"value":"/ signature implementation of bitcoin core. In average, this function","span":{"file_name":"/home/clarisco/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.3/src/lib.rs","byte_start":27297,"byte_end":27368,"line_start":770,"line_end":770,"column_start":5,"column_end":76}},{"value":"/ will perform two signing operations.","span":{"file_name":"/home/clarisco/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.3/src/lib.rs","byte_start":27373,"byte_end":27413,"line_start":771,"line_end":771,"column_start":5,"column_end":45}},{"value":"/ Requires a signing capable context.","span":{"file_name":"/home/clarisco/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.3/src/lib.rs","byte_start":27418,"byte_end":27457,"line_start":772,"line_end":772,"column_start":5,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":590},"span":{"file_name":"/home/clarisco/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.3/src/lib.rs","byte_start":29396,"byte_end":29402,"line_start":816,"line_end":816,"column_start":12,"column_end":18},"name":"verify","qualname":"<Secp256k1<C>>::verify","value":"pub fn verify(&Self, &Message, &Signature, &key::PublicKey)\n-> Result<(), Error>","parent":null,"children":[],"decl_id":null,"docs":" Checks that `sig` is a valid ECDSA signature for `msg` using the public\n key `pubkey`. Returns `Ok(())` on success. Note that this function cannot\n be used for Bitcoin consensus checking since there may exist signatures\n which OpenSSL would verify but not libsecp256k1, or vice-versa. Requires a\n verify-capable context.","sig":null,"attributes":[{"value":"/ Checks that `sig` is a valid ECDSA signature for `msg` using the public","span":{"file_name":"/home/clarisco/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.3/src/lib.rs","byte_start":28276,"byte_end":28351,"line_start":792,"line_end":792,"column_start":5,"column_end":80}},{"value":"/ key `pubkey`. Returns `Ok(())` on success. Note that this function cannot","span":{"file_name":"/home/clarisco/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.3/src/lib.rs","byte_start":28356,"byte_end":28433,"line_start":793,"line_end":793,"column_start":5,"column_end":82}},{"value":"/ be used for Bitcoin consensus checking since there may exist signatures","span":{"file_name":"/home/clarisco/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.3/src/lib.rs","byte_start":28438,"byte_end":28513,"line_start":794,"line_end":794,"column_start":5,"column_end":80}},{"value":"/ which OpenSSL would verify but not libsecp256k1, or vice-versa. Requires a","span":{"file_name":"/home/clarisco/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.3/src/lib.rs","byte_start":28518,"byte_end":28596,"line_start":795,"line_end":795,"column_start":5,"column_end":83}},{"value":"/ verify-capable context.","span":{"file_name":"/home/clarisco/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.3/src/lib.rs","byte_start":28601,"byte_end":28628,"line_start":796,"line_end":796,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/clarisco/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.3/src/lib.rs","byte_start":28633,"byte_end":28636,"line_start":797,"line_end":797,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/clarisco/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.3/src/lib.rs","byte_start":28641,"byte_end":28652,"line_start":798,"line_end":798,"column_start":5,"column_end":16}},{"value":"/ # #[cfg(feature=\"rand\")] {","span":{"file_name":"/home/clarisco/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.3/src/lib.rs","byte_start":28657,"byte_end":28687,"line_start":799,"line_end":799,"column_start":5,"column_end":35}},{"value":"/ # use secp256k1::rand::rngs::OsRng;","span":{"file_name":"/home/clarisco/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.3/src/lib.rs","byte_start":28692,"byte_end":28731,"line_start":800,"line_end":800,"column_start":5,"column_end":44}},{"value":"/ # use secp256k1::{Secp256k1, Message, Error};","span":{"file_name":"/home/clarisco/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.3/src/lib.rs","byte_start":28736,"byte_end":28785,"line_start":801,"line_end":801,"column_start":5,"column_end":54}},{"value":"/ #","span":{"file_name":"/home/clarisco/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.3/src/lib.rs","byte_start":28790,"byte_end":28795,"line_start":802,"line_end":802,"column_start":5,"column_end":10}},{"value":"/ # let secp = Secp256k1::new();","span":{"file_name":"/home/clarisco/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.3/src/lib.rs","byte_start":28800,"byte_end":28834,"line_start":803,"line_end":803,"column_start":5,"column_end":39}},{"value":"/ # let mut rng = OsRng::new().expect(\"OsRng\");","span":{"file_name":"/home/clarisco/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.3/src/lib.rs","byte_start":28839,"byte_end":28888,"line_start":804,"line_end":804,"column_start":5,"column_end":54}},{"value":"/ # let (secret_key, public_key) = secp.generate_keypair(&mut rng);","span":{"file_name":"/home/clarisco/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.3/src/lib.rs","byte_start":28893,"byte_end":28962,"line_start":805,"line_end":805,"column_start":5,"column_end":74}},{"value":"/ #","span":{"file_name":"/home/clarisco/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.3/src/lib.rs","byte_start":28967,"byte_end":28972,"line_start":806,"line_end":806,"column_start":5,"column_end":10}},{"value":"/ let message = Message::from_slice(&[0xab; 32]).expect(\"32 bytes\");","span":{"file_name":"/home/clarisco/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.3/src/lib.rs","byte_start":28977,"byte_end":29047,"line_start":807,"line_end":807,"column_start":5,"column_end":75}},{"value":"/ let sig = secp.sign(&message, &secret_key);","span":{"file_name":"/home/clarisco/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.3/src/lib.rs","byte_start":29052,"byte_end":29099,"line_start":808,"line_end":808,"column_start":5,"column_end":52}},{"value":"/ assert_eq!(secp.verify(&message, &sig, &public_key), Ok(()));","span":{"file_name":"/home/clarisco/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.3/src/lib.rs","byte_start":29104,"byte_end":29169,"line_start":809,"line_end":809,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/clarisco/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.3/src/lib.rs","byte_start":29174,"byte_end":29177,"line_start":810,"line_end":810,"column_start":5,"column_end":8}},{"value":"/ let message = Message::from_slice(&[0xcd; 32]).expect(\"32 bytes\");","span":{"file_name":"/home/clarisco/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.3/src/lib.rs","byte_start":29182,"byte_end":29252,"line_start":811,"line_end":811,"column_start":5,"column_end":75}},{"value":"/ assert_eq!(secp.verify(&message, &sig, &public_key), Err(Error::IncorrectSignature));","span":{"file_name":"/home/clarisco/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.3/src/lib.rs","byte_start":29257,"byte_end":29346,"line_start":812,"line_end":812,"column_start":5,"column_end":94}},{"value":"/ # }","span":{"file_name":"/home/clarisco/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.3/src/lib.rs","byte_start":29351,"byte_end":29358,"line_start":813,"line_end":813,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/clarisco/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.3/src/lib.rs","byte_start":29363,"byte_end":29370,"line_start":814,"line_end":814,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/clarisco/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.3/src/lib.rs","byte_start":29375,"byte_end":29384,"line_start":815,"line_end":815,"column_start":5,"column_end":14}}]}],"impls":[{"id":0,"kind":"Direct","span":{"file_name":"/home/clarisco/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.3/src/context.rs","byte_start":56522,"byte_end":56537,"line_start":91,"line_end":91,"column_start":27,"column_end":42},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Direct","span":{"file_name":"/home/clarisco/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.3/src/context.rs","byte_start":56573,"byte_end":56595,"line_start":92,"line_end":92,"column_start":27,"column_end":49},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Direct","span":{"file_name":"/home/clarisco/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.3/src/context.rs","byte_start":56631,"byte_end":56651,"line_start":93,"line_end":93,"column_start":27,"column_end":47},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Direct","span":{"file_name":"/home/clarisco/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.3/src/context.rs","byte_start":56862,"byte_end":56870,"line_start":103,"line_end":103,"column_start":30,"column_end":38},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Direct","span":{"file_name":"/home/clarisco/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.3/src/context.rs","byte_start":56903,"byte_end":56906,"line_start":104,"line_end":104,"column_start":30,"column_end":33},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Direct","span":{"file_name":"/home/clarisco/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.3/src/context.rs","byte_start":56939,"byte_end":56949,"line_start":105,"line_end":105,"column_start":30,"column_end":40},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Direct","span":{"file_name":"/home/clarisco/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.3/src/context.rs","byte_start":57308,"byte_end":57316,"line_start":119,"line_end":119,"column_start":22,"column_end":30},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Direct","span":{"file_name":"/home/clarisco/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.3/src/context.rs","byte_start":57341,"byte_end":57344,"line_start":120,"line_end":120,"column_start":22,"column_end":25},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Direct","span":{"file_name":"/home/clarisco/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.3/src/context.rs","byte_start":57375,"byte_end":57385,"line_start":122,"line_end":122,"column_start":27,"column_end":37},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Direct","span":{"file_name":"/home/clarisco/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.3/src/context.rs","byte_start":57415,"byte_end":57418,"line_start":123,"line_end":123,"column_start":27,"column_end":30},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Direct","span":{"file_name":"/home/clarisco/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.3/src/context.rs","byte_start":57451,"byte_end":57459,"line_start":125,"line_end":125,"column_start":29,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":97},{"krate":0,"index":98},{"krate":0,"index":99}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Direct","span":{"file_name":"/home/clarisco/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.3/src/context.rs","byte_start":57804,"byte_end":57814,"line_start":135,"line_end":135,"column_start":29,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":101},{"krate":0,"index":102},{"krate":0,"index":103}],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Direct","span":{"file_name":"/home/clarisco/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.3/src/context.rs","byte_start":58166,"byte_end":58169,"line_start":145,"line_end":145,"column_start":29,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":105},{"krate":0,"index":106},{"krate":0,"index":107}],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Inherent","span":{"file_name":"/home/clarisco/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.3/src/context.rs","byte_start":58521,"byte_end":58530,"line_start":155,"line_end":155,"column_start":22,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":110}],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Inherent","span":{"file_name":"/home/clarisco/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.3/src/context.rs","byte_start":59199,"byte_end":59208,"line_start":172,"line_end":172,"column_start":10,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":112}],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Inherent","span":{"file_name":"/home/clarisco/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.3/src/context.rs","byte_start":59382,"byte_end":59391,"line_start":179,"line_end":179,"column_start":10,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":114}],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Inherent","span":{"file_name":"/home/clarisco/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.3/src/context.rs","byte_start":59596,"byte_end":59605,"line_start":186,"line_end":186,"column_start":10,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":116}],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Direct","span":{"file_name":"/home/clarisco/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.3/src/context.rs","byte_start":59836,"byte_end":59845,"line_start":193,"line_end":193,"column_start":22,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":118}],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Direct","span":{"file_name":"/home/clarisco/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.3/src/context.rs","byte_start":59956,"byte_end":59965,"line_start":199,"line_end":199,"column_start":32,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":121}],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Direct","span":{"file_name":"/home/clarisco/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.3/src/context.rs","byte_start":60488,"byte_end":60508,"line_start":213,"line_end":213,"column_start":24,"column_end":44},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Direct","span":{"file_name":"/home/clarisco/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.3/src/context.rs","byte_start":60541,"byte_end":60556,"line_start":214,"line_end":214,"column_start":24,"column_end":39},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":21,"kind":"Direct","span":{"file_name":"/home/clarisco/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.3/src/context.rs","byte_start":60595,"byte_end":60617,"line_start":216,"line_end":216,"column_start":29,"column_end":51},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":22,"kind":"Direct","span":{"file_name":"/home/clarisco/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.3/src/context.rs","byte_start":60655,"byte_end":60670,"line_start":217,"line_end":217,"column_start":29,"column_end":44},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":23,"kind":"Direct","span":{"file_name":"/home/clarisco/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.3/src/context.rs","byte_start":60711,"byte_end":60731,"line_start":219,"line_end":219,"column_start":31,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":132},{"krate":0,"index":133},{"krate":0,"index":134}],"docs":"","sig":null,"attributes":[]},{"id":24,"kind":"Direct","span":{"file_name":"/home/clarisco/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.3/src/context.rs","byte_start":60976,"byte_end":60998,"line_start":228,"line_end":228,"column_start":31,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":137},{"krate":0,"index":138},{"krate":0,"index":139}],"docs":"","sig":null,"attributes":[]},{"id":25,"kind":"Direct","span":{"file_name":"/home/clarisco/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.3/src/context.rs","byte_start":61250,"byte_end":61265,"line_start":237,"line_end":237,"column_start":31,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":142},{"krate":0,"index":143},{"krate":0,"index":144}],"docs":"","sig":null,"attributes":[]},{"id":26,"kind":"Inherent","span":{"file_name":"/home/clarisco/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.3/src/context.rs","byte_start":61548,"byte_end":61557,"line_start":246,"line_end":246,"column_start":31,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":148}],"docs":"","sig":null,"attributes":[]},{"id":27,"kind":"Inherent","span":{"file_name":"/home/clarisco/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.3/src/context.rs","byte_start":62333,"byte_end":62342,"line_start":267,"line_end":267,"column_start":12,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":151},{"krate":0,"index":152},{"krate":0,"index":153}],"docs":"","sig":null,"attributes":[]},{"id":28,"kind":"Inherent","span":{"file_name":"/home/clarisco/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.3/src/context.rs","byte_start":63759,"byte_end":63768,"line_start":297,"line_end":297,"column_start":12,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":156},{"krate":0,"index":157},{"krate":0,"index":158}],"docs":"","sig":null,"attributes":[]},{"id":29,"kind":"Inherent","span":{"file_name":"/home/clarisco/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.3/src/context.rs","byte_start":65291,"byte_end":65300,"line_start":329,"line_end":329,"column_start":12,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":161},{"krate":0,"index":162},{"krate":0,"index":163}],"docs":"","sig":null,"attributes":[]},{"id":30,"kind":"Inherent","span":{"file_name":"/home/clarisco/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.3/src/ecdh.rs","byte_start":70464,"byte_end":70476,"line_start":39,"line_end":39,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":218},{"krate":0,"index":220},{"krate":0,"index":221},{"krate":0,"index":222},{"krate":0,"index":223},{"krate":0,"index":224}],"docs":"","sig":null,"attributes":[]},{"id":31,"kind":"Direct","span":{"file_name":"/home/clarisco/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.3/src/ecdh.rs","byte_start":71357,"byte_end":71369,"line_start":76,"line_end":76,"column_start":20,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":226}],"docs":"","sig":null,"attributes":[]},{"id":32,"kind":"Direct","span":{"file_name":"/home/clarisco/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.3/src/ecdh.rs","byte_start":71491,"byte_end":71503,"line_start":82,"line_end":82,"column_start":22,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":228}],"docs":"","sig":null,"attributes":[]},{"id":33,"kind":"Direct","span":{"file_name":"/home/clarisco/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.3/src/ecdh.rs","byte_start":71593,"byte_end":71605,"line_start":88,"line_end":88,"column_start":16,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":230},{"krate":0,"index":231}],"docs":"","sig":null,"attributes":[]},{"id":34,"kind":"Inherent","span":{"file_name":"/home/clarisco/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.3/src/ecdh.rs","byte_start":71942,"byte_end":71954,"line_start":102,"line_end":102,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":234},{"krate":0,"index":235}],"docs":"","sig":null,"attributes":[]},{"id":35,"kind":"Direct","span":{"file_name":"/home/clarisco/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.3/src/key.rs","byte_start":78286,"byte_end":78295,"line_start":34,"line_end":34,"column_start":24,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":288}],"docs":"","sig":null,"attributes":[]},{"id":36,"kind":"Direct","span":{"file_name":"/home/clarisco/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.3/src/key.rs","byte_start":78484,"byte_end":78493,"line_start":43,"line_end":43,"column_start":23,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":290}],"docs":"","sig":null,"attributes":[]},{"id":37,"kind":"Direct","span":{"file_name":"/home/clarisco/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.3/src/key.rs","byte_start":78622,"byte_end":78631,"line_start":49,"line_end":49,"column_start":23,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":292},{"krate":0,"index":293}],"docs":"","sig":null,"attributes":[]},{"id":38,"kind":"Direct","span":{"file_name":"/home/clarisco/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.3/src/key.rs","byte_start":79450,"byte_end":79459,"line_start":71,"line_end":71,"column_start":24,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":297}],"docs":"","sig":null,"attributes":[]},{"id":39,"kind":"Direct","span":{"file_name":"/home/clarisco/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.3/src/key.rs","byte_start":79681,"byte_end":79690,"line_start":81,"line_end":81,"column_start":23,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":299}],"docs":"","sig":null,"attributes":[]},{"id":40,"kind":"Direct","span":{"file_name":"/home/clarisco/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.3/src/key.rs","byte_start":79819,"byte_end":79828,"line_start":87,"line_end":87,"column_start":23,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":301},{"krate":0,"index":302}],"docs":"","sig":null,"attributes":[]},{"id":41,"kind":"Inherent","span":{"file_name":"/home/clarisco/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.3/src/key.rs","byte_start":80547,"byte_end":80556,"line_start":112,"line_end":112,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":305},{"krate":0,"index":307},{"krate":0,"index":308},{"krate":0,"index":309}],"docs":"","sig":null,"attributes":[]},{"id":42,"kind":"Inherent","span":{"file_name":"/home/clarisco/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.3/src/key.rs","byte_start":84458,"byte_end":84467,"line_start":244,"line_end":244,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":311},{"krate":0,"index":312},{"krate":0,"index":313},{"krate":0,"index":315},{"krate":0,"index":316},{"krate":0,"index":319},{"krate":0,"index":322},{"krate":0,"index":324},{"krate":0,"index":326},{"krate":0,"index":328},{"krate":0,"index":329}],"docs":"","sig":null,"attributes":[]},{"id":43,"kind":"Direct","span":{"file_name":"/home/clarisco/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.3/src/key.rs","byte_start":90497,"byte_end":90506,"line_start":423,"line_end":423,"column_start":15,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":337},{"krate":0,"index":338},{"krate":0,"index":339}],"docs":"","sig":null,"attributes":[]},{"id":44,"kind":"Direct","span":{"file_name":"/home/clarisco/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.3/src/key.rs","byte_start":90791,"byte_end":90800,"line_start":436,"line_end":436,"column_start":31,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":341}],"docs":"","sig":null,"attributes":[]},{"id":45,"kind":"Direct","span":{"file_name":"/home/clarisco/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.3/src/key.rs","byte_start":91784,"byte_end":91793,"line_start":470,"line_end":470,"column_start":21,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":343}],"docs":"","sig":null,"attributes":[]},{"id":46,"kind":"Direct","span":{"file_name":"/home/clarisco/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.3/src/key.rs","byte_start":91955,"byte_end":91964,"line_start":476,"line_end":476,"column_start":14,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":345}],"docs":"","sig":null,"attributes":[]},{"id":47,"kind":"Direct","span":{"file_name":"/home/clarisco/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.3/src/schnorrsig.rs","byte_start":113018,"byte_end":113027,"line_start":49,"line_end":49,"column_start":24,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":403}],"docs":"","sig":null,"attributes":[]},{"id":48,"kind":"Direct","span":{"file_name":"/home/clarisco/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.3/src/schnorrsig.rs","byte_start":113215,"byte_end":113224,"line_start":58,"line_end":58,"column_start":23,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":405}],"docs":"","sig":null,"attributes":[]},{"id":49,"kind":"Direct","span":{"file_name":"/home/clarisco/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.3/src/schnorrsig.rs","byte_start":113353,"byte_end":113362,"line_start":64,"line_end":64,"column_start":23,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":407},{"krate":0,"index":408}],"docs":"","sig":null,"attributes":[]},{"id":50,"kind":"Direct","span":{"file_name":"/home/clarisco/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.3/src/schnorrsig.rs","byte_start":114164,"byte_end":114173,"line_start":85,"line_end":85,"column_start":24,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":411}],"docs":"","sig":null,"attributes":[]},{"id":51,"kind":"Direct","span":{"file_name":"/home/clarisco/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.3/src/schnorrsig.rs","byte_start":114395,"byte_end":114404,"line_start":95,"line_end":95,"column_start":23,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":413}],"docs":"","sig":null,"attributes":[]},{"id":52,"kind":"Direct","span":{"file_name":"/home/clarisco/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.3/src/schnorrsig.rs","byte_start":114533,"byte_end":114542,"line_start":101,"line_end":101,"column_start":23,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":415},{"krate":0,"index":416}],"docs":"","sig":null,"attributes":[]},{"id":53,"kind":"Inherent","span":{"file_name":"/home/clarisco/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.3/src/schnorrsig.rs","byte_start":114949,"byte_end":114958,"line_start":114,"line_end":114,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":419}],"docs":"","sig":null,"attributes":[]},{"id":54,"kind":"Inherent","span":{"file_name":"/home/clarisco/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.3/src/schnorrsig.rs","byte_start":115404,"byte_end":115411,"line_start":129,"line_end":129,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":422},{"krate":0,"index":423},{"krate":0,"index":424},{"krate":0,"index":426},{"krate":0,"index":428},{"krate":0,"index":431}],"docs":"","sig":null,"attributes":[]},{"id":55,"kind":"Inherent","span":{"file_name":"/home/clarisco/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.3/src/schnorrsig.rs","byte_start":119063,"byte_end":119072,"line_start":243,"line_end":243,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":434},{"krate":0,"index":435},{"krate":0,"index":436},{"krate":0,"index":438},{"krate":0,"index":439},{"krate":0,"index":442},{"krate":0,"index":444}],"docs":"","sig":null,"attributes":[]},{"id":56,"kind":"Direct","span":{"file_name":"/home/clarisco/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.3/src/schnorrsig.rs","byte_start":123784,"byte_end":123793,"line_start":388,"line_end":388,"column_start":15,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":448},{"krate":0,"index":449},{"krate":0,"index":450}],"docs":"","sig":null,"attributes":[]},{"id":57,"kind":"Direct","span":{"file_name":"/home/clarisco/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.3/src/schnorrsig.rs","byte_start":124102,"byte_end":124111,"line_start":400,"line_end":400,"column_start":36,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":452}],"docs":"","sig":null,"attributes":[]},{"id":58,"kind":"Direct","span":{"file_name":"/home/clarisco/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.3/src/schnorrsig.rs","byte_start":124243,"byte_end":124252,"line_start":407,"line_end":407,"column_start":33,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":454}],"docs":"","sig":null,"attributes":[]},{"id":59,"kind":"Inherent","span":{"file_name":"/home/clarisco/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.3/src/schnorrsig.rs","byte_start":125591,"byte_end":125600,"line_start":452,"line_end":452,"column_start":18,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":457},{"krate":0,"index":459},{"krate":0,"index":460},{"krate":0,"index":462}],"docs":"","sig":null,"attributes":[]},{"id":60,"kind":"Direct","span":{"file_name":"/home/clarisco/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.3/src/lib.rs","byte_start":6861,"byte_end":6870,"line_start":179,"line_end":179,"column_start":21,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":487}],"docs":"","sig":null,"attributes":[]},{"id":61,"kind":"Direct","span":{"file_name":"/home/clarisco/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.3/src/lib.rs","byte_start":6986,"byte_end":6995,"line_start":185,"line_end":185,"column_start":23,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":489}],"docs":"","sig":null,"attributes":[]},{"id":62,"kind":"Direct","span":{"file_name":"/home/clarisco/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.3/src/lib.rs","byte_start":7192,"byte_end":7201,"line_start":195,"line_end":195,"column_start":23,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":491},{"krate":0,"index":492}],"docs":"","sig":null,"attributes":[]},{"id":63,"kind":"Inherent","span":{"file_name":"/home/clarisco/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.3/src/lib.rs","byte_start":8330,"byte_end":8349,"line_start":235,"line_end":235,"column_start":6,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":498},{"krate":0,"index":499},{"krate":0,"index":500},{"krate":0,"index":501},{"krate":0,"index":502},{"krate":0,"index":503},{"krate":0,"index":504}],"docs":"","sig":null,"attributes":[]},{"id":64,"kind":"Inherent","span":{"file_name":"/home/clarisco/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.3/src/lib.rs","byte_start":9359,"byte_end":9368,"line_start":272,"line_end":272,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":506},{"krate":0,"index":507},{"krate":0,"index":508},{"krate":0,"index":509},{"krate":0,"index":510},{"krate":0,"index":511},{"krate":0,"index":512},{"krate":0,"index":513}],"docs":"","sig":null,"attributes":[]},{"id":65,"kind":"Direct","span":{"file_name":"/home/clarisco/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.3/src/lib.rs","byte_start":14388,"byte_end":14397,"line_start":413,"line_end":413,"column_start":15,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":517},{"krate":0,"index":518},{"krate":0,"index":519}],"docs":"","sig":null,"attributes":[]},{"id":66,"kind":"Direct","span":{"file_name":"/home/clarisco/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.3/src/lib.rs","byte_start":14679,"byte_end":14688,"line_start":425,"line_end":425,"column_start":31,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":521}],"docs":"","sig":null,"attributes":[]},{"id":67,"kind":"Inherent","span":{"file_name":"/home/clarisco/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.3/src/lib.rs","byte_start":15856,"byte_end":15863,"line_start":465,"line_end":465,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":527}],"docs":"","sig":null,"attributes":[]},{"id":68,"kind":"Direct","span":{"file_name":"/home/clarisco/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.3/src/lib.rs","byte_start":17470,"byte_end":17477,"line_start":505,"line_end":505,"column_start":40,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":531}],"docs":"","sig":null,"attributes":[]},{"id":69,"kind":"Inherent","span":{"file_name":"/home/clarisco/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.3/src/lib.rs","byte_start":18364,"byte_end":18369,"line_start":536,"line_end":536,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":533}],"docs":"","sig":null,"attributes":[]},{"id":70,"kind":"Direct","span":{"file_name":"/home/clarisco/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.3/src/lib.rs","byte_start":19209,"byte_end":19214,"line_start":553,"line_end":553,"column_start":23,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":535}],"docs":"","sig":null,"attributes":[]},{"id":71,"kind":"Direct","span":{"file_name":"/home/clarisco/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.3/src/lib.rs","byte_start":19382,"byte_end":19387,"line_start":560,"line_end":560,"column_start":28,"column_end":33},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":72,"kind":"Direct","span":{"file_name":"/home/clarisco/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.3/src/lib.rs","byte_start":19694,"byte_end":19703,"line_start":571,"line_end":571,"column_start":34,"column_end":43},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":73,"kind":"Direct","span":{"file_name":"/home/clarisco/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.3/src/lib.rs","byte_start":19839,"byte_end":19848,"line_start":573,"line_end":573,"column_start":34,"column_end":43},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":74,"kind":"Direct","span":{"file_name":"/home/clarisco/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.3/src/lib.rs","byte_start":19888,"byte_end":19897,"line_start":576,"line_end":576,"column_start":32,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":548}],"docs":"","sig":null,"attributes":[]},{"id":75,"kind":"Direct","span":{"file_name":"/home/clarisco/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.3/src/lib.rs","byte_start":19980,"byte_end":19999,"line_start":580,"line_end":580,"column_start":18,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":550}],"docs":"","sig":null,"attributes":[]},{"id":76,"kind":"Direct","span":{"file_name":"/home/clarisco/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.3/src/lib.rs","byte_start":20161,"byte_end":20180,"line_start":589,"line_end":589,"column_start":20,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":553}],"docs":"","sig":null,"attributes":[]},{"id":77,"kind":"Direct","span":{"file_name":"/home/clarisco/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.3/src/lib.rs","byte_start":20326,"byte_end":20345,"line_start":595,"line_end":595,"column_start":22,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":555}],"docs":"","sig":null,"attributes":[]},{"id":78,"kind":"Direct","span":{"file_name":"/home/clarisco/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.3/src/lib.rs","byte_start":20435,"byte_end":20454,"line_start":601,"line_end":601,"column_start":16,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":557},{"krate":0,"index":558}],"docs":"","sig":null,"attributes":[]},{"id":79,"kind":"Direct","span":{"file_name":"/home/clarisco/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.3/src/lib.rs","byte_start":20564,"byte_end":20583,"line_start":608,"line_end":608,"column_start":13,"column_end":32},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":80,"kind":"Direct","span":{"file_name":"/home/clarisco/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.3/src/lib.rs","byte_start":20612,"byte_end":20621,"line_start":610,"line_end":610,"column_start":25,"column_end":34},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":81,"kind":"Direct","span":{"file_name":"/home/clarisco/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.3/src/lib.rs","byte_start":20656,"byte_end":20665,"line_start":612,"line_end":612,"column_start":27,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":564}],"docs":"","sig":null,"attributes":[]},{"id":82,"kind":"Direct","span":{"file_name":"/home/clarisco/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.3/src/lib.rs","byte_start":20884,"byte_end":20893,"line_start":621,"line_end":621,"column_start":33,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":567}],"docs":"","sig":null,"attributes":[]},{"id":83,"kind":"Inherent","span":{"file_name":"/home/clarisco/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.3/src/lib.rs","byte_start":21060,"byte_end":21069,"line_start":627,"line_end":627,"column_start":18,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":570},{"krate":0,"index":571},{"krate":0,"index":572}],"docs":"","sig":null,"attributes":[]},{"id":84,"kind":"Inherent","span":{"file_name":"/home/clarisco/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.3/src/lib.rs","byte_start":23961,"byte_end":23970,"line_start":702,"line_end":702,"column_start":18,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":580},{"krate":0,"index":581},{"krate":0,"index":585},{"krate":0,"index":587}],"docs":"","sig":null,"attributes":[]},{"id":85,"kind":"Inherent","span":{"file_name":"/home/clarisco/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.3/src/lib.rs","byte_start":28257,"byte_end":28266,"line_start":791,"line_end":791,"column_start":23,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":590}],"docs":"","sig":null,"attributes":[]}],"refs":[{"kind":"Mod","span":{"file_name":"/home/clarisco/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.3/src/lib.rs","byte_start":6147,"byte_end":6156,"line_start":145,"line_end":145,"column_start":9,"column_end":18},"ref_id":{"krate":0,"index":164}},{"kind":"Mod","span":{"file_name":"/home/clarisco/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.3/src/lib.rs","byte_start":6166,"byte_end":6170,"line_start":146,"line_end":146,"column_start":9,"column_end":13},"ref_id":{"krate":0,"index":182}},{"kind":"Mod","span":{"file_name":"/home/clarisco/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.3/src/lib.rs","byte_start":6180,"byte_end":6183,"line_start":147,"line_end":147,"column_start":9,"column_end":12},"ref_id":{"krate":0,"index":242}},{"kind":"Mod","span":{"file_name":"/home/clarisco/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.3/src/lib.rs","byte_start":6193,"byte_end":6203,"line_start":148,"line_end":148,"column_start":9,"column_end":19},"ref_id":{"krate":0,"index":346}}],"macro_refs":[],"relations":[{"span":{"file_name":"/home/clarisco/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.3/src/context.rs","byte_start":55202,"byte_end":55208,"line_start":54,"line_end":54,"column_start":37,"column_end":43},"kind":"SuperTrait","from":{"krate":0,"index":73},"to":{"krate":0,"index":56}},{"span":{"file_name":"/home/clarisco/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.3/src/context.rs","byte_start":55584,"byte_end":55591,"line_start":64,"line_end":64,"column_start":20,"column_end":27},"kind":"SuperTrait","from":{"krate":0,"index":56},"to":{"krate":0,"index":60}},{"span":{"file_name":"/home/clarisco/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.3/src/context.rs","byte_start":55714,"byte_end":55721,"line_start":67,"line_end":67,"column_start":25,"column_end":32},"kind":"SuperTrait","from":{"krate":0,"index":56},"to":{"krate":0,"index":61}},{"span":{"file_name":"/home/clarisco/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.3/src/context.rs","byte_start":56522,"byte_end":56537,"line_start":91,"line_end":91,"column_start":27,"column_end":42},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":68},"to":{"krate":0,"index":73}},{"span":{"file_name":"/home/clarisco/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.3/src/context.rs","byte_start":56573,"byte_end":56595,"line_start":92,"line_end":92,"column_start":27,"column_end":49},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":65},"to":{"krate":0,"index":73}},{"span":{"file_name":"/home/clarisco/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.3/src/context.rs","byte_start":56631,"byte_end":56651,"line_start":93,"line_end":93,"column_start":27,"column_end":47},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":62},"to":{"krate":0,"index":73}},{"span":{"file_name":"/home/clarisco/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.3/src/context.rs","byte_start":56862,"byte_end":56870,"line_start":103,"line_end":103,"column_start":30,"column_end":38},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":89},"to":{"krate":0,"index":73}},{"span":{"file_name":"/home/clarisco/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.3/src/context.rs","byte_start":56903,"byte_end":56906,"line_start":104,"line_end":104,"column_start":30,"column_end":33},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":91},"to":{"krate":0,"index":73}},{"span":{"file_name":"/home/clarisco/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.3/src/context.rs","byte_start":56939,"byte_end":56949,"line_start":105,"line_end":105,"column_start":30,"column_end":40},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":90},"to":{"krate":0,"index":73}},{"span":{"file_name":"/home/clarisco/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.3/src/context.rs","byte_start":57308,"byte_end":57316,"line_start":119,"line_end":119,"column_start":22,"column_end":30},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":89},"to":{"krate":0,"index":60}},{"span":{"file_name":"/home/clarisco/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.3/src/context.rs","byte_start":57341,"byte_end":57344,"line_start":120,"line_end":120,"column_start":22,"column_end":25},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":91},"to":{"krate":0,"index":60}},{"span":{"file_name":"/home/clarisco/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.3/src/context.rs","byte_start":57375,"byte_end":57385,"line_start":122,"line_end":122,"column_start":27,"column_end":37},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":90},"to":{"krate":0,"index":61}},{"span":{"file_name":"/home/clarisco/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.3/src/context.rs","byte_start":57415,"byte_end":57418,"line_start":123,"line_end":123,"column_start":27,"column_end":30},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":91},"to":{"krate":0,"index":61}},{"span":{"file_name":"/home/clarisco/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.3/src/context.rs","byte_start":57451,"byte_end":57459,"line_start":125,"line_end":125,"column_start":29,"column_end":37},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":89},"to":{"krate":0,"index":56}},{"span":{"file_name":"/home/clarisco/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.3/src/context.rs","byte_start":57804,"byte_end":57814,"line_start":135,"line_end":135,"column_start":29,"column_end":39},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":90},"to":{"krate":0,"index":56}},{"span":{"file_name":"/home/clarisco/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.3/src/context.rs","byte_start":58166,"byte_end":58169,"line_start":145,"line_end":145,"column_start":29,"column_end":32},"kind":{"Impl":{"id":12}},"from":{"krate":0,"index":91},"to":{"krate":0,"index":56}},{"span":{"file_name":"/home/clarisco/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.3/src/context.rs","byte_start":58521,"byte_end":58530,"line_start":155,"line_end":155,"column_start":22,"column_end":31},"kind":{"Impl":{"id":13}},"from":{"krate":0,"index":537},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/clarisco/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.3/src/context.rs","byte_start":59199,"byte_end":59208,"line_start":172,"line_end":172,"column_start":10,"column_end":19},"kind":{"Impl":{"id":14}},"from":{"krate":0,"index":537},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/clarisco/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.3/src/context.rs","byte_start":59382,"byte_end":59391,"line_start":179,"line_end":179,"column_start":10,"column_end":19},"kind":{"Impl":{"id":15}},"from":{"krate":0,"index":537},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/clarisco/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.3/src/context.rs","byte_start":59596,"byte_end":59605,"line_start":186,"line_end":186,"column_start":10,"column_end":19},"kind":{"Impl":{"id":16}},"from":{"krate":0,"index":537},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/clarisco/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.3/src/context.rs","byte_start":59836,"byte_end":59845,"line_start":193,"line_end":193,"column_start":22,"column_end":31},"kind":{"Impl":{"id":17}},"from":{"krate":0,"index":537},"to":{"krate":2,"index":2994}},{"span":{"file_name":"/home/clarisco/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.3/src/context.rs","byte_start":59956,"byte_end":59965,"line_start":199,"line_end":199,"column_start":32,"column_end":41},"kind":{"Impl":{"id":18}},"from":{"krate":0,"index":537},"to":{"krate":2,"index":2637}},{"span":{"file_name":"/home/clarisco/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.3/src/context.rs","byte_start":60488,"byte_end":60508,"line_start":213,"line_end":213,"column_start":24,"column_end":44},"kind":{"Impl":{"id":19}},"from":{"krate":0,"index":62},"to":{"krate":0,"index":60}},{"span":{"file_name":"/home/clarisco/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.3/src/context.rs","byte_start":60541,"byte_end":60556,"line_start":214,"line_end":214,"column_start":24,"column_end":39},"kind":{"Impl":{"id":20}},"from":{"krate":0,"index":68},"to":{"krate":0,"index":60}},{"span":{"file_name":"/home/clarisco/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.3/src/context.rs","byte_start":60595,"byte_end":60617,"line_start":216,"line_end":216,"column_start":29,"column_end":51},"kind":{"Impl":{"id":21}},"from":{"krate":0,"index":65},"to":{"krate":0,"index":61}},{"span":{"file_name":"/home/clarisco/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.3/src/context.rs","byte_start":60655,"byte_end":60670,"line_start":217,"line_end":217,"column_start":29,"column_end":44},"kind":{"Impl":{"id":22}},"from":{"krate":0,"index":68},"to":{"krate":0,"index":61}},{"span":{"file_name":"/home/clarisco/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.3/src/context.rs","byte_start":60711,"byte_end":60731,"line_start":219,"line_end":219,"column_start":31,"column_end":51},"kind":{"Impl":{"id":23}},"from":{"krate":0,"index":62},"to":{"krate":0,"index":56}},{"span":{"file_name":"/home/clarisco/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.3/src/context.rs","byte_start":60976,"byte_end":60998,"line_start":228,"line_end":228,"column_start":31,"column_end":53},"kind":{"Impl":{"id":24}},"from":{"krate":0,"index":65},"to":{"krate":0,"index":56}},{"span":{"file_name":"/home/clarisco/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.3/src/context.rs","byte_start":61250,"byte_end":61265,"line_start":237,"line_end":237,"column_start":31,"column_end":46},"kind":{"Impl":{"id":25}},"from":{"krate":0,"index":68},"to":{"krate":0,"index":56}},{"span":{"file_name":"/home/clarisco/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.3/src/context.rs","byte_start":61548,"byte_end":61557,"line_start":246,"line_end":246,"column_start":31,"column_end":40},"kind":{"Impl":{"id":26}},"from":{"krate":0,"index":537},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/clarisco/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.3/src/context.rs","byte_start":62333,"byte_end":62342,"line_start":267,"line_end":267,"column_start":12,"column_end":21},"kind":{"Impl":{"id":27}},"from":{"krate":0,"index":537},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/clarisco/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.3/src/context.rs","byte_start":63759,"byte_end":63768,"line_start":297,"line_end":297,"column_start":12,"column_end":21},"kind":{"Impl":{"id":28}},"from":{"krate":0,"index":537},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/clarisco/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.3/src/context.rs","byte_start":65291,"byte_end":65300,"line_start":329,"line_end":329,"column_start":12,"column_end":21},"kind":{"Impl":{"id":29}},"from":{"krate":0,"index":537},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/clarisco/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.3/src/ecdh.rs","byte_start":70464,"byte_end":70476,"line_start":39,"line_end":39,"column_start":6,"column_end":18},"kind":{"Impl":{"id":30}},"from":{"krate":0,"index":592},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/clarisco/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.3/src/ecdh.rs","byte_start":71357,"byte_end":71369,"line_start":76,"line_end":76,"column_start":20,"column_end":32},"kind":{"Impl":{"id":31}},"from":{"krate":0,"index":592},"to":{"krate":2,"index":2667}},{"span":{"file_name":"/home/clarisco/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.3/src/ecdh.rs","byte_start":71491,"byte_end":71503,"line_start":82,"line_end":82,"column_start":22,"column_end":34},"kind":{"Impl":{"id":32}},"from":{"krate":0,"index":592},"to":{"krate":2,"index":2913}},{"span":{"file_name":"/home/clarisco/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.3/src/ecdh.rs","byte_start":71593,"byte_end":71605,"line_start":88,"line_end":88,"column_start":16,"column_end":28},"kind":{"Impl":{"id":33}},"from":{"krate":0,"index":592},"to":{"krate":2,"index":3227}},{"span":{"file_name":"/home/clarisco/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.3/src/ecdh.rs","byte_start":71942,"byte_end":71954,"line_start":102,"line_end":102,"column_start":6,"column_end":18},"kind":{"Impl":{"id":34}},"from":{"krate":0,"index":592},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/clarisco/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.3/src/key.rs","byte_start":78286,"byte_end":78295,"line_start":34,"line_end":34,"column_start":24,"column_end":33},"kind":{"Impl":{"id":35}},"from":{"krate":0,"index":283},"to":{"krate":2,"index":9407}},{"span":{"file_name":"/home/clarisco/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.3/src/key.rs","byte_start":78484,"byte_end":78493,"line_start":43,"line_end":43,"column_start":23,"column_end":32},"kind":{"Impl":{"id":36}},"from":{"krate":0,"index":283},"to":{"krate":2,"index":9401}},{"span":{"file_name":"/home/clarisco/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.3/src/key.rs","byte_start":78622,"byte_end":78631,"line_start":49,"line_end":49,"column_start":23,"column_end":32},"kind":{"Impl":{"id":37}},"from":{"krate":0,"index":283},"to":{"krate":2,"index":11935}},{"span":{"file_name":"/home/clarisco/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.3/src/key.rs","byte_start":79450,"byte_end":79459,"line_start":71,"line_end":71,"column_start":24,"column_end":33},"kind":{"Impl":{"id":38}},"from":{"krate":0,"index":687},"to":{"krate":2,"index":9407}},{"span":{"file_name":"/home/clarisco/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.3/src/key.rs","byte_start":79681,"byte_end":79690,"line_start":81,"line_end":81,"column_start":23,"column_end":32},"kind":{"Impl":{"id":39}},"from":{"krate":0,"index":687},"to":{"krate":2,"index":9401}},{"span":{"file_name":"/home/clarisco/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.3/src/key.rs","byte_start":79819,"byte_end":79828,"line_start":87,"line_end":87,"column_start":23,"column_end":32},"kind":{"Impl":{"id":40}},"from":{"krate":0,"index":687},"to":{"krate":2,"index":11935}},{"span":{"file_name":"/home/clarisco/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.3/src/key.rs","byte_start":80547,"byte_end":80556,"line_start":112,"line_end":112,"column_start":6,"column_end":15},"kind":{"Impl":{"id":41}},"from":{"krate":0,"index":283},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/clarisco/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.3/src/key.rs","byte_start":84458,"byte_end":84467,"line_start":244,"line_end":244,"column_start":6,"column_end":15},"kind":{"Impl":{"id":42}},"from":{"krate":0,"index":687},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/clarisco/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.3/src/key.rs","byte_start":90497,"byte_end":90506,"line_start":423,"line_end":423,"column_start":15,"column_end":24},"kind":{"Impl":{"id":43}},"from":{"krate":0,"index":687},"to":{"krate":20,"index":173}},{"span":{"file_name":"/home/clarisco/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.3/src/key.rs","byte_start":90791,"byte_end":90800,"line_start":436,"line_end":436,"column_start":31,"column_end":40},"kind":{"Impl":{"id":44}},"from":{"krate":0,"index":687},"to":{"krate":2,"index":2922}},{"span":{"file_name":"/home/clarisco/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.3/src/key.rs","byte_start":91784,"byte_end":91793,"line_start":470,"line_end":470,"column_start":21,"column_end":30},"kind":{"Impl":{"id":45}},"from":{"krate":0,"index":687},"to":{"krate":2,"index":2714}},{"span":{"file_name":"/home/clarisco/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.3/src/key.rs","byte_start":91955,"byte_end":91964,"line_start":476,"line_end":476,"column_start":14,"column_end":23},"kind":{"Impl":{"id":46}},"from":{"krate":0,"index":687},"to":{"krate":2,"index":2703}},{"span":{"file_name":"/home/clarisco/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.3/src/schnorrsig.rs","byte_start":113018,"byte_end":113027,"line_start":49,"line_end":49,"column_start":24,"column_end":33},"kind":{"Impl":{"id":47}},"from":{"krate":0,"index":398},"to":{"krate":2,"index":9407}},{"span":{"file_name":"/home/clarisco/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.3/src/schnorrsig.rs","byte_start":113215,"byte_end":113224,"line_start":58,"line_end":58,"column_start":23,"column_end":32},"kind":{"Impl":{"id":48}},"from":{"krate":0,"index":398},"to":{"krate":2,"index":9401}},{"span":{"file_name":"/home/clarisco/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.3/src/schnorrsig.rs","byte_start":113353,"byte_end":113362,"line_start":64,"line_end":64,"column_start":23,"column_end":32},"kind":{"Impl":{"id":49}},"from":{"krate":0,"index":398},"to":{"krate":2,"index":11935}},{"span":{"file_name":"/home/clarisco/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.3/src/schnorrsig.rs","byte_start":114164,"byte_end":114173,"line_start":85,"line_end":85,"column_start":24,"column_end":33},"kind":{"Impl":{"id":50}},"from":{"krate":0,"index":767},"to":{"krate":2,"index":9407}},{"span":{"file_name":"/home/clarisco/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.3/src/schnorrsig.rs","byte_start":114395,"byte_end":114404,"line_start":95,"line_end":95,"column_start":23,"column_end":32},"kind":{"Impl":{"id":51}},"from":{"krate":0,"index":767},"to":{"krate":2,"index":9401}},{"span":{"file_name":"/home/clarisco/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.3/src/schnorrsig.rs","byte_start":114533,"byte_end":114542,"line_start":101,"line_end":101,"column_start":23,"column_end":32},"kind":{"Impl":{"id":52}},"from":{"krate":0,"index":767},"to":{"krate":2,"index":11935}},{"span":{"file_name":"/home/clarisco/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.3/src/schnorrsig.rs","byte_start":114949,"byte_end":114958,"line_start":114,"line_end":114,"column_start":6,"column_end":15},"kind":{"Impl":{"id":53}},"from":{"krate":0,"index":398},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/clarisco/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.3/src/schnorrsig.rs","byte_start":115404,"byte_end":115411,"line_start":129,"line_end":129,"column_start":6,"column_end":13},"kind":{"Impl":{"id":54}},"from":{"krate":0,"index":745},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/clarisco/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.3/src/schnorrsig.rs","byte_start":119063,"byte_end":119072,"line_start":243,"line_end":243,"column_start":6,"column_end":15},"kind":{"Impl":{"id":55}},"from":{"krate":0,"index":767},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/clarisco/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.3/src/schnorrsig.rs","byte_start":123784,"byte_end":123793,"line_start":388,"line_end":388,"column_start":15,"column_end":24},"kind":{"Impl":{"id":56}},"from":{"krate":0,"index":767},"to":{"krate":20,"index":173}},{"span":{"file_name":"/home/clarisco/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.3/src/schnorrsig.rs","byte_start":124102,"byte_end":124111,"line_start":400,"line_end":400,"column_start":36,"column_end":45},"kind":{"Impl":{"id":57}},"from":{"krate":0,"index":767},"to":{"krate":2,"index":2922}},{"span":{"file_name":"/home/clarisco/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.3/src/schnorrsig.rs","byte_start":124243,"byte_end":124252,"line_start":407,"line_end":407,"column_start":33,"column_end":42},"kind":{"Impl":{"id":58}},"from":{"krate":0,"index":767},"to":{"krate":2,"index":2922}},{"span":{"file_name":"/home/clarisco/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.3/src/schnorrsig.rs","byte_start":125591,"byte_end":125600,"line_start":452,"line_end":452,"column_start":18,"column_end":27},"kind":{"Impl":{"id":59}},"from":{"krate":0,"index":537},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/clarisco/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.3/src/lib.rs","byte_start":6861,"byte_end":6870,"line_start":179,"line_end":179,"column_start":21,"column_end":30},"kind":{"Impl":{"id":60}},"from":{"krate":0,"index":789},"to":{"krate":2,"index":9394}},{"span":{"file_name":"/home/clarisco/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.3/src/lib.rs","byte_start":6986,"byte_end":6995,"line_start":185,"line_end":185,"column_start":23,"column_end":32},"kind":{"Impl":{"id":61}},"from":{"krate":0,"index":789},"to":{"krate":2,"index":9401}},{"span":{"file_name":"/home/clarisco/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.3/src/lib.rs","byte_start":7192,"byte_end":7201,"line_start":195,"line_end":195,"column_start":23,"column_end":32},"kind":{"Impl":{"id":62}},"from":{"krate":0,"index":789},"to":{"krate":2,"index":11935}},{"span":{"file_name":"/home/clarisco/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.3/src/lib.rs","byte_start":8330,"byte_end":8349,"line_start":235,"line_end":235,"column_start":6,"column_end":25},"kind":{"Impl":{"id":63}},"from":{"krate":0,"index":802},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/clarisco/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.3/src/lib.rs","byte_start":9359,"byte_end":9368,"line_start":272,"line_end":272,"column_start":6,"column_end":15},"kind":{"Impl":{"id":64}},"from":{"krate":0,"index":789},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/clarisco/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.3/src/lib.rs","byte_start":14388,"byte_end":14397,"line_start":413,"line_end":413,"column_start":15,"column_end":24},"kind":{"Impl":{"id":65}},"from":{"krate":0,"index":789},"to":{"krate":20,"index":173}},{"span":{"file_name":"/home/clarisco/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.3/src/lib.rs","byte_start":14679,"byte_end":14688,"line_start":425,"line_end":425,"column_start":31,"column_end":40},"kind":{"Impl":{"id":66}},"from":{"krate":0,"index":789},"to":{"krate":2,"index":2922}},{"span":{"file_name":"/home/clarisco/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.3/src/lib.rs","byte_start":15856,"byte_end":15863,"line_start":465,"line_end":465,"column_start":6,"column_end":13},"kind":{"Impl":{"id":67}},"from":{"krate":0,"index":522},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/clarisco/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.3/src/lib.rs","byte_start":17470,"byte_end":17477,"line_start":505,"line_end":505,"column_start":40,"column_end":47},"kind":{"Impl":{"id":68}},"from":{"krate":0,"index":522},"to":{"krate":2,"index":2922}},{"span":{"file_name":"/home/clarisco/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.3/src/lib.rs","byte_start":18364,"byte_end":18369,"line_start":536,"line_end":536,"column_start":6,"column_end":11},"kind":{"Impl":{"id":69}},"from":{"krate":0,"index":850},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/clarisco/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.3/src/lib.rs","byte_start":19209,"byte_end":19214,"line_start":553,"line_end":553,"column_start":23,"column_end":28},"kind":{"Impl":{"id":70}},"from":{"krate":0,"index":850},"to":{"krate":2,"index":9401}},{"span":{"file_name":"/home/clarisco/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.3/src/lib.rs","byte_start":19382,"byte_end":19387,"line_start":560,"line_end":560,"column_start":28,"column_end":33},"kind":{"Impl":{"id":71}},"from":{"krate":0,"index":850},"to":{"krate":1,"index":2338}},{"span":{"file_name":"/home/clarisco/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.3/src/lib.rs","byte_start":19694,"byte_end":19703,"line_start":571,"line_end":571,"column_start":34,"column_end":43},"kind":{"Impl":{"id":72}},"from":{"krate":0,"index":537},"to":{"krate":2,"index":3016}},{"span":{"file_name":"/home/clarisco/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.3/src/lib.rs","byte_start":19839,"byte_end":19848,"line_start":573,"line_end":573,"column_start":34,"column_end":43},"kind":{"Impl":{"id":73}},"from":{"krate":0,"index":537},"to":{"krate":2,"index":3028}},{"span":{"file_name":"/home/clarisco/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.3/src/lib.rs","byte_start":19888,"byte_end":19897,"line_start":576,"line_end":576,"column_start":32,"column_end":41},"kind":{"Impl":{"id":74}},"from":{"krate":0,"index":537},"to":{"krate":2,"index":2667}},{"span":{"file_name":"/home/clarisco/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.3/src/lib.rs","byte_start":19980,"byte_end":19999,"line_start":580,"line_end":580,"column_start":18,"column_end":37},"kind":{"Impl":{"id":75}},"from":{"krate":0,"index":802},"to":{"krate":2,"index":2994}},{"span":{"file_name":"/home/clarisco/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.3/src/lib.rs","byte_start":20161,"byte_end":20180,"line_start":589,"line_end":589,"column_start":20,"column_end":39},"kind":{"Impl":{"id":76}},"from":{"krate":0,"index":802},"to":{"krate":2,"index":2667}},{"span":{"file_name":"/home/clarisco/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.3/src/lib.rs","byte_start":20326,"byte_end":20345,"line_start":595,"line_end":595,"column_start":22,"column_end":41},"kind":{"Impl":{"id":77}},"from":{"krate":0,"index":802},"to":{"krate":2,"index":2913}},{"span":{"file_name":"/home/clarisco/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.3/src/lib.rs","byte_start":20435,"byte_end":20454,"line_start":601,"line_end":601,"column_start":16,"column_end":35},"kind":{"Impl":{"id":78}},"from":{"krate":0,"index":802},"to":{"krate":2,"index":3227}},{"span":{"file_name":"/home/clarisco/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.3/src/lib.rs","byte_start":20564,"byte_end":20583,"line_start":608,"line_end":608,"column_start":13,"column_end":32},"kind":{"Impl":{"id":79}},"from":{"krate":0,"index":802},"to":{"krate":2,"index":2672}},{"span":{"file_name":"/home/clarisco/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.3/src/lib.rs","byte_start":20612,"byte_end":20621,"line_start":610,"line_end":610,"column_start":25,"column_end":34},"kind":{"Impl":{"id":80}},"from":{"krate":0,"index":537},"to":{"krate":2,"index":2672}},{"span":{"file_name":"/home/clarisco/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.3/src/lib.rs","byte_start":20656,"byte_end":20665,"line_start":612,"line_end":612,"column_start":27,"column_end":36},"kind":{"Impl":{"id":81}},"from":{"krate":0,"index":537},"to":{"krate":2,"index":3251}},{"span":{"file_name":"/home/clarisco/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.3/src/lib.rs","byte_start":20884,"byte_end":20893,"line_start":621,"line_end":621,"column_start":33,"column_end":42},"kind":{"Impl":{"id":82}},"from":{"krate":0,"index":537},"to":{"krate":2,"index":9394}},{"span":{"file_name":"/home/clarisco/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.3/src/lib.rs","byte_start":21060,"byte_end":21069,"line_start":627,"line_end":627,"column_start":18,"column_end":27},"kind":{"Impl":{"id":83}},"from":{"krate":0,"index":537},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/clarisco/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.3/src/lib.rs","byte_start":23961,"byte_end":23970,"line_start":702,"line_end":702,"column_start":18,"column_end":27},"kind":{"Impl":{"id":84}},"from":{"krate":0,"index":537},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/clarisco/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.20.3/src/lib.rs","byte_start":28257,"byte_end":28266,"line_start":791,"line_end":791,"column_start":23,"column_end":32},"kind":{"Impl":{"id":85}},"from":{"krate":0,"index":537},"to":{"krate":4294967295,"index":4294967295}}]}